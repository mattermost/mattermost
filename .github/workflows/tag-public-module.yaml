name: Tag Public Module

on:
  workflow_dispatch:
    inputs:
      semver_bump:
        type: choice
        required: false
        description: The semver update level
        options:
          - patch
          - minor
          - major
        default: patch
      commit_sha:
        type: string
        description: The commit sha to tag. Defaults to HEAD master
        required: false

jobs:
  tag-public-module:
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    env:
      COMMIT_SHA: ${{ inputs.commit_sha }}
    steps:
      - name: release/checkout-mattermost
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: release/find-latest-public-module-tags
        run: |
          echo LATEST_MODULE_TAG=$(git tag --list 'server/public/*' --format='%(refname:lstrip=-1)'  --sort -v:refname | head -1) >> ${GITHUB_ENV}

      - name: release/validate-commit-sha
        run: |
          if [ -n "$COMMIT_SHA" ]; then
            # Validate commit SHA format (40 character hex string)
            if [[ ! "$COMMIT_SHA" =~ ^[a-f0-9]{40}$ ]]; then
              echo "Error: Invalid commit SHA format. Must be a 40-character hexadecimal string."
              exit 1
            fi
            # Verify the commit exists in the repository
            if ! git cat-file -e "$COMMIT_SHA" 2>/dev/null; then
              echo "Error: Commit SHA '$COMMIT_SHA' does not exist in the repository."
              exit 1
            fi
            echo "Commit SHA validation passed: $COMMIT_SHA"
          else
            echo "No commit SHA provided, will use HEAD"
          fi

      - name: release/generate-module-release-notes
        run: |
          echo "RELEASE_NOTES<<EOF" >> ${GITHUB_ENV}
          if [ -z "$COMMIT_SHA" ]; then
            echo "$(git log --oneline --graph --decorate --abbrev-commit server/public/${{ env.LATEST_MODULE_TAG }}...$(git rev-parse HEAD) server/public)" >> ${GITHUB_ENV}
          else
            echo "$(git log --oneline --graph --decorate --abbrev-commit server/public/${{ env.LATEST_MODULE_TAG }}...${COMMIT_SHA} server/public)" >> ${GITHUB_ENV}
          fi
          echo "EOF" >> ${GITHUB_ENV}

      - name: release/semver-bump
        uses: mattermost/action-bump-semver@51a0e77acb7b1769f17ce3e0ee89f0a3b0978d51
        id: bump-semver
        with:
          current_version: ${{ env.LATEST_MODULE_TAG }}
          level: ${{ inputs.semver_bump }}

      - name: release/create-annotated-tag
        uses: mattermost/actions/delivery/create-tag@d5174b860704729f4c14ef8489ae075742bfa08a
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: server/public/${{ steps.bump-semver.outputs.new_version }}
          message: ${{ env.RELEASE_NOTES }}
          commit_sha: ${{ inputs.commit_sha || github.sha }}
