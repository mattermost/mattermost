name : End-to-End testing with tR
#now that we got a workflow file that manages to work on branch push
#we can make it so it sets up mattermost and runs tR tests
on:
  push:
    branches: [tR-e2e-tests, main]
  pull_request:
    branches: [tR-e2e-tests, main]
  workflow_dispatch:

jobs:
  e2e-tests-tR:
    runs-on: ubuntu-24.04
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: mattermost
          POSTGRES_USER: mmuser
          POSTGRES_PASSWORD: mmuser-password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U mmuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-nodejs
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install testrigor CLI
        run: |
          npm install -g testrigor-cli
      
      - name: Set up Mattermost image
        run: |
          docker compose -f docker-compose.yml -f docker-compose.without-nginx.yml up -d      
          curl -l localhost:8065
      
      #- name: Download Mattermost
      #  run: |
      #    wget https://releases.mattermost.com/10.11.2/mattermost-10.11.2-linux-amd64.tar.gz
      #    tar -xvzf mattermost*.gz
      #    mv mattermost /opt
      
      #- name: Set up Mattermost
      #  run: |
      #    sudo mkdir /opt/mattermost/data
      #    sudo useradd --system --user-group mattermost
      #    sudo chown -R mattermost:mattermost /opt/mattermost
      #    sudo chmod -R g+w /opt/mattermost
      #    sudo touch /lib/systemd/system/mattermost.service
      #    sudo systemctl daemon-reload
      #    sudo systemctl
      
      
      

      #- name: Run testrigor tests
      #  env:
      #    CI_TOKEN: ${{ secrets.CI_TOKEN }}
      #    SUITE_ID: ${{ vars.SUITE_ID }}
      #  run: |
      #    testrigor test-suite run "$SUITE_ID" --token "$CI_TOKEN"
        

      #- name: Setup and install PostgreSQL
      #  run: | 
      #    sudo apt install postgresql
      #    locale-gen en_US.UTF-8
      #    sudo -u postgres psql
      #    CREATE DATABASE mattermost WITH ENCODING 'UTF8' LC_COLLATE='en_US.UTF-8' LC_CTYPE='en_US.UTF-8' TEMPLATE=template0;
      #    CREATE USER mmuser WITH PASSWORD 'mmuser-password';
      #    GRANT ALL PRIVILEGES ON DATABASE mattermost to mmuser;

