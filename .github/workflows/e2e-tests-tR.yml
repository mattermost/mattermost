name : End-to-End testing with tR
#now that we got a workflow file that manages to work on branch push
#we can make it so it sets up mattermost and runs tR tests
on:
  push:
    branches: [tR-e2e-tests, main]
  pull_request:
    branches: [tR-e2e-tests, main]
  workflow_dispatch:

jobs:
  e2e-tests-tR:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-nodejs
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install testrigor CLI
        run: |
          npm install -g testrigor-cli
      
      - name: Setup PostgreSQL
        uses: tj-actions/install-postgresql@v3
        with:
          postgresql-version: 17
      
      - name: Download Mattermost
        run: |
          wget https://releases.mattermost.com/9.5.0/mattermost-9.5.0-linux-amd64.tar.gz
          tar -xzf mattermost-9.5.0-linux-amd64.tar.gz
          mv mattermost /opt
      
      

      #- name: Run testrigor tests
      #  env:
      #    CI_TOKEN: ${{ secrets.CI_TOKEN }}
      #    SUITE_ID: ${{ vars.SUITE_ID }}
      #  run: |
      #    testrigor test-suite run "$SUITE_ID" --token "$CI_TOKEN"
        

      #- name: Setup and install PostgreSQL
      #  run: | 
      #    sudo apt install postgresql
      #    locale-gen en_US.UTF-8
      #    sudo -u postgres psql
      #    CREATE DATABASE mattermost WITH ENCODING 'UTF8' LC_COLLATE='en_US.UTF-8' LC_CTYPE='en_US.UTF-8' TEMPLATE=template0;
      #    CREATE USER mmuser WITH PASSWORD 'mmuser-password';
      #    GRANT ALL PRIVILEGES ON DATABASE mattermost to mmuser;

