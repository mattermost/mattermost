// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`plugins/MainMenuActions should match snapshot in mobile view with some plugin and ability to click plugin 1`] = `
<div
  aria-label="main menu"
  className="a11y__popup Menu"
>
  <ul
    className="Menu__content dropdown-menu"
    onClick={[Function]}
    role="menu"
    style={Object {}}
  >
    <Memo(MenuGroup)>
      <Memo(SystemPermissionGate)
        permissions={
          Array [
            "sysconsole_write_billing",
          ]
        }
      >
        <MenuCloudTrial
          id="menuCloudTrial"
        />
      </Memo(SystemPermissionGate)>
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <Memo(SystemPermissionGate)
        permissions={
          Array [
            "sysconsole_write_about_edition_and_license",
          ]
        }
      >
        <MenuStartTrial
          id="startTrial"
        />
      </Memo(SystemPermissionGate)>
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        icon={
          <i
            className="mentions"
          >
            @
          </i>
        }
        id="recentMentions"
        onClick={[Function]}
        show={true}
        text="Recent Mentions"
      />
      <MenuItemAction
        icon={
          <i
            className="fa fa-bookmark"
          />
        }
        id="flaggedPosts"
        onClick={[Function]}
        show={true}
        text="Saved messages"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemToggleModalRedux
        dialogProps={
          Object {
            "isContentProductSettings": false,
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={
          <i
            className="fa fa-user"
          />
        }
        id="profileSettings"
        modalId="user_settings"
        show={true}
        text="Profile"
      />
      <MenuItemToggleModalRedux
        dialogProps={
          Object {
            "isContentProductSettings": true,
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={
          <i
            className="fa fa-cog"
          />
        }
        id="accountSettings"
        modalId="user_settings"
        show={true}
        text="Settings"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <Memo(TeamPermissionGate)
        permissions={
          Array [
            "manage_team",
          ]
        }
        teamId="someteamid"
      >
        <MenuItemToggleModalRedux
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          icon={
            <i
              className="fa fa-user-plus"
            />
          }
          id="addGroupsToTeam"
          modalId="add_groups_to_team"
          show={true}
          text="Add Groups to Team"
        />
      </Memo(TeamPermissionGate)>
      <Memo(TeamPermissionGate)
        permissions={
          Array [
            "add_user_to_team",
            "invite_guest",
          ]
        }
        teamId="someteamid"
      >
        <MenuItemToggleModalRedux
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          extraText="Add people to the team"
          icon={
            <i
              className="fa fa-user-plus"
            />
          }
          id="invitePeople"
          modalId="invitation"
          onClick={[Function]}
          show={true}
          text="Invite People"
        />
      </Memo(TeamPermissionGate)>
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <Memo(TeamPermissionGate)
        permissions={
          Array [
            "manage_team",
          ]
        }
        teamId="someteamid"
      >
        <MenuItemToggleModalRedux
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          icon={
            <i
              className="fa fa-globe"
            />
          }
          id="teamSettings"
          modalId="team_settings"
          show={true}
          text="Team Settings"
        />
      </Memo(TeamPermissionGate)>
      <Memo(TeamPermissionGate)
        permissions={
          Array [
            "manage_team",
          ]
        }
        teamId="someteamid"
      >
        <MenuItemToggleModalRedux
          dialogProps={
            Object {
              "teamID": "someteamid",
            }
          }
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          icon={
            <i
              className="fa fa-user-plus"
            />
          }
          id="manageGroups"
          modalId="manage_team_groups"
          show={true}
          text="Manage Groups"
        />
      </Memo(TeamPermissionGate)>
      <Memo(TeamPermissionGate)
        permissions={
          Array [
            "remove_user_from_team",
            "manage_team_roles",
          ]
        }
        teamId="someteamid"
      >
        <MenuItemToggleModalRedux
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          icon={
            <i
              className="fa fa-users"
            />
          }
          id="manageMembers"
          modalId="team_members"
          show={true}
          text="Manage Members"
        />
      </Memo(TeamPermissionGate)>
      <Memo(TeamPermissionGate)
        invert={true}
        permissions={
          Array [
            "remove_user_from_team",
            "manage_team_roles",
          ]
        }
        teamId="someteamid"
      >
        <MenuItemToggleModalRedux
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          icon={
            <i
              className="fa fa-users"
            />
          }
          id="viewMembers"
          modalId="team_members"
          show={true}
          text="View Members"
        />
      </Memo(TeamPermissionGate)>
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <Memo(SystemPermissionGate)
        permissions={
          Array [
            "create_team",
          ]
        }
      >
        <MenuItemLink
          icon={
            <i
              className="fa fa-plus-square"
            />
          }
          id="createTeam"
          show={true}
          text="Create a Team"
          to="/create_team"
        />
      </Memo(SystemPermissionGate)>
      <MenuItemLink
        icon={
          <i
            className="fa fa-plus-square"
          />
        }
        id="joinTeam"
        show={true}
        text="Join Another Team"
        to="/select_team"
      />
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={<LeaveTeamIcon />}
        id="leaveTeam"
        modalId="leave_team"
        show={false}
        text="Leave Team"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        icon={
          <i
            className="fa fa-anchor"
          />
        }
        id="someplugin_pluginmenuitem"
        key="someplugin_pluginmenuitem"
        onClick={[Function]}
        show={true}
        text="some plugin text"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemLink
        id="integrations"
        show={false}
        text="Integrations"
        to="/somename/integrations"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemExternalLink
        icon={
          <i
            className="fa fa-question"
          />
        }
        id="helpLink"
        show={false}
        text="Help"
      />
      <MenuItemExternalLink
        icon={
          <i
            className="fa fa-phone"
          />
        }
        id="reportLink"
        show={false}
        text="Report a Problem"
      />
      <MenuItemExternalLink
        icon={
          <i
            className="fa fa-mobile"
          />
        }
        id="nativeAppLink"
        show={true}
        text="Download Apps"
        url=""
      />
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={
          <i
            className="fa fa-info"
          />
        }
        id="about"
        modalId="about"
        show={true}
        text="About Mattermost"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        icon={
          <i
            className="fa fa-sign-out"
          />
        }
        id="logout"
        onClick={[Function]}
        show={true}
        text="Log Out"
      />
    </Memo(MenuGroup)>
  </ul>
</div>
`;

exports[`plugins/MainMenuActions should match snapshot in web view 1`] = `
<div
  aria-label="team menu"
  className="a11y__popup Menu"
>
  <ul
    className="Menu__content dropdown-menu"
    onClick={[Function]}
    role="menu"
    style={Object {}}
  >
    <Memo(MenuGroup)>
      <Memo(TeamPermissionGate)
        permissions={
          Array [
            "manage_team",
          ]
        }
        teamId="someteamid"
      >
        <MenuItemToggleModalRedux
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          id="addGroupsToTeam"
          modalId="add_groups_to_team"
          show={true}
          text="Add Groups to Team"
        />
      </Memo(TeamPermissionGate)>
      <Memo(TeamPermissionGate)
        permissions={
          Array [
            "add_user_to_team",
            "invite_guest",
          ]
        }
        teamId="someteamid"
      >
        <MenuItemToggleModalRedux
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          extraText="Add people to the team"
          icon={false}
          id="invitePeople"
          modalId="invitation"
          onClick={[Function]}
          show={true}
          text="Invite People"
        />
      </Memo(TeamPermissionGate)>
      <Memo(TeamPermissionGate)
        permissions={
          Array [
            "manage_team",
          ]
        }
        teamId="someteamid"
      >
        <MenuItemToggleModalRedux
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          id="teamSettings"
          modalId="team_settings"
          show={true}
          text="Team Settings"
        />
      </Memo(TeamPermissionGate)>
      <Memo(TeamPermissionGate)
        permissions={
          Array [
            "manage_team",
          ]
        }
        teamId="someteamid"
      >
        <MenuItemToggleModalRedux
          dialogProps={
            Object {
              "teamID": "someteamid",
            }
          }
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          id="manageGroups"
          modalId="manage_team_groups"
          show={true}
          text="Manage Groups"
        />
      </Memo(TeamPermissionGate)>
      <Memo(TeamPermissionGate)
        permissions={
          Array [
            "remove_user_from_team",
            "manage_team_roles",
          ]
        }
        teamId="someteamid"
      >
        <MenuItemToggleModalRedux
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          id="manageMembers"
          modalId="team_members"
          show={true}
          text="Manage Members"
        />
      </Memo(TeamPermissionGate)>
      <Memo(TeamPermissionGate)
        invert={true}
        permissions={
          Array [
            "remove_user_from_team",
            "manage_team_roles",
          ]
        }
        teamId="someteamid"
      >
        <MenuItemToggleModalRedux
          dialogType={
            Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "type": [Function],
            }
          }
          id="viewMembers"
          modalId="team_members"
          show={true}
          text="View Members"
        />
      </Memo(TeamPermissionGate)>
      <MenuItemLink
        id="joinTeam"
        show={true}
        text="Join Another Team"
        to="/select_team"
      />
      <MenuItemToggleModalRedux
        className="destructive"
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="leaveTeam"
        modalId="leave_team"
        show={false}
        text="Leave Team"
      />
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <Memo(SystemPermissionGate)
        permissions={
          Array [
            "create_team",
          ]
        }
      >
        <MenuItemLink
          className=""
          disabled={false}
          id="createTeam"
          show={true}
          sibling={false}
          text="Create a Team"
          to="/create_team"
        />
      </Memo(SystemPermissionGate)>
      <Memo(MenuGroup)>
        <div
          className="MainMenu_dropdown-link"
        >
          <LearnAboutTeamsLink />
        </div>
      </Memo(MenuGroup)>
    </Memo(MenuGroup)>
    <Memo(MenuGroup)>
      <MenuItemAction
        icon={false}
        id="someplugin_pluginmenuitem"
        key="someplugin_pluginmenuitem"
        onClick={[Function]}
        show={true}
        text="some plugin text"
      />
    </Memo(MenuGroup)>
  </ul>
</div>
`;
