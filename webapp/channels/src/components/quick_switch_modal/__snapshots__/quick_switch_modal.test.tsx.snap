// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/QuickSwitchModal should match snapshot 1`] = `
<GenericModal
  ariaLabel="Find Channels"
  autoCloseOnCancelButton={true}
  autoCloseOnConfirmButton={true}
  bodyPadding={false}
  className="a11y__modal channel-switcher"
  compassDesign={true}
  enforceFocus={false}
  id="quickSwitchModal"
  keyboardEscape={true}
  modalHeaderText={
    <div
      className="channel-switcher__header"
    >
      <h2
        id="quickSwitchHeader"
      >
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Find Channels"
          id="quick_switch_modal.switchChannels"
        />
      </h2>
    </div>
  }
  modalLocation="center"
  modalSubheaderText={
    <div
      className="channel-switcher__hint"
      id="quickSwitchHint"
    >
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Type to find a channel. Use <b>UP/DOWN</b> to browse, <b>ENTER</b> to select, <b>ESC</b> to dismiss."
        id="quickSwitchModal.help_no_team"
        values={
          Object {
            "b": [Function],
          }
        }
      />
    </div>
  }
  onExited={[Function]}
  onHide={[Function]}
  show={true}
  showCloseButton={true}
  showHeader={true}
>
  <div
    className="channel-switcher__suggestion-box"
  >
    <i
      className="icon icon-magnify icon-16"
    />
    <Connect(SuggestionBox)
      aria-label="quick switch input"
      className="form-control focused"
      completeOnTab={false}
      delayInputUpdate={true}
      forceSuggestionsWhenBlur={true}
      id="quickSwitchInput"
      listComponent={[Function]}
      listPosition="bottom"
      maxLength="64"
      onChange={[Function]}
      onItemSelected={[Function]}
      onSuggestionsReceived={[Function]}
      openWhenEmpty={true}
      providers={
        Array [
          SwitchChannelProvider {
            "disableDispatches": false,
            "forceDispatch": false,
            "latestComplete": true,
            "latestPrefix": "",
            "requestStarted": false,
            "store": Object {
              "@@observable": [Function],
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
          },
        ]
      }
      renderDividers={
        Array [
          "mention.unread",
          "mention.recent.channels",
        ]
      }
      shouldSearchCompleteText={true}
      spellCheck="false"
      value=""
    />
  </div>
</GenericModal>
`;
