// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/Menu should match snapshot with cloud free and team limit reached 1`] = `
<MenuItemLink
  className="MenuItem__with-icon-tooltip"
  disabled={true}
  id="createTeam"
  show={true}
  sibling={
    <RestrictedIndicator
      blocked={true}
      feature="mattermost.feature.create_multiple_teams"
      messageAdminPostTrial="Multiple teams allow for context-specific spaces that are more attuned to your and your teams’ needs. Upgrade to the Professional plan to create unlimited teams."
      messageAdminPreTrial="Create unlimited teams with one of our paid plans. Get the full experience of Enterprise when you start a free, 30 day trial."
      messageEndUser="Multiple teams allow for context-specific spaces that are more attuned to your teams’ needs."
      minimumPlanRequiredForFeature="professional"
      titleAdminPostTrial="Upgrade to create unlimited teams"
      titleAdminPreTrial="Try unlimited teams with a free trial"
      titleEndUser="Multiple teams available in paid plans"
      tooltipMessage="During your trial you are able to create multiple teams. These teams will be archived after your trial."
    />
  }
  text="Create a Team"
  to="/create_team"
/>
`;

exports[`components/Menu should match snapshot with cloud free trial 1`] = `
<MenuItemLink
  className="MenuItem__with-icon-tooltip"
  disabled={false}
  id="createTeam"
  show={true}
  sibling={
    <RestrictedIndicator
      blocked={false}
      feature="mattermost.feature.create_multiple_teams"
      messageAdminPostTrial="Multiple teams allow for context-specific spaces that are more attuned to your and your teams’ needs. Upgrade to the Professional plan to create unlimited teams."
      messageAdminPreTrial="Create unlimited teams with one of our paid plans. Get the full experience of Enterprise when you start a free, 30 day trial."
      messageEndUser="Multiple teams allow for context-specific spaces that are more attuned to your teams’ needs."
      minimumPlanRequiredForFeature="professional"
      titleAdminPostTrial="Upgrade to create unlimited teams"
      titleAdminPreTrial="Try unlimited teams with a free trial"
      titleEndUser="Multiple teams available in paid plans"
      tooltipMessage="During your trial you are able to create multiple teams. These teams will be archived after your trial."
    />
  }
  text="Create a Team"
  to="/create_team"
/>
`;

exports[`components/Menu should match snapshot with guest access disabled and no team invite permission 1`] = `
<Menu
  ariaLabel="team menu"
>
  <Memo(MenuGroup)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="addGroupsToTeam"
        modalId="add_groups_to_team"
        show={false}
        text="Add Groups to Team"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "add_user_to_team",
          "invite_guest",
        ]
      }
      teamId="team-id"
    />
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="teamSettings"
        modalId="team_settings"
        show={true}
        text="Team Settings"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogProps={
          Object {
            "teamID": "team-id",
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="manageGroups"
        modalId="manage_team_groups"
        show={false}
        text="Manage Groups"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "remove_user_from_team",
          "manage_team_roles",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="manageMembers"
        modalId="team_members"
        show={true}
        text="Manage Members"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      invert={true}
      permissions={
        Array [
          "remove_user_from_team",
          "manage_team_roles",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="viewMembers"
        modalId="team_members"
        show={true}
        text="View Members"
      />
    </Memo(TeamPermissionGate)>
    <MenuItemLink
      id="joinTeam"
      show={false}
      text="Join Another Team"
      to="/select_team"
    />
    <MenuItemToggleModalRedux
      className="destructive"
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      id="leaveTeam"
      modalId="leave_team"
      show={true}
      text="Leave Team"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <Memo(SystemPermissionGate)
      permissions={
        Array [
          "create_team",
        ]
      }
    >
      <MenuItemLink
        className=""
        disabled={false}
        id="createTeam"
        show={true}
        sibling={false}
        text="Create a Team"
        to="/create_team"
      />
    </Memo(SystemPermissionGate)>
    <Memo(MenuGroup)>
      <div
        className="MainMenu_dropdown-link"
      >
        <LearnAboutTeamsLink />
      </div>
    </Memo(MenuGroup)>
  </Memo(MenuGroup)>
  <Memo(MenuGroup) />
</Menu>
`;

exports[`components/Menu should match snapshot with id 1`] = `
<Menu
  ariaLabel="team menu"
  id="test-id"
>
  <Memo(MenuGroup)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="addGroupsToTeam"
        modalId="add_groups_to_team"
        show={false}
        text="Add Groups to Team"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "add_user_to_team",
          "invite_guest",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        extraText="Add people to the team"
        icon={false}
        id="invitePeople"
        modalId="invitation"
        onClick={[Function]}
        show={true}
        text="Invite People"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="teamSettings"
        modalId="team_settings"
        show={true}
        text="Team Settings"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogProps={
          Object {
            "teamID": "team-id",
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="manageGroups"
        modalId="manage_team_groups"
        show={false}
        text="Manage Groups"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "remove_user_from_team",
          "manage_team_roles",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="manageMembers"
        modalId="team_members"
        show={true}
        text="Manage Members"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      invert={true}
      permissions={
        Array [
          "remove_user_from_team",
          "manage_team_roles",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="viewMembers"
        modalId="team_members"
        show={true}
        text="View Members"
      />
    </Memo(TeamPermissionGate)>
    <MenuItemLink
      id="joinTeam"
      show={false}
      text="Join Another Team"
      to="/select_team"
    />
    <MenuItemToggleModalRedux
      className="destructive"
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      id="leaveTeam"
      modalId="leave_team"
      show={true}
      text="Leave Team"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <Memo(SystemPermissionGate)
      permissions={
        Array [
          "create_team",
        ]
      }
    >
      <MenuItemLink
        className=""
        disabled={false}
        id="createTeam"
        show={true}
        sibling={false}
        text="Create a Team"
        to="/create_team"
      />
    </Memo(SystemPermissionGate)>
    <Memo(MenuGroup)>
      <div
        className="MainMenu_dropdown-link"
      >
        <LearnAboutTeamsLink />
      </div>
    </Memo(MenuGroup)>
  </Memo(MenuGroup)>
  <Memo(MenuGroup) />
</Menu>
`;

exports[`components/Menu should match snapshot with most of the thing disabled 1`] = `
<Menu
  ariaLabel="team menu"
>
  <Memo(MenuGroup)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="addGroupsToTeam"
        modalId="add_groups_to_team"
        show={false}
        text="Add Groups to Team"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "add_user_to_team",
          "invite_guest",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        extraText="Add people to the team"
        icon={false}
        id="invitePeople"
        modalId="invitation"
        onClick={[Function]}
        show={true}
        text="Invite People"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="teamSettings"
        modalId="team_settings"
        show={true}
        text="Team Settings"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogProps={
          Object {
            "teamID": "team-id",
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="manageGroups"
        modalId="manage_team_groups"
        show={false}
        text="Manage Groups"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "remove_user_from_team",
          "manage_team_roles",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="manageMembers"
        modalId="team_members"
        show={true}
        text="Manage Members"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      invert={true}
      permissions={
        Array [
          "remove_user_from_team",
          "manage_team_roles",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="viewMembers"
        modalId="team_members"
        show={true}
        text="View Members"
      />
    </Memo(TeamPermissionGate)>
    <MenuItemLink
      id="joinTeam"
      show={false}
      text="Join Another Team"
      to="/select_team"
    />
    <MenuItemToggleModalRedux
      className="destructive"
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      id="leaveTeam"
      modalId="leave_team"
      show={true}
      text="Leave Team"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <Memo(SystemPermissionGate)
      permissions={
        Array [
          "create_team",
        ]
      }
    >
      <MenuItemLink
        className=""
        disabled={false}
        id="createTeam"
        show={true}
        sibling={false}
        text="Create a Team"
        to="/create_team"
      />
    </Memo(SystemPermissionGate)>
    <Memo(MenuGroup)>
      <div
        className="MainMenu_dropdown-link"
      >
        <LearnAboutTeamsLink />
      </div>
    </Memo(MenuGroup)>
  </Memo(MenuGroup)>
  <Memo(MenuGroup) />
</Menu>
`;

exports[`components/Menu should match snapshot with most of the thing disabled in mobile 1`] = `
<Menu
  ariaLabel="main menu"
>
  <Memo(MenuGroup)>
    <Memo(SystemPermissionGate)
      permissions={
        Array [
          "sysconsole_write_billing",
        ]
      }
    >
      <MenuCloudTrial
        id="menuCloudTrial"
      />
    </Memo(SystemPermissionGate)>
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <Memo(SystemPermissionGate)
      permissions={
        Array [
          "sysconsole_write_about_edition_and_license",
        ]
      }
    >
      <MenuStartTrial
        id="startTrial"
      />
    </Memo(SystemPermissionGate)>
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <MenuItemAction
      icon={
        <i
          className="mentions"
        >
          @
        </i>
      }
      id="recentMentions"
      onClick={[Function]}
      show={true}
      text="Recent Mentions"
    />
    <MenuItemAction
      icon={
        <i
          className="fa fa-bookmark"
        />
      }
      id="flaggedPosts"
      onClick={[Function]}
      show={true}
      text="Saved messages"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <MenuItemToggleModalRedux
      dialogProps={
        Object {
          "isContentProductSettings": false,
        }
      }
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      icon={
        <i
          className="fa fa-user"
        />
      }
      id="profileSettings"
      modalId="user_settings"
      show={true}
      text="Profile"
    />
    <MenuItemToggleModalRedux
      dialogProps={
        Object {
          "isContentProductSettings": true,
        }
      }
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      icon={
        <i
          className="fa fa-cog"
        />
      }
      id="accountSettings"
      modalId="user_settings"
      show={true}
      text="Settings"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={
          <i
            className="fa fa-user-plus"
          />
        }
        id="addGroupsToTeam"
        modalId="add_groups_to_team"
        show={false}
        text="Add Groups to Team"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "add_user_to_team",
          "invite_guest",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        extraText="Add people to the team"
        icon={
          <i
            className="fa fa-user-plus"
          />
        }
        id="invitePeople"
        modalId="invitation"
        onClick={[Function]}
        show={true}
        text="Invite People"
      />
    </Memo(TeamPermissionGate)>
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={
          <i
            className="fa fa-globe"
          />
        }
        id="teamSettings"
        modalId="team_settings"
        show={true}
        text="Team Settings"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogProps={
          Object {
            "teamID": "team-id",
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={
          <i
            className="fa fa-user-plus"
          />
        }
        id="manageGroups"
        modalId="manage_team_groups"
        show={false}
        text="Manage Groups"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "remove_user_from_team",
          "manage_team_roles",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={
          <i
            className="fa fa-users"
          />
        }
        id="manageMembers"
        modalId="team_members"
        show={true}
        text="Manage Members"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      invert={true}
      permissions={
        Array [
          "remove_user_from_team",
          "manage_team_roles",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={
          <i
            className="fa fa-users"
          />
        }
        id="viewMembers"
        modalId="team_members"
        show={true}
        text="View Members"
      />
    </Memo(TeamPermissionGate)>
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <Memo(SystemPermissionGate)
      permissions={
        Array [
          "create_team",
        ]
      }
    >
      <MenuItemLink
        icon={
          <i
            className="fa fa-plus-square"
          />
        }
        id="createTeam"
        show={true}
        text="Create a Team"
        to="/create_team"
      />
    </Memo(SystemPermissionGate)>
    <MenuItemLink
      icon={
        <i
          className="fa fa-plus-square"
        />
      }
      id="joinTeam"
      show={false}
      text="Join Another Team"
      to="/select_team"
    />
    <MenuItemToggleModalRedux
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      icon={<LeaveTeamIcon />}
      id="leaveTeam"
      modalId="leave_team"
      show={true}
      text="Leave Team"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup) />
  <Memo(MenuGroup)>
    <MenuItemLink
      id="integrations"
      show={false}
      text="Integrations"
      to="/team_name/integrations"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <MenuItemExternalLink
      icon={
        <i
          className="fa fa-question"
        />
      }
      id="helpLink"
      show={false}
      text="Help"
    />
    <MenuItemExternalLink
      icon={
        <i
          className="fa fa-phone"
        />
      }
      id="reportLink"
      show={false}
      text="Report a Problem"
    />
    <MenuItemExternalLink
      icon={
        <i
          className="fa fa-mobile"
        />
      }
      id="nativeAppLink"
      show={true}
      text="Download Apps"
      url=""
    />
    <MenuItemToggleModalRedux
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      icon={
        <i
          className="fa fa-info"
        />
      }
      id="about"
      modalId="about"
      show={true}
      text="About Mattermost"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <MenuItemAction
      icon={
        <i
          className="fa fa-sign-out"
        />
      }
      id="logout"
      onClick={[Function]}
      show={true}
      text="Log Out"
    />
  </Memo(MenuGroup)>
</Menu>
`;

exports[`components/Menu should match snapshot with most of the thing enabled 1`] = `
<Menu
  ariaLabel="team menu"
>
  <Memo(MenuGroup)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="addGroupsToTeam"
        modalId="add_groups_to_team"
        show={false}
        text="Add Groups to Team"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "add_user_to_team",
          "invite_guest",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        extraText="Add people to the team"
        icon={false}
        id="invitePeople"
        modalId="invitation"
        onClick={[Function]}
        show={true}
        text="Invite People"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="teamSettings"
        modalId="team_settings"
        show={true}
        text="Team Settings"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogProps={
          Object {
            "teamID": "team-id",
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="manageGroups"
        modalId="manage_team_groups"
        show={false}
        text="Manage Groups"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "remove_user_from_team",
          "manage_team_roles",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="manageMembers"
        modalId="team_members"
        show={true}
        text="Manage Members"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      invert={true}
      permissions={
        Array [
          "remove_user_from_team",
          "manage_team_roles",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="viewMembers"
        modalId="team_members"
        show={true}
        text="View Members"
      />
    </Memo(TeamPermissionGate)>
    <MenuItemLink
      id="joinTeam"
      show={false}
      text="Join Another Team"
      to="/select_team"
    />
    <MenuItemToggleModalRedux
      className="destructive"
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      id="leaveTeam"
      modalId="leave_team"
      show={true}
      text="Leave Team"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <Memo(SystemPermissionGate)
      permissions={
        Array [
          "create_team",
        ]
      }
    >
      <MenuItemLink
        className=""
        disabled={false}
        id="createTeam"
        show={true}
        sibling={false}
        text="Create a Team"
        to="/create_team"
      />
    </Memo(SystemPermissionGate)>
    <Memo(MenuGroup)>
      <div
        className="MainMenu_dropdown-link"
      >
        <LearnAboutTeamsLink />
      </div>
    </Memo(MenuGroup)>
  </Memo(MenuGroup)>
  <Memo(MenuGroup) />
</Menu>
`;

exports[`components/Menu should match snapshot with most of the thing enabled in mobile 1`] = `
<Menu
  ariaLabel="main menu"
>
  <Memo(MenuGroup)>
    <Memo(SystemPermissionGate)
      permissions={
        Array [
          "sysconsole_write_billing",
        ]
      }
    >
      <MenuCloudTrial
        id="menuCloudTrial"
      />
    </Memo(SystemPermissionGate)>
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <Memo(SystemPermissionGate)
      permissions={
        Array [
          "sysconsole_write_about_edition_and_license",
        ]
      }
    >
      <MenuStartTrial
        id="startTrial"
      />
    </Memo(SystemPermissionGate)>
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <MenuItemAction
      icon={
        <i
          className="mentions"
        >
          @
        </i>
      }
      id="recentMentions"
      onClick={[Function]}
      show={true}
      text="Recent Mentions"
    />
    <MenuItemAction
      icon={
        <i
          className="fa fa-bookmark"
        />
      }
      id="flaggedPosts"
      onClick={[Function]}
      show={true}
      text="Saved messages"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <MenuItemToggleModalRedux
      dialogProps={
        Object {
          "isContentProductSettings": false,
        }
      }
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      icon={
        <i
          className="fa fa-user"
        />
      }
      id="profileSettings"
      modalId="user_settings"
      show={true}
      text="Profile"
    />
    <MenuItemToggleModalRedux
      dialogProps={
        Object {
          "isContentProductSettings": true,
        }
      }
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      icon={
        <i
          className="fa fa-cog"
        />
      }
      id="accountSettings"
      modalId="user_settings"
      show={true}
      text="Settings"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={
          <i
            className="fa fa-user-plus"
          />
        }
        id="addGroupsToTeam"
        modalId="add_groups_to_team"
        show={false}
        text="Add Groups to Team"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "add_user_to_team",
          "invite_guest",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        extraText="Add people to the team"
        icon={
          <i
            className="fa fa-user-plus"
          />
        }
        id="invitePeople"
        modalId="invitation"
        onClick={[Function]}
        show={true}
        text="Invite People"
      />
    </Memo(TeamPermissionGate)>
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={
          <i
            className="fa fa-globe"
          />
        }
        id="teamSettings"
        modalId="team_settings"
        show={true}
        text="Team Settings"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogProps={
          Object {
            "teamID": "team-id",
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={
          <i
            className="fa fa-user-plus"
          />
        }
        id="manageGroups"
        modalId="manage_team_groups"
        show={false}
        text="Manage Groups"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "remove_user_from_team",
          "manage_team_roles",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={
          <i
            className="fa fa-users"
          />
        }
        id="manageMembers"
        modalId="team_members"
        show={true}
        text="Manage Members"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      invert={true}
      permissions={
        Array [
          "remove_user_from_team",
          "manage_team_roles",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={
          <i
            className="fa fa-users"
          />
        }
        id="viewMembers"
        modalId="team_members"
        show={true}
        text="View Members"
      />
    </Memo(TeamPermissionGate)>
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <Memo(SystemPermissionGate)
      permissions={
        Array [
          "create_team",
        ]
      }
    >
      <MenuItemLink
        icon={
          <i
            className="fa fa-plus-square"
          />
        }
        id="createTeam"
        show={true}
        text="Create a Team"
        to="/create_team"
      />
    </Memo(SystemPermissionGate)>
    <MenuItemLink
      icon={
        <i
          className="fa fa-plus-square"
        />
      }
      id="joinTeam"
      show={false}
      text="Join Another Team"
      to="/select_team"
    />
    <MenuItemToggleModalRedux
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      icon={<LeaveTeamIcon />}
      id="leaveTeam"
      modalId="leave_team"
      show={true}
      text="Leave Team"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup) />
  <Memo(MenuGroup)>
    <MenuItemLink
      id="integrations"
      show={false}
      text="Integrations"
      to="/team_name/integrations"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <MenuItemExternalLink
      icon={
        <i
          className="fa fa-question"
        />
      }
      id="helpLink"
      show={true}
      text="Help"
      url="test-link-help"
    />
    <MenuItemExternalLink
      icon={
        <i
          className="fa fa-phone"
        />
      }
      id="reportLink"
      show={true}
      text="Report a Problem"
      url="test-report-link"
    />
    <MenuItemExternalLink
      icon={
        <i
          className="fa fa-mobile"
        />
      }
      id="nativeAppLink"
      show={true}
      text="Download Apps"
      url="test"
    />
    <MenuItemToggleModalRedux
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      icon={
        <i
          className="fa fa-info"
        />
      }
      id="about"
      modalId="about"
      show={true}
      text="About Mattermost"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <MenuItemAction
      icon={
        <i
          className="fa fa-sign-out"
        />
      }
      id="logout"
      onClick={[Function]}
      show={true}
      text="Log Out"
    />
  </Memo(MenuGroup)>
</Menu>
`;

exports[`components/Menu should match snapshot with plugins 1`] = `
<Menu
  ariaLabel="team menu"
>
  <Memo(MenuGroup)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="addGroupsToTeam"
        modalId="add_groups_to_team"
        show={false}
        text="Add Groups to Team"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "add_user_to_team",
          "invite_guest",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        extraText="Add people to the team"
        icon={false}
        id="invitePeople"
        modalId="invitation"
        onClick={[Function]}
        show={true}
        text="Invite People"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="teamSettings"
        modalId="team_settings"
        show={true}
        text="Team Settings"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogProps={
          Object {
            "teamID": "team-id",
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="manageGroups"
        modalId="manage_team_groups"
        show={false}
        text="Manage Groups"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "remove_user_from_team",
          "manage_team_roles",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="manageMembers"
        modalId="team_members"
        show={true}
        text="Manage Members"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      invert={true}
      permissions={
        Array [
          "remove_user_from_team",
          "manage_team_roles",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        id="viewMembers"
        modalId="team_members"
        show={true}
        text="View Members"
      />
    </Memo(TeamPermissionGate)>
    <MenuItemLink
      id="joinTeam"
      show={false}
      text="Join Another Team"
      to="/select_team"
    />
    <MenuItemToggleModalRedux
      className="destructive"
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      id="leaveTeam"
      modalId="leave_team"
      show={true}
      text="Leave Team"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <Memo(SystemPermissionGate)
      permissions={
        Array [
          "create_team",
        ]
      }
    >
      <MenuItemLink
        className=""
        disabled={false}
        id="createTeam"
        show={true}
        sibling={false}
        text="Create a Team"
        to="/create_team"
      />
    </Memo(SystemPermissionGate)>
    <Memo(MenuGroup)>
      <div
        className="MainMenu_dropdown-link"
      >
        <LearnAboutTeamsLink />
      </div>
    </Memo(MenuGroup)>
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <MenuItemAction
      icon={false}
      id="plugin-id-1_pluginmenuitem"
      key="plugin-id-1_pluginmenuitem"
      onClick={[Function]}
      show={true}
      text="some text"
    />
    <MenuItemAction
      icon={false}
      id="plugind-id-2_pluginmenuitem"
      key="plugind-id-2_pluginmenuitem"
      onClick={[Function]}
      show={true}
      text="some text"
    />
  </Memo(MenuGroup)>
</Menu>
`;

exports[`components/Menu should match snapshot with plugins in mobile 1`] = `
<Menu
  ariaLabel="main menu"
>
  <Memo(MenuGroup)>
    <Memo(SystemPermissionGate)
      permissions={
        Array [
          "sysconsole_write_billing",
        ]
      }
    >
      <MenuCloudTrial
        id="menuCloudTrial"
      />
    </Memo(SystemPermissionGate)>
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <Memo(SystemPermissionGate)
      permissions={
        Array [
          "sysconsole_write_about_edition_and_license",
        ]
      }
    >
      <MenuStartTrial
        id="startTrial"
      />
    </Memo(SystemPermissionGate)>
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <MenuItemAction
      icon={
        <i
          className="mentions"
        >
          @
        </i>
      }
      id="recentMentions"
      onClick={[Function]}
      show={true}
      text="Recent Mentions"
    />
    <MenuItemAction
      icon={
        <i
          className="fa fa-bookmark"
        />
      }
      id="flaggedPosts"
      onClick={[Function]}
      show={true}
      text="Saved messages"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <MenuItemToggleModalRedux
      dialogProps={
        Object {
          "isContentProductSettings": false,
        }
      }
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      icon={
        <i
          className="fa fa-user"
        />
      }
      id="profileSettings"
      modalId="user_settings"
      show={true}
      text="Profile"
    />
    <MenuItemToggleModalRedux
      dialogProps={
        Object {
          "isContentProductSettings": true,
        }
      }
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      icon={
        <i
          className="fa fa-cog"
        />
      }
      id="accountSettings"
      modalId="user_settings"
      show={true}
      text="Settings"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={
          <i
            className="fa fa-user-plus"
          />
        }
        id="addGroupsToTeam"
        modalId="add_groups_to_team"
        show={false}
        text="Add Groups to Team"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "add_user_to_team",
          "invite_guest",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        extraText="Add people to the team"
        icon={
          <i
            className="fa fa-user-plus"
          />
        }
        id="invitePeople"
        modalId="invitation"
        onClick={[Function]}
        show={true}
        text="Invite People"
      />
    </Memo(TeamPermissionGate)>
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={
          <i
            className="fa fa-globe"
          />
        }
        id="teamSettings"
        modalId="team_settings"
        show={true}
        text="Team Settings"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "manage_team",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogProps={
          Object {
            "teamID": "team-id",
          }
        }
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={
          <i
            className="fa fa-user-plus"
          />
        }
        id="manageGroups"
        modalId="manage_team_groups"
        show={false}
        text="Manage Groups"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      permissions={
        Array [
          "remove_user_from_team",
          "manage_team_roles",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={
          <i
            className="fa fa-users"
          />
        }
        id="manageMembers"
        modalId="team_members"
        show={true}
        text="Manage Members"
      />
    </Memo(TeamPermissionGate)>
    <Memo(TeamPermissionGate)
      invert={true}
      permissions={
        Array [
          "remove_user_from_team",
          "manage_team_roles",
        ]
      }
      teamId="team-id"
    >
      <MenuItemToggleModalRedux
        dialogType={
          Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "type": [Function],
          }
        }
        icon={
          <i
            className="fa fa-users"
          />
        }
        id="viewMembers"
        modalId="team_members"
        show={true}
        text="View Members"
      />
    </Memo(TeamPermissionGate)>
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <Memo(SystemPermissionGate)
      permissions={
        Array [
          "create_team",
        ]
      }
    >
      <MenuItemLink
        icon={
          <i
            className="fa fa-plus-square"
          />
        }
        id="createTeam"
        show={true}
        text="Create a Team"
        to="/create_team"
      />
    </Memo(SystemPermissionGate)>
    <MenuItemLink
      icon={
        <i
          className="fa fa-plus-square"
        />
      }
      id="joinTeam"
      show={false}
      text="Join Another Team"
      to="/select_team"
    />
    <MenuItemToggleModalRedux
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      icon={<LeaveTeamIcon />}
      id="leaveTeam"
      modalId="leave_team"
      show={true}
      text="Leave Team"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <MenuItemAction
      icon={
        <i
          className="fa fa-anchor"
        />
      }
      id="plugin-id-1_pluginmenuitem"
      key="plugin-id-1_pluginmenuitem"
      onClick={[Function]}
      show={true}
      text="some text"
    />
    <MenuItemAction
      icon={
        <i
          className="fa fa-anchor"
        />
      }
      id="plugind-id-2_pluginmenuitem"
      key="plugind-id-2_pluginmenuitem"
      onClick={[Function]}
      show={true}
      text="some text"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <MenuItemLink
      id="integrations"
      show={false}
      text="Integrations"
      to="/team_name/integrations"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <MenuItemExternalLink
      icon={
        <i
          className="fa fa-question"
        />
      }
      id="helpLink"
      show={false}
      text="Help"
    />
    <MenuItemExternalLink
      icon={
        <i
          className="fa fa-phone"
        />
      }
      id="reportLink"
      show={false}
      text="Report a Problem"
    />
    <MenuItemExternalLink
      icon={
        <i
          className="fa fa-mobile"
        />
      }
      id="nativeAppLink"
      show={true}
      text="Download Apps"
      url=""
    />
    <MenuItemToggleModalRedux
      dialogType={
        Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "type": [Function],
        }
      }
      icon={
        <i
          className="fa fa-info"
        />
      }
      id="about"
      modalId="about"
      show={true}
      text="About Mattermost"
    />
  </Memo(MenuGroup)>
  <Memo(MenuGroup)>
    <MenuItemAction
      icon={
        <i
          className="fa fa-sign-out"
        />
      }
      id="logout"
      onClick={[Function]}
      show={true}
      text="Log Out"
    />
  </Memo(MenuGroup)>
</Menu>
`;
