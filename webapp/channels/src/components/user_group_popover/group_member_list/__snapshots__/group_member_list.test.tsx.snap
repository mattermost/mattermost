// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`component/user_group_popover/group_member_list should match snapshot 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "undefinedundefined",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Memo(GroupMemberList)
        actions={
          Object {
            "closeRightHandSide": [MockFunction],
            "getUsersInGroup": [MockFunction],
            "openDirectChannelToUserId": [MockFunction],
          }
        }
        canManageGroup={true}
        group={
          Object {
            "allow_reference": true,
            "create_at": 1,
            "delete_at": 0,
            "description": "",
            "display_name": "group_display_name",
            "has_syncables": false,
            "id": "group_id",
            "member_count": 5,
            "name": "group_name",
            "remote_id": "",
            "scheme_admin": false,
            "source": "",
            "update_at": 1,
          }
        }
        hide={[MockFunction]}
        members={
          Array [
            Object {
              "displayName": "Name0 Surname0",
              "user": Object {
                "auth_service": "",
                "bot_description": "",
                "create_at": 0,
                "delete_at": 0,
                "email": "test0@test.com",
                "first_name": "Name0",
                "id": "id0",
                "is_bot": false,
                "last_activity_at": 0,
                "last_name": "Surname0",
                "last_password_update": 0,
                "last_picture_update": 0,
                "locale": "",
                "mfa_active": false,
                "nickname": "",
                "notify_props": Object {
                  "calls_desktop_sound": "true",
                  "channel": "false",
                  "comments": "never",
                  "desktop": "default",
                  "desktop_sound": "false",
                  "email": "false",
                  "first_name": "false",
                  "highlight_keys": "",
                  "mark_unread": "mention",
                  "mention_keys": "",
                  "push": "none",
                  "push_status": "offline",
                },
                "password": "",
                "position": "",
                "props": Object {},
                "roles": "",
                "terms_of_service_create_at": 0,
                "terms_of_service_id": "",
                "update_at": 0,
                "username": "username0",
              },
            },
            Object {
              "displayName": "Name1 Surname1",
              "user": Object {
                "auth_service": "",
                "bot_description": "",
                "create_at": 0,
                "delete_at": 0,
                "email": "test1@test.com",
                "first_name": "Name1",
                "id": "id1",
                "is_bot": false,
                "last_activity_at": 0,
                "last_name": "Surname1",
                "last_password_update": 0,
                "last_picture_update": 0,
                "locale": "",
                "mfa_active": false,
                "nickname": "",
                "notify_props": Object {
                  "calls_desktop_sound": "true",
                  "channel": "false",
                  "comments": "never",
                  "desktop": "default",
                  "desktop_sound": "false",
                  "email": "false",
                  "first_name": "false",
                  "highlight_keys": "",
                  "mark_unread": "mention",
                  "mention_keys": "",
                  "push": "none",
                  "push_status": "offline",
                },
                "password": "",
                "position": "",
                "props": Object {},
                "roles": "",
                "terms_of_service_create_at": 0,
                "terms_of_service_id": "",
                "update_at": 0,
                "username": "username1",
              },
            },
            Object {
              "displayName": "Name2 Surname2",
              "user": Object {
                "auth_service": "",
                "bot_description": "",
                "create_at": 0,
                "delete_at": 0,
                "email": "test2@test.com",
                "first_name": "Name2",
                "id": "id2",
                "is_bot": false,
                "last_activity_at": 0,
                "last_name": "Surname2",
                "last_password_update": 0,
                "last_picture_update": 0,
                "locale": "",
                "mfa_active": false,
                "nickname": "",
                "notify_props": Object {
                  "calls_desktop_sound": "true",
                  "channel": "false",
                  "comments": "never",
                  "desktop": "default",
                  "desktop_sound": "false",
                  "email": "false",
                  "first_name": "false",
                  "highlight_keys": "",
                  "mark_unread": "mention",
                  "mention_keys": "",
                  "push": "none",
                  "push_status": "offline",
                },
                "password": "",
                "position": "",
                "props": Object {},
                "roles": "",
                "terms_of_service_create_at": 0,
                "terms_of_service_id": "",
                "update_at": 0,
                "username": "username2",
              },
            },
            Object {
              "displayName": "Name3 Surname3",
              "user": Object {
                "auth_service": "",
                "bot_description": "",
                "create_at": 0,
                "delete_at": 0,
                "email": "test3@test.com",
                "first_name": "Name3",
                "id": "id3",
                "is_bot": false,
                "last_activity_at": 0,
                "last_name": "Surname3",
                "last_password_update": 0,
                "last_picture_update": 0,
                "locale": "",
                "mfa_active": false,
                "nickname": "",
                "notify_props": Object {
                  "calls_desktop_sound": "true",
                  "channel": "false",
                  "comments": "never",
                  "desktop": "default",
                  "desktop_sound": "false",
                  "email": "false",
                  "first_name": "false",
                  "highlight_keys": "",
                  "mark_unread": "mention",
                  "mention_keys": "",
                  "push": "none",
                  "push_status": "offline",
                },
                "password": "",
                "position": "",
                "props": Object {},
                "roles": "",
                "terms_of_service_create_at": 0,
                "terms_of_service_id": "",
                "update_at": 0,
                "username": "username3",
              },
            },
            Object {
              "displayName": "Name4 Surname4",
              "user": Object {
                "auth_service": "",
                "bot_description": "",
                "create_at": 0,
                "delete_at": 0,
                "email": "test4@test.com",
                "first_name": "Name4",
                "id": "id4",
                "is_bot": false,
                "last_activity_at": 0,
                "last_name": "Surname4",
                "last_password_update": 0,
                "last_picture_update": 0,
                "locale": "",
                "mfa_active": false,
                "nickname": "",
                "notify_props": Object {
                  "calls_desktop_sound": "true",
                  "channel": "false",
                  "comments": "never",
                  "desktop": "default",
                  "desktop_sound": "false",
                  "email": "false",
                  "first_name": "false",
                  "highlight_keys": "",
                  "mark_unread": "mention",
                  "mention_keys": "",
                  "push": "none",
                  "push_status": "offline",
                },
                "password": "",
                "position": "",
                "props": Object {},
                "roles": "",
                "terms_of_service_create_at": 0,
                "terms_of_service_id": "",
                "update_at": 0,
                "username": "username4",
              },
            },
          ]
        }
        searchState={0}
        searchTerm=""
        showUserOverlay={[MockFunction]}
        teamUrl="team"
      >
        <UserList
          role="list"
          style={
            Object {
              "height": 216,
            }
          }
        >
          <div
            className="UserList-XqScV gnsdGQ"
            role="list"
            style={
              Object {
                "height": 216,
              }
            }
          >
            <Component>
              <InfiniteLoader
                isItemLoaded={[Function]}
                itemCount={5}
                loadMoreItems={[Function]}
                threshold={5}
              >
                <List
                  direction="ltr"
                  height={100}
                  itemCount={5}
                  itemSize={[Function]}
                  layout="vertical"
                  onItemsRendered={[Function]}
                  overscanCount={2}
                  useIsScrolling={false}
                  width={100}
                >
                  <div
                    onScroll={[Function]}
                    style={
                      Object {
                        "WebkitOverflowScrolling": "touch",
                        "direction": "ltr",
                        "height": 100,
                        "overflow": "auto",
                        "position": "relative",
                        "width": 100,
                        "willChange": "transform",
                      }
                    }
                  >
                    <div
                      style={
                        Object {
                          "height": 216,
                          "pointerEvents": undefined,
                          "width": "100%",
                        }
                      }
                    >
                      <Item
                        index={0}
                        key="0"
                        style={
                          Object {
                            "height": undefined,
                            "left": 0,
                            "position": "absolute",
                            "right": undefined,
                            "top": 0,
                            "width": "100%",
                          }
                        }
                      >
                        <UserListItem
                          className="group-member-list_item"
                          first={true}
                          key="id0"
                          last={false}
                          role="listitem"
                          style={
                            Object {
                              "height": undefined,
                              "left": 0,
                              "position": "absolute",
                              "right": undefined,
                              "top": 0,
                              "width": "100%",
                            }
                          }
                        >
                          <div
                            className="UserListItem-iCIMiI bTPvin group-member-list_item"
                            role="listitem"
                            style={
                              Object {
                                "height": undefined,
                                "left": 0,
                                "position": "absolute",
                                "right": undefined,
                                "top": 0,
                                "width": "100%",
                              }
                            }
                          >
                            <ProfilePopoverController
                              hideStatus={false}
                              src="/api/v4/users/id0/image?_=0"
                              userId="id0"
                            >
                              <span
                                aria-expanded="false"
                                aria-haspopup="dialog"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onPointerDown={[Function]}
                              >
                                <UserButton>
                                  <button
                                    className="UserButton-bZNeGd gDRhSF"
                                  >
                                    <span
                                      className="status-wrapper"
                                    >
                                      <Avatar
                                        className="avatar-post-preview"
                                        size="sm"
                                        tabIndex={-1}
                                        url="/api/v4/users/id0/image?_=0"
                                        username="username0"
                                      >
                                        <img
                                          alt="username0 profile image"
                                          className="Avatar Avatar-sm avatar-post-preview"
                                          loading="lazy"
                                          onError={[Function]}
                                          src="/api/v4/users/id0/image?_=0"
                                          tabIndex={-1}
                                        />
                                      </Avatar>
                                      <Memo(StatusIcon)
                                        status="offline"
                                      >
                                        <StatusOfflineIcon
                                          className="status "
                                        >
                                          <span
                                            className="status "
                                          >
                                            <svg
                                              aria-label="Offline Icon"
                                              className="offline--icon"
                                              height="100%"
                                              role="img"
                                              style={
                                                Object {
                                                  "clipRule": "evenodd",
                                                  "fillRule": "evenodd",
                                                  "strokeLinejoin": "round",
                                                  "strokeMiterlimit": 1.41421,
                                                }
                                              }
                                              viewBox="0 0 20 20"
                                              width="100%"
                                            >
                                              <path
                                                d="M10,0c5.519,0 10,4.481 10,10c0,5.519 -4.481,10 -10,10c-5.519,0 -10,-4.481 -10,-10c0,-5.519 4.481,-10 10,-10Zm0,2c4.415,0 8,3.585 8,8c0,4.415 -3.585,8 -8,8c-4.415,0 -8,-3.585 -8,-8c0,-4.415 3.585,-8 8,-8Z"
                                              />
                                            </svg>
                                          </span>
                                        </StatusOfflineIcon>
                                      </Memo(StatusIcon)>
                                    </span>
                                    <Username
                                      className="overflow--ellipsis text-nowrap"
                                    >
                                      <span
                                        className="Username-hebqVM cKlgOV overflow--ellipsis text-nowrap"
                                      >
                                        Name0 Surname0
                                      </span>
                                    </Username>
                                    <Gap
                                      className="group-member-list_gap"
                                    >
                                      <span
                                        className="Gap-pVXiI hWeVKL group-member-list_gap"
                                      />
                                    </Gap>
                                  </button>
                                </UserButton>
                              </span>
                            </ProfilePopoverController>
                            <DMContainer
                              className="group-member-list_dm-button"
                            >
                              <div
                                className="DMContainer-ilPVMc Cnskx group-member-list_dm-button"
                              >
                                <WithTooltip
                                  title="Send message"
                                >
                                  <DMButton
                                    aria-label="Send message to Name0 Surname0"
                                    className="btn btn-icon btn-xs"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseMove={[Function]}
                                    onPointerDown={[Function]}
                                    onPointerEnter={[Function]}
                                  >
                                    <button
                                      aria-label="Send message to Name0 Surname0"
                                      className="DMButton-hIFgRF ecgFEo btn btn-icon btn-xs"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseMove={[Function]}
                                      onPointerDown={[Function]}
                                      onPointerEnter={[Function]}
                                    >
                                      <i
                                        className="icon icon-send"
                                      />
                                    </button>
                                  </DMButton>
                                </WithTooltip>
                              </div>
                            </DMContainer>
                          </div>
                        </UserListItem>
                      </Item>
                      <Item
                        index={1}
                        key="1"
                        style={
                          Object {
                            "height": undefined,
                            "left": 0,
                            "position": "absolute",
                            "right": undefined,
                            "top": 48,
                            "width": "100%",
                          }
                        }
                      >
                        <UserListItem
                          className="group-member-list_item"
                          first={false}
                          key="id1"
                          last={false}
                          role="listitem"
                          style={
                            Object {
                              "height": undefined,
                              "left": 0,
                              "position": "absolute",
                              "right": undefined,
                              "top": 48,
                              "width": "100%",
                            }
                          }
                        >
                          <div
                            className="UserListItem-iCIMiI cXUsja group-member-list_item"
                            role="listitem"
                            style={
                              Object {
                                "height": undefined,
                                "left": 0,
                                "position": "absolute",
                                "right": undefined,
                                "top": 48,
                                "width": "100%",
                              }
                            }
                          >
                            <ProfilePopoverController
                              hideStatus={false}
                              src="/api/v4/users/id1/image?_=0"
                              userId="id1"
                            >
                              <span
                                aria-expanded="false"
                                aria-haspopup="dialog"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onPointerDown={[Function]}
                              >
                                <UserButton>
                                  <button
                                    className="UserButton-bZNeGd gDRhSF"
                                  >
                                    <span
                                      className="status-wrapper"
                                    >
                                      <Avatar
                                        className="avatar-post-preview"
                                        size="sm"
                                        tabIndex={-1}
                                        url="/api/v4/users/id1/image?_=0"
                                        username="username1"
                                      >
                                        <img
                                          alt="username1 profile image"
                                          className="Avatar Avatar-sm avatar-post-preview"
                                          loading="lazy"
                                          onError={[Function]}
                                          src="/api/v4/users/id1/image?_=0"
                                          tabIndex={-1}
                                        />
                                      </Avatar>
                                      <Memo(StatusIcon)
                                        status="offline"
                                      >
                                        <StatusOfflineIcon
                                          className="status "
                                        >
                                          <span
                                            className="status "
                                          >
                                            <svg
                                              aria-label="Offline Icon"
                                              className="offline--icon"
                                              height="100%"
                                              role="img"
                                              style={
                                                Object {
                                                  "clipRule": "evenodd",
                                                  "fillRule": "evenodd",
                                                  "strokeLinejoin": "round",
                                                  "strokeMiterlimit": 1.41421,
                                                }
                                              }
                                              viewBox="0 0 20 20"
                                              width="100%"
                                            >
                                              <path
                                                d="M10,0c5.519,0 10,4.481 10,10c0,5.519 -4.481,10 -10,10c-5.519,0 -10,-4.481 -10,-10c0,-5.519 4.481,-10 10,-10Zm0,2c4.415,0 8,3.585 8,8c0,4.415 -3.585,8 -8,8c-4.415,0 -8,-3.585 -8,-8c0,-4.415 3.585,-8 8,-8Z"
                                              />
                                            </svg>
                                          </span>
                                        </StatusOfflineIcon>
                                      </Memo(StatusIcon)>
                                    </span>
                                    <Username
                                      className="overflow--ellipsis text-nowrap"
                                    >
                                      <span
                                        className="Username-hebqVM cKlgOV overflow--ellipsis text-nowrap"
                                      >
                                        Name1 Surname1
                                      </span>
                                    </Username>
                                    <Gap
                                      className="group-member-list_gap"
                                    >
                                      <span
                                        className="Gap-pVXiI hWeVKL group-member-list_gap"
                                      />
                                    </Gap>
                                  </button>
                                </UserButton>
                              </span>
                            </ProfilePopoverController>
                            <DMContainer
                              className="group-member-list_dm-button"
                            >
                              <div
                                className="DMContainer-ilPVMc Cnskx group-member-list_dm-button"
                              >
                                <WithTooltip
                                  title="Send message"
                                >
                                  <DMButton
                                    aria-label="Send message to Name1 Surname1"
                                    className="btn btn-icon btn-xs"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseMove={[Function]}
                                    onPointerDown={[Function]}
                                    onPointerEnter={[Function]}
                                  >
                                    <button
                                      aria-label="Send message to Name1 Surname1"
                                      className="DMButton-hIFgRF ecgFEo btn btn-icon btn-xs"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseMove={[Function]}
                                      onPointerDown={[Function]}
                                      onPointerEnter={[Function]}
                                    >
                                      <i
                                        className="icon icon-send"
                                      />
                                    </button>
                                  </DMButton>
                                </WithTooltip>
                              </div>
                            </DMContainer>
                          </div>
                        </UserListItem>
                      </Item>
                      <Item
                        index={2}
                        key="2"
                        style={
                          Object {
                            "height": undefined,
                            "left": 0,
                            "position": "absolute",
                            "right": undefined,
                            "top": 88,
                            "width": "100%",
                          }
                        }
                      >
                        <UserListItem
                          className="group-member-list_item"
                          first={false}
                          key="id2"
                          last={false}
                          role="listitem"
                          style={
                            Object {
                              "height": undefined,
                              "left": 0,
                              "position": "absolute",
                              "right": undefined,
                              "top": 88,
                              "width": "100%",
                            }
                          }
                        >
                          <div
                            className="UserListItem-iCIMiI cXUsja group-member-list_item"
                            role="listitem"
                            style={
                              Object {
                                "height": undefined,
                                "left": 0,
                                "position": "absolute",
                                "right": undefined,
                                "top": 88,
                                "width": "100%",
                              }
                            }
                          >
                            <ProfilePopoverController
                              hideStatus={false}
                              src="/api/v4/users/id2/image?_=0"
                              userId="id2"
                            >
                              <span
                                aria-expanded="false"
                                aria-haspopup="dialog"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onPointerDown={[Function]}
                              >
                                <UserButton>
                                  <button
                                    className="UserButton-bZNeGd gDRhSF"
                                  >
                                    <span
                                      className="status-wrapper"
                                    >
                                      <Avatar
                                        className="avatar-post-preview"
                                        size="sm"
                                        tabIndex={-1}
                                        url="/api/v4/users/id2/image?_=0"
                                        username="username2"
                                      >
                                        <img
                                          alt="username2 profile image"
                                          className="Avatar Avatar-sm avatar-post-preview"
                                          loading="lazy"
                                          onError={[Function]}
                                          src="/api/v4/users/id2/image?_=0"
                                          tabIndex={-1}
                                        />
                                      </Avatar>
                                      <Memo(StatusIcon)
                                        status="offline"
                                      >
                                        <StatusOfflineIcon
                                          className="status "
                                        >
                                          <span
                                            className="status "
                                          >
                                            <svg
                                              aria-label="Offline Icon"
                                              className="offline--icon"
                                              height="100%"
                                              role="img"
                                              style={
                                                Object {
                                                  "clipRule": "evenodd",
                                                  "fillRule": "evenodd",
                                                  "strokeLinejoin": "round",
                                                  "strokeMiterlimit": 1.41421,
                                                }
                                              }
                                              viewBox="0 0 20 20"
                                              width="100%"
                                            >
                                              <path
                                                d="M10,0c5.519,0 10,4.481 10,10c0,5.519 -4.481,10 -10,10c-5.519,0 -10,-4.481 -10,-10c0,-5.519 4.481,-10 10,-10Zm0,2c4.415,0 8,3.585 8,8c0,4.415 -3.585,8 -8,8c-4.415,0 -8,-3.585 -8,-8c0,-4.415 3.585,-8 8,-8Z"
                                              />
                                            </svg>
                                          </span>
                                        </StatusOfflineIcon>
                                      </Memo(StatusIcon)>
                                    </span>
                                    <Username
                                      className="overflow--ellipsis text-nowrap"
                                    >
                                      <span
                                        className="Username-hebqVM cKlgOV overflow--ellipsis text-nowrap"
                                      >
                                        Name2 Surname2
                                      </span>
                                    </Username>
                                    <Gap
                                      className="group-member-list_gap"
                                    >
                                      <span
                                        className="Gap-pVXiI hWeVKL group-member-list_gap"
                                      />
                                    </Gap>
                                  </button>
                                </UserButton>
                              </span>
                            </ProfilePopoverController>
                            <DMContainer
                              className="group-member-list_dm-button"
                            >
                              <div
                                className="DMContainer-ilPVMc Cnskx group-member-list_dm-button"
                              >
                                <WithTooltip
                                  title="Send message"
                                >
                                  <DMButton
                                    aria-label="Send message to Name2 Surname2"
                                    className="btn btn-icon btn-xs"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseMove={[Function]}
                                    onPointerDown={[Function]}
                                    onPointerEnter={[Function]}
                                  >
                                    <button
                                      aria-label="Send message to Name2 Surname2"
                                      className="DMButton-hIFgRF ecgFEo btn btn-icon btn-xs"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseMove={[Function]}
                                      onPointerDown={[Function]}
                                      onPointerEnter={[Function]}
                                    >
                                      <i
                                        className="icon icon-send"
                                      />
                                    </button>
                                  </DMButton>
                                </WithTooltip>
                              </div>
                            </DMContainer>
                          </div>
                        </UserListItem>
                      </Item>
                      <Item
                        index={3}
                        key="3"
                        style={
                          Object {
                            "height": undefined,
                            "left": 0,
                            "position": "absolute",
                            "right": undefined,
                            "top": 128,
                            "width": "100%",
                          }
                        }
                      >
                        <UserListItem
                          className="group-member-list_item"
                          first={false}
                          key="id3"
                          last={false}
                          role="listitem"
                          style={
                            Object {
                              "height": undefined,
                              "left": 0,
                              "position": "absolute",
                              "right": undefined,
                              "top": 128,
                              "width": "100%",
                            }
                          }
                        >
                          <div
                            className="UserListItem-iCIMiI cXUsja group-member-list_item"
                            role="listitem"
                            style={
                              Object {
                                "height": undefined,
                                "left": 0,
                                "position": "absolute",
                                "right": undefined,
                                "top": 128,
                                "width": "100%",
                              }
                            }
                          >
                            <ProfilePopoverController
                              hideStatus={false}
                              src="/api/v4/users/id3/image?_=0"
                              userId="id3"
                            >
                              <span
                                aria-expanded="false"
                                aria-haspopup="dialog"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onPointerDown={[Function]}
                              >
                                <UserButton>
                                  <button
                                    className="UserButton-bZNeGd gDRhSF"
                                  >
                                    <span
                                      className="status-wrapper"
                                    >
                                      <Avatar
                                        className="avatar-post-preview"
                                        size="sm"
                                        tabIndex={-1}
                                        url="/api/v4/users/id3/image?_=0"
                                        username="username3"
                                      >
                                        <img
                                          alt="username3 profile image"
                                          className="Avatar Avatar-sm avatar-post-preview"
                                          loading="lazy"
                                          onError={[Function]}
                                          src="/api/v4/users/id3/image?_=0"
                                          tabIndex={-1}
                                        />
                                      </Avatar>
                                      <Memo(StatusIcon)
                                        status="offline"
                                      >
                                        <StatusOfflineIcon
                                          className="status "
                                        >
                                          <span
                                            className="status "
                                          >
                                            <svg
                                              aria-label="Offline Icon"
                                              className="offline--icon"
                                              height="100%"
                                              role="img"
                                              style={
                                                Object {
                                                  "clipRule": "evenodd",
                                                  "fillRule": "evenodd",
                                                  "strokeLinejoin": "round",
                                                  "strokeMiterlimit": 1.41421,
                                                }
                                              }
                                              viewBox="0 0 20 20"
                                              width="100%"
                                            >
                                              <path
                                                d="M10,0c5.519,0 10,4.481 10,10c0,5.519 -4.481,10 -10,10c-5.519,0 -10,-4.481 -10,-10c0,-5.519 4.481,-10 10,-10Zm0,2c4.415,0 8,3.585 8,8c0,4.415 -3.585,8 -8,8c-4.415,0 -8,-3.585 -8,-8c0,-4.415 3.585,-8 8,-8Z"
                                              />
                                            </svg>
                                          </span>
                                        </StatusOfflineIcon>
                                      </Memo(StatusIcon)>
                                    </span>
                                    <Username
                                      className="overflow--ellipsis text-nowrap"
                                    >
                                      <span
                                        className="Username-hebqVM cKlgOV overflow--ellipsis text-nowrap"
                                      >
                                        Name3 Surname3
                                      </span>
                                    </Username>
                                    <Gap
                                      className="group-member-list_gap"
                                    >
                                      <span
                                        className="Gap-pVXiI hWeVKL group-member-list_gap"
                                      />
                                    </Gap>
                                  </button>
                                </UserButton>
                              </span>
                            </ProfilePopoverController>
                            <DMContainer
                              className="group-member-list_dm-button"
                            >
                              <div
                                className="DMContainer-ilPVMc Cnskx group-member-list_dm-button"
                              >
                                <WithTooltip
                                  title="Send message"
                                >
                                  <DMButton
                                    aria-label="Send message to Name3 Surname3"
                                    className="btn btn-icon btn-xs"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseMove={[Function]}
                                    onPointerDown={[Function]}
                                    onPointerEnter={[Function]}
                                  >
                                    <button
                                      aria-label="Send message to Name3 Surname3"
                                      className="DMButton-hIFgRF ecgFEo btn btn-icon btn-xs"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseMove={[Function]}
                                      onPointerDown={[Function]}
                                      onPointerEnter={[Function]}
                                    >
                                      <i
                                        className="icon icon-send"
                                      />
                                    </button>
                                  </DMButton>
                                </WithTooltip>
                              </div>
                            </DMContainer>
                          </div>
                        </UserListItem>
                      </Item>
                      <Item
                        index={4}
                        key="4"
                        style={
                          Object {
                            "height": undefined,
                            "left": 0,
                            "position": "absolute",
                            "right": undefined,
                            "top": 168,
                            "width": "100%",
                          }
                        }
                      >
                        <UserListItem
                          className="group-member-list_item"
                          first={false}
                          key="id4"
                          last={true}
                          role="listitem"
                          style={
                            Object {
                              "height": undefined,
                              "left": 0,
                              "position": "absolute",
                              "right": undefined,
                              "top": 168,
                              "width": "100%",
                            }
                          }
                        >
                          <div
                            className="UserListItem-iCIMiI krPIGz group-member-list_item"
                            role="listitem"
                            style={
                              Object {
                                "height": undefined,
                                "left": 0,
                                "position": "absolute",
                                "right": undefined,
                                "top": 168,
                                "width": "100%",
                              }
                            }
                          >
                            <ProfilePopoverController
                              hideStatus={false}
                              src="/api/v4/users/id4/image?_=0"
                              userId="id4"
                            >
                              <span
                                aria-expanded="false"
                                aria-haspopup="dialog"
                                onClick={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onPointerDown={[Function]}
                              >
                                <UserButton>
                                  <button
                                    className="UserButton-bZNeGd gDRhSF"
                                  >
                                    <span
                                      className="status-wrapper"
                                    >
                                      <Avatar
                                        className="avatar-post-preview"
                                        size="sm"
                                        tabIndex={-1}
                                        url="/api/v4/users/id4/image?_=0"
                                        username="username4"
                                      >
                                        <img
                                          alt="username4 profile image"
                                          className="Avatar Avatar-sm avatar-post-preview"
                                          loading="lazy"
                                          onError={[Function]}
                                          src="/api/v4/users/id4/image?_=0"
                                          tabIndex={-1}
                                        />
                                      </Avatar>
                                      <Memo(StatusIcon)
                                        status="offline"
                                      >
                                        <StatusOfflineIcon
                                          className="status "
                                        >
                                          <span
                                            className="status "
                                          >
                                            <svg
                                              aria-label="Offline Icon"
                                              className="offline--icon"
                                              height="100%"
                                              role="img"
                                              style={
                                                Object {
                                                  "clipRule": "evenodd",
                                                  "fillRule": "evenodd",
                                                  "strokeLinejoin": "round",
                                                  "strokeMiterlimit": 1.41421,
                                                }
                                              }
                                              viewBox="0 0 20 20"
                                              width="100%"
                                            >
                                              <path
                                                d="M10,0c5.519,0 10,4.481 10,10c0,5.519 -4.481,10 -10,10c-5.519,0 -10,-4.481 -10,-10c0,-5.519 4.481,-10 10,-10Zm0,2c4.415,0 8,3.585 8,8c0,4.415 -3.585,8 -8,8c-4.415,0 -8,-3.585 -8,-8c0,-4.415 3.585,-8 8,-8Z"
                                              />
                                            </svg>
                                          </span>
                                        </StatusOfflineIcon>
                                      </Memo(StatusIcon)>
                                    </span>
                                    <Username
                                      className="overflow--ellipsis text-nowrap"
                                    >
                                      <span
                                        className="Username-hebqVM cKlgOV overflow--ellipsis text-nowrap"
                                      >
                                        Name4 Surname4
                                      </span>
                                    </Username>
                                    <Gap
                                      className="group-member-list_gap"
                                    >
                                      <span
                                        className="Gap-pVXiI hWeVKL group-member-list_gap"
                                      />
                                    </Gap>
                                  </button>
                                </UserButton>
                              </span>
                            </ProfilePopoverController>
                            <DMContainer
                              className="group-member-list_dm-button"
                            >
                              <div
                                className="DMContainer-ilPVMc Cnskx group-member-list_dm-button"
                              >
                                <WithTooltip
                                  title="Send message"
                                >
                                  <DMButton
                                    aria-label="Send message to Name4 Surname4"
                                    className="btn btn-icon btn-xs"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseMove={[Function]}
                                    onPointerDown={[Function]}
                                    onPointerEnter={[Function]}
                                  >
                                    <button
                                      aria-label="Send message to Name4 Surname4"
                                      className="DMButton-hIFgRF ecgFEo btn btn-icon btn-xs"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseMove={[Function]}
                                      onPointerDown={[Function]}
                                      onPointerEnter={[Function]}
                                    >
                                      <i
                                        className="icon icon-send"
                                      />
                                    </button>
                                  </DMButton>
                                </WithTooltip>
                              </div>
                            </DMContainer>
                          </div>
                        </UserListItem>
                      </Item>
                    </div>
                  </div>
                </List>
              </InfiniteLoader>
            </Component>
          </div>
        </UserList>
      </Memo(GroupMemberList)>
    </Router>
  </BrowserRouter>
</Provider>
`;
