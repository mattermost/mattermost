// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/post_view/CommentedOn should match snapshot 1`] = `
<div
  className="post__link"
  data-testid="post-link"
>
  <span>
    <MemoizedFormattedMessage
      defaultMessage="Commented on {name}'s message: "
      id="post_body.commentedOn"
      values={
        Object {
          "name": <a
            className="theme user_name"
          >
            <Memo(Connect(UserProfile))
              userId=""
            />
          </a>,
        }
      }
    />
    <a
      className="theme"
      onClick={[MockFunction]}
    >
      text message
    </a>
  </span>
</div>
`;

exports[`components/post_view/CommentedOn should match snapshot 2`] = `
<div
  className="post__link"
  data-testid="post-link"
>
  <span>
    <MemoizedFormattedMessage
      defaultMessage="Commented on {name}'s message: "
      id="post_body.commentedOn"
      values={
        Object {
          "name": <a
            className="theme user_name"
          >
            <Memo(Connect(UserProfile))
              userId=""
            />
          </a>,
        }
      }
    />
    <a
      className="theme"
      onClick={[MockFunction]}
    >
      text message
    </a>
  </span>
</div>
`;

exports[`components/post_view/CommentedOn should match snapshot 3`] = `
<div
  className="post__link"
  data-testid="post-link"
>
  <span>
    <MemoizedFormattedMessage
      defaultMessage="Commented on {name}'s message: "
      id="post_body.commentedOn"
      values={
        Object {
          "name": <a
            className="theme user_name"
          >
            <Memo(Connect(UserProfile))
              userId=""
            />
          </a>,
        }
      }
    />
    <a
      className="theme"
      onClick={[MockFunction]}
    >
      <Connect(Component)
        parentPostId="post_id"
      />
    </a>
  </span>
</div>
`;

exports[`components/post_view/CommentedOn should match snapshots for post with props.fallback as message 1`] = `
<div
  className="post__link"
  data-testid="post-link"
>
  <span>
    <MemoizedFormattedMessage
      defaultMessage="Commented on {name}'s message: "
      id="post_body.commentedOn"
      values={
        Object {
          "name": <a
            className="theme user_name"
          >
            <Memo(Connect(UserProfile))
              userId=""
            />
          </a>,
        }
      }
    />
    <a
      className="theme"
      onClick={[MockFunction]}
    >
      This is fallback message
    </a>
  </span>
</div>
`;

exports[`components/post_view/CommentedOn should match snapshots for post with props.pretext as message 1`] = `
<div
  className="post__link"
  data-testid="post-link"
>
  <span>
    <MemoizedFormattedMessage
      defaultMessage="Commented on {name}'s message: "
      id="post_body.commentedOn"
      values={
        Object {
          "name": <a
            className="theme user_name"
          >
            <Memo(Connect(UserProfile))
              userId=""
            />
          </a>,
        }
      }
    />
    <a
      className="theme"
      onClick={[MockFunction]}
    >
      This is a pretext
    </a>
  </span>
</div>
`;

exports[`components/post_view/CommentedOn should match snapshots for post with props.text as message 1`] = `
<div
  className="post__link"
  data-testid="post-link"
>
  <span>
    <MemoizedFormattedMessage
      defaultMessage="Commented on {name}'s message: "
      id="post_body.commentedOn"
      values={
        Object {
          "name": <a
            className="theme user_name"
          >
            <Memo(Connect(UserProfile))
              userId=""
            />
          </a>,
        }
      }
    />
    <a
      className="theme"
      onClick={[MockFunction]}
    >
      This is a text
    </a>
  </span>
</div>
`;

exports[`components/post_view/CommentedOn should match snapshots for post with props.title as message 1`] = `
<div
  className="post__link"
  data-testid="post-link"
>
  <span>
    <MemoizedFormattedMessage
      defaultMessage="Commented on {name}'s message: "
      id="post_body.commentedOn"
      values={
        Object {
          "name": <a
            className="theme user_name"
          >
            <Memo(Connect(UserProfile))
              userId=""
            />
          </a>,
        }
      }
    />
    <a
      className="theme"
      onClick={[MockFunction]}
    >
      This is a title
    </a>
  </span>
</div>
`;
