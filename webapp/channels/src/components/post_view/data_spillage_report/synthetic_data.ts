// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.
// See LICENSE.txt for license information.

import type {NameMappedPropertyFields, PropertyValue} from '@mattermost/types/properties';

export function getSyntheticPropertyFields(groupId: string): NameMappedPropertyFields {
    return {
        post_id: {
            id: 'post_id_field_id',
            group_id: groupId,
            name: 'post_id',
            type: 'text',
            attrs: {},
            create_at: 0,
            update_at: 0,
            delete_at: 0,
        },
        post_preview: {
            id: 'post_preview_field_id',
            group_id: groupId,
            name: 'post_preview',
            type: 'text',
            attrs: {subType: 'post'},
            create_at: 0,
            update_at: 0,
            delete_at: 0,
        },
        channel: {
            id: 'channel_field_id',
            group_id: groupId,
            name: 'channel',
            type: 'text',
            attrs: {subType: 'channel'},
            create_at: 0,
            update_at: 0,
            delete_at: 0,
        },
        team: {
            id: 'team_field_id',
            group_id: groupId,
            name: 'team',
            type: 'text',
            attrs: {subType: 'team'},
            create_at: 0,
            update_at: 0,
            delete_at: 0,
        },
        post_author: {
            id: 'post_author_field_id',
            group_id: groupId,
            name: 'post_author',
            type: 'user',
            attrs: {},
            create_at: 0,
            update_at: 0,
            delete_at: 0,
        },
        post_creation_time: {
            id: 'post_creation_time_field_id',
            group_id: groupId,
            name: 'post_creation_time',
            type: 'text',
            attrs: {subType: 'timestamp'},
            create_at: 0,
            update_at: 0,
            delete_at: 0,
        },
    };
}

export function getSyntheticPropertyValues(groupId: string, reportedPostId: string, channelId: string, teamId: string, postAuthorId: string, postCreateAt: number): Array<PropertyValue<unknown>> {
    return [
        {
            id: 'post_preview_value_id',
            field_id: 'post_preview_field_id',
            target_id: reportedPostId,
            target_type: 'post',
            group_id: groupId,
            value: reportedPostId,
            create_at: 0,
            update_at: 0,
            delete_at: 0,
        },
        {
            id: 'post_id_value_id',
            field_id: 'post_id_field_id',
            target_id: reportedPostId,
            target_type: 'post',
            group_id: groupId,
            value: reportedPostId,
            create_at: 0,
            update_at: 0,
            delete_at: 0,
        },
        {
            id: 'channel_value_id',
            field_id: 'channel_field_id',
            target_id: reportedPostId,
            target_type: 'post',
            group_id: groupId,
            value: channelId,
            create_at: 0,
            update_at: 0,
            delete_at: 0,
        },
        {
            id: 'team_value_id',
            field_id: 'team_field_id',
            target_id: reportedPostId,
            target_type: 'post',
            group_id: groupId,
            value: teamId,
            create_at: 0,
            update_at: 0,
            delete_at: 0,
        },
        {
            id: 'post_author_value_id',
            field_id: 'post_author_field_id',
            target_id: reportedPostId,
            target_type: 'post',
            group_id: groupId,
            value: postAuthorId,
            create_at: 0,
            update_at: 0,
            delete_at: 0,
        },
        {
            id: 'post_creation_time_value_id',
            field_id: 'post_creation_time_field_id',
            target_id: reportedPostId,
            target_type: 'post',
            group_id: groupId,
            value: postCreateAt,
            create_at: 0,
            update_at: 0,
            delete_at: 0,
        },
    ];
}
