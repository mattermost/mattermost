// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/channel_view Should match snapshot if channel is archived 1`] = `
<div
  className="app__content"
  id="app-content"
>
  <FileUploadOverlay
    overlayType="center"
  />
  <ChannelHeader
    channelId="channelId"
    channelIsArchived={true}
    deactivatedChannel={false}
    enableOnboardingFlow={true}
    enableWebSocketEventScope={false}
    goToLastViewedChannel={[MockFunction]}
    history={Object {}}
    isChannelBookmarksEnabled={false}
    isCloud={false}
    isFirstAdmin={false}
    location={Object {}}
    match={
      Object {
        "params": Object {},
        "url": "/team/channel/channelId",
      }
    }
    missingChannelRole={false}
    teamUrl="/team"
    viewArchivedChannels={false}
  />
  <DeferredRenderWrapper
    channelId="channelId"
  />
  <div
    className="post-create__container"
    id="post-create"
  >
    <div
      className="channel-archived__message"
      id="channelArchivedMessage"
    >
      <MemoizedFormattedMessage
        defaultMessage="You are viewing an <b>archived channel</b>. New messages cannot be posted."
        id="channelView.archivedChannel"
        values={
          Object {
            "b": [Function],
          }
        }
      />
      <button
        className="btn btn-primary channel-archived__close-btn"
        onClick={[Function]}
      >
        <MemoizedFormattedMessage
          defaultMessage="Close Channel"
          id="center_panel.archived.closeChannel"
        />
      </button>
    </div>
  </div>
</div>
`;

exports[`components/channel_view Should match snapshot if channel is deactivated 1`] = `
<div
  className="app__content"
  id="app-content"
>
  <FileUploadOverlay
    overlayType="center"
  />
  <ChannelHeader
    channelId="channelId"
    channelIsArchived={false}
    deactivatedChannel={true}
    enableOnboardingFlow={true}
    enableWebSocketEventScope={false}
    goToLastViewedChannel={[MockFunction]}
    history={Object {}}
    isChannelBookmarksEnabled={false}
    isCloud={false}
    isFirstAdmin={false}
    location={Object {}}
    match={
      Object {
        "params": Object {},
        "url": "/team/channel/channelId",
      }
    }
    missingChannelRole={false}
    teamUrl="/team"
    viewArchivedChannels={false}
  />
  <DeferredRenderWrapper
    channelId="channelId"
  />
  <div
    className="post-create__container AdvancedTextEditor__ctr"
    id="post-create"
  >
    <div
      className="channel-archived__message"
    >
      <MemoizedFormattedMessage
        defaultMessage="You are viewing an archived channel with a <b>deactivated user</b>. New messages cannot be posted."
        id="channelView.archivedChannelWithDeactivatedUser"
        values={
          Object {
            "b": [Function],
          }
        }
      />
      <button
        className="btn btn-primary channel-archived__close-btn"
        onClick={[Function]}
      >
        <MemoizedFormattedMessage
          defaultMessage="Close Channel"
          id="center_panel.archived.closeChannel"
        />
      </button>
    </div>
  </div>
</div>
`;

exports[`components/channel_view Should match snapshot with base props 1`] = `
<div
  className="app__content"
  id="app-content"
>
  <FileUploadOverlay
    overlayType="center"
  />
  <ChannelHeader
    channelId="channelId"
    channelIsArchived={false}
    deactivatedChannel={false}
    enableOnboardingFlow={true}
    enableWebSocketEventScope={false}
    goToLastViewedChannel={[MockFunction]}
    history={Object {}}
    isChannelBookmarksEnabled={false}
    isCloud={false}
    isFirstAdmin={false}
    location={Object {}}
    match={
      Object {
        "params": Object {},
        "url": "/team/channel/channelId",
      }
    }
    missingChannelRole={false}
    teamUrl="/team"
    viewArchivedChannels={false}
  />
  <DeferredRenderWrapper
    channelId="channelId"
  />
  <div
    className="post-create__container"
    data-testid="post-create"
    id="post-create"
  >
    <AdvancedCreatePost />
  </div>
</div>
`;
