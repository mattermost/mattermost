// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/admin_console/reset_email_modal/reset_email_modal.tsx should match snapshot when not the current user 1`] = `
<Modal
  animation={true}
  aria-labelledby="resetEmailModalLabel"
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  data-testid="resetEmailModal"
  dialogClassName="a11y__modal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[MockFunction]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  role="none"
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h1"
      id="resetEmailModalLabel"
    >
      <MemoizedFormattedMessage
        defaultMessage="Update Email"
        id="admin.reset_email.titleReset"
      />
    </ModalTitle>
  </ModalHeader>
  <form
    className="form-horizontal"
    role="form"
  >
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
    >
      <div
        className="form-group"
      >
        <div
          className="col-sm-10"
        >
          <div
            className="input-group input-group--limit mb-5"
            data-testid="resetEmailForm"
          >
            <span
              className="input-group-addon email__group-addon"
              data-toggle="tooltip"
              title="New Email"
            >
              <MemoizedFormattedMessage
                defaultMessage="New Email"
                id="admin.reset_email.newEmail"
              />
            </span>
            <input
              autoFocus={true}
              className="form-control"
              maxLength={128}
              type="email"
            />
          </div>
        </div>
      </div>
    </ModalBody>
    <ModalFooter
      bsClass="modal-footer"
      componentClass="div"
    >
      <button
        className="btn btn-tertiary"
        onClick={[Function]}
        type="button"
      >
        <MemoizedFormattedMessage
          defaultMessage="Cancel"
          id="admin.reset_email.cancel"
        />
      </button>
      <button
        className="btn btn-primary"
        data-testid="resetEmailButton"
        onClick={[Function]}
        type="submit"
      >
        <MemoizedFormattedMessage
          defaultMessage="Reset"
          id="admin.reset_email.reset"
        />
      </button>
    </ModalFooter>
  </form>
</Modal>
`;

exports[`components/admin_console/reset_email_modal/reset_email_modal.tsx should match snapshot when the current user 1`] = `
<Modal
  animation={true}
  aria-labelledby="resetEmailModalLabel"
  autoFocus={true}
  backdrop={true}
  bsClass="modal"
  data-testid="resetEmailModal"
  dialogClassName="a11y__modal"
  dialogComponentClass={[Function]}
  enforceFocus={true}
  keyboard={true}
  manager={
    ModalManager {
      "add": [Function],
      "containers": Array [],
      "data": Array [],
      "handleContainerOverflow": true,
      "hideSiblingNodes": true,
      "isTopModal": [Function],
      "modals": Array [],
      "remove": [Function],
    }
  }
  onExited={[MockFunction]}
  onHide={[Function]}
  renderBackdrop={[Function]}
  restoreFocus={true}
  role="none"
  show={true}
>
  <ModalHeader
    bsClass="modal-header"
    closeButton={true}
    closeLabel="Close"
  >
    <ModalTitle
      bsClass="modal-title"
      componentClass="h1"
      id="resetEmailModalLabel"
    >
      <MemoizedFormattedMessage
        defaultMessage="Update Email"
        id="admin.reset_email.titleReset"
      />
    </ModalTitle>
  </ModalHeader>
  <form
    className="form-horizontal"
    role="form"
  >
    <ModalBody
      bsClass="modal-body"
      componentClass="div"
    >
      <div
        className="form-group"
      >
        <div
          className="col-sm-10"
        >
          <div
            className="input-group input-group--limit mb-5"
            data-testid="resetEmailForm"
          >
            <span
              className="input-group-addon email__group-addon"
              data-toggle="tooltip"
              title="New Email"
            >
              <MemoizedFormattedMessage
                defaultMessage="New Email"
                id="admin.reset_email.newEmail"
              />
            </span>
            <input
              autoFocus={true}
              className="form-control"
              maxLength={128}
              type="email"
            />
          </div>
          <div
            className="input-group input-group--limit mb-5"
            data-testid="resetEmailForm"
          >
            <span
              className="input-group-addon email__group-addon"
              data-toggle="tooltip"
              title="Current Password"
            >
              <MemoizedFormattedMessage
                defaultMessage="Current Password"
                id="admin.reset_email.currentPassword"
              />
            </span>
            <input
              className="form-control"
              type="password"
            />
          </div>
        </div>
      </div>
    </ModalBody>
    <ModalFooter
      bsClass="modal-footer"
      componentClass="div"
    >
      <button
        className="btn btn-tertiary"
        onClick={[Function]}
        type="button"
      >
        <MemoizedFormattedMessage
          defaultMessage="Cancel"
          id="admin.reset_email.cancel"
        />
      </button>
      <button
        className="btn btn-primary"
        data-testid="resetEmailButton"
        onClick={[Function]}
        type="submit"
      >
        <MemoizedFormattedMessage
          defaultMessage="Reset"
          id="admin.reset_email.reset"
        />
      </button>
    </ModalFooter>
  </form>
</Modal>
`;

exports[`components/admin_console/reset_email_modal/reset_email_modal.tsx should match snapshot when there is no user 1`] = `<div />`;
