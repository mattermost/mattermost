// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/ElasticSearchSettings should match snapshot, disabled 1`] = `
<form
  className="form-horizontal"
  onSubmit={[Function]}
  role="form"
>
  <div
    className="wrapper--fixed"
  >
    <AdminHeader>
      <MemoizedFormattedMessage
        defaultMessage="Elasticsearch"
        id="admin.elasticsearch.title"
      />
    </AdminHeader>
    <SettingsGroup>
      <BooleanSetting
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="When true, indexing of new posts occurs automatically. Search queries will use database search until \\"Enable Elasticsearch for search queries\\" is enabled. <link>Learn more about Elasticsearch in our documentation.</link>"
            id="admin.elasticsearch.enableIndexingDescription"
            values={
              Object {
                "link": [Function],
              }
            }
          />
        }
        id="enableIndexing"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Enable Elasticsearch Indexing:"
            id="admin.elasticsearch.enableIndexingTitle"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
      <AdminTextSetting
        disabled={true}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="The type of the search backend."
            id="admin.elasticsearch.backendDescription"
          />
        }
        id="backend"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Backend type:"
            id="admin.elasticsearch.backendTitle"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"elasticsearch\\"",
            "id": "admin.elasticsearch.backendExample",
          }
        }
        setByEnv={false}
      />
      <AdminTextSetting
        disabled={true}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="The address of the Elasticsearch server. <link>Please see documentation with server setup instructions.</link>"
            id="admin.elasticsearch.connectionUrlDescription"
            values={
              Object {
                "link": [Function],
              }
            }
          />
        }
        id="connectionUrl"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Server Connection Address:"
            id="admin.elasticsearch.connectionUrlTitle"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"https://elasticsearch.example.org:9200\\"",
            "id": "admin.elasticsearch.connectionUrlExample",
          }
        }
        setByEnv={false}
        value="test"
      />
      <AdminTextSetting
        disabled={true}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="(Optional) Custom Certificate Authority certificates for the Elasticsearch server. Leave this empty to use the default CAs from the operating system."
            id="admin.elasticsearch.caDescription"
          />
        }
        id="ca"
        label={
          <MemoizedFormattedMessage
            defaultMessage="CA path:"
            id="admin.elasticsearch.caTitle"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"./elasticsearch/ca.pem\\"",
            "id": "admin.elasticsearch.caExample",
          }
        }
        setByEnv={false}
        value="test.ca"
      />
      <AdminTextSetting
        disabled={true}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="(Optional) The client certificate for the connection to the Elasticsearch server in the PEM format."
            id="admin.elasticsearch.clientCertDescription"
          />
        }
        id="clientCert"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Client Certificate path:"
            id="admin.elasticsearch.clientCertTitle"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"./elasticsearch/client-cert.pem\\"",
            "id": "admin.elasticsearch.clientCertExample",
          }
        }
        setByEnv={false}
        value="test.crt"
      />
      <AdminTextSetting
        disabled={true}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="(Optional) The key for the client certificate in the PEM format."
            id="admin.elasticsearch.clientKeyDescription"
          />
        }
        id="clientKey"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Client Certificate Key path:"
            id="admin.elasticsearch.clientKeyTitle"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"./elasticsearch/client-key.pem\\"",
            "id": "admin.elasticsearch.clientKeyExample",
          }
        }
        setByEnv={false}
        value="test.key"
      />
      <BooleanSetting
        disabled={true}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="When true, Mattermost will not require the Elasticsearch certificate to be signed by a trusted Certificate Authority."
            id="admin.elasticsearch.skipTLSVerificationDescription"
          />
        }
        id="skipTLSVerification"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Skip TLS Verification:"
            id="admin.elasticsearch.skipTLSVerificationTitle"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
      <AdminTextSetting
        disabled={true}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="(Optional) The username to authenticate to the Elasticsearch server."
            id="admin.elasticsearch.usernameDescription"
          />
        }
        id="username"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Server Username:"
            id="admin.elasticsearch.usernameTitle"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"elastic\\"",
            "id": "admin.elasticsearch.usernameExample",
          }
        }
        setByEnv={false}
        value="test"
      />
      <AdminTextSetting
        disabled={true}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="(Optional) The password to authenticate to the Elasticsearch server."
            id="admin.elasticsearch.passwordDescription"
          />
        }
        id="password"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Server Password:"
            id="admin.elasticsearch.passwordTitle"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"yourpassword\\"",
            "id": "admin.elasticsearch.password",
          }
        }
        setByEnv={false}
        value="test"
      />
      <BooleanSetting
        disabled={true}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="When true, sniffing finds and connects to all data nodes in your cluster automatically."
            id="admin.elasticsearch.sniffDescription"
          />
        }
        id="sniff"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Enable Cluster Sniffing:"
            id="admin.elasticsearch.sniffTitle"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
      <RequestButton
        buttonText={
          <MemoizedFormattedMessage
            defaultMessage="Test Connection"
            id="admin.elasticsearch.elasticsearch_test_button"
          />
        }
        disabled={true}
        errorMessage={
          Object {
            "defaultMessage": "Test Failure: {error}",
            "id": "admin.requestButton.requestFailure",
          }
        }
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="Tests if the Mattermost server can connect to the Elasticsearch server specified. Testing the connection only saves the configuration if the test is successful. A successful test will also re-initialize the client if you have started Elasticsearch after starting Mattermost. But this will not restart the workers. To do that, please toggle \\"Enable Elasticsearch Indexing\\"."
            id="admin.elasticsearch.testHelpText"
          />
        }
        id="testConfig"
        includeDetailedError={false}
        requestAction={[Function]}
        saveNeeded={false}
        showSuccessMessage={true}
        successMessage={
          Object {
            "defaultMessage": "Test successful. Configuration saved.",
            "id": "admin.elasticsearch.testConfigSuccess",
          }
        }
      />
      <div
        className="form-group"
      >
        <label
          className="control-label col-sm-4"
        >
          <MemoizedFormattedMessage
            defaultMessage="Bulk Indexing:"
            id="admin.elasticsearch.bulkIndexingTitle"
          />
        </label>
        <div
          className="col-sm-8"
        >
          <div
            className="job-table-setting"
          >
            <Connect(JobTable)
              createJobButtonText={
                <MemoizedFormattedMessage
                  defaultMessage="Index Now"
                  id="admin.elasticsearch.createJob.title"
                />
              }
              createJobHelpText={
                <MemoizedFormattedMessage
                  defaultMessage="All users, channels and posts in the database will be indexed from oldest to newest. Elasticsearch is available during indexing but search results may be incomplete until the indexing job is complete."
                  id="admin.elasticsearch.createJob.help"
                />
              }
              disabled={true}
              getExtraInfoText={[Function]}
              jobType="elasticsearch_post_indexing"
            />
          </div>
        </div>
      </div>
      <RequestButton
        buttonText={
          <MemoizedFormattedMessage
            defaultMessage="Rebuild Channels Index"
            id="admin.elasticsearch.rebuildChannelsIndex.title"
          />
        }
        disabled={true}
        errorMessage={
          Object {
            "defaultMessage": "Failed to trigger channels index rebuild job: {error}",
            "id": "admin.elasticsearch.rebuildIndexSuccessfully.error",
          }
        }
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="This purges the channels index and re-indexes all channels in the database, from oldest to newest. Channel autocomplete is available during indexing but search results may be incomplete until the indexing job is complete.
<b>Note- Please ensure no other indexing job is in progress in the table above.</b>"
            id="admin.elasticsearch.rebuildChannelsIndex.helpText"
            values={
              Object {
                "b": [Function],
              }
            }
          />
        }
        id="rebuildChannelsIndexButton"
        includeDetailedError={false}
        label={
          <MemoizedFormattedMessage
            defaultMessage="Rebuild Channels Index"
            id="admin.elasticsearch.rebuildChannelsIndex.title"
          />
        }
        requestAction={[MockFunction]}
        saveNeeded={false}
        showSuccessMessage={true}
        successMessage={
          Object {
            "defaultMessage": "Channels index rebuild job triggered successfully.",
            "id": "admin.elasticsearch.rebuildIndexSuccessfully.success",
          }
        }
      />
      <RequestButton
        buttonText={
          <MemoizedFormattedMessage
            defaultMessage="Purge Index"
            id="admin.elasticsearch.purgeIndexesButton"
          />
        }
        disabled={true}
        errorMessage={
          Object {
            "defaultMessage": "Failed to purge indexes: {error}",
            "id": "admin.elasticsearch.purgeIndexesButton.error",
          }
        }
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="Purging will entirely remove the indexes on the Elasticsearch server. Search results may be incomplete until a bulk index of the existing database is rebuilt."
            id="admin.elasticsearch.purgeIndexesHelpText"
          />
        }
        id="purgeIndexesSection"
        includeDetailedError={false}
        label={
          <MemoizedFormattedMessage
            defaultMessage="Purge Indexes:"
            id="admin.elasticsearch.purgeIndexesButton.label"
          />
        }
        requestAction={[MockFunction]}
        saveNeeded={false}
        showSuccessMessage={true}
        successMessage={
          Object {
            "defaultMessage": "Indexes purged successfully.",
            "id": "admin.elasticsearch.purgeIndexesButton.success",
          }
        }
      />
      <AdminTextSetting
        disabled={true}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="When filled in, these indexes will be ignored during the purge, separated by commas."
            id="admin.elasticsearch.ignoredPurgeIndexesDescription"
          />
        }
        id="ignoredPurgeIndexes"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Indexes to skip while purging:"
            id="admin.elasticsearch.ignoredPurgeIndexes"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: .opendistro*,.security*",
            "id": "admin.elasticsearch.ignoredPurgeIndexesDescription.example",
          }
        }
        setByEnv={false}
      />
      <BooleanSetting
        disabled={true}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="Requires a successful connection to the Elasticsearch server. When true, Elasticsearch will be used for all search queries using the latest index. Search results may be incomplete until a bulk index of the existing post database is finished. When false, database search is used."
            id="admin.elasticsearch.enableSearchingDescription"
          />
        }
        id="enableSearching"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Enable Elasticsearch for search queries:"
            id="admin.elasticsearch.enableSearchingTitle"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
      <BooleanSetting
        disabled={true}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="Requires a successful connection to the Elasticsearch server. When true, Elasticsearch will be used for all autocompletion queries on users and channels using the latest index. Autocompletion results may be incomplete until a bulk index of the existing users and channels database is finished. When false, database autocomplete is used."
            id="admin.elasticsearch.enableAutocompleteDescription"
          />
        }
        id="enableAutocomplete"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Enable Elasticsearch for autocomplete queries:"
            id="admin.elasticsearch.enableAutocompleteTitle"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
    </SettingsGroup>
    <div
      className="admin-console-save"
    >
      <SaveButton
        disabled={true}
        onClick={[Function]}
        saving={false}
        savingMessage={
          <MemoizedFormattedMessage
            defaultMessage="Saving Config..."
            id="admin.saving"
          />
        }
      />
      <WithTooltip
        id="error-tooltip"
        placement="top"
        title=""
      >
        <div
          className="error-message"
        >
          <FormError
            error={null}
          />
        </div>
      </WithTooltip>
    </div>
  </div>
</form>
`;

exports[`components/ElasticSearchSettings should match snapshot, enabled 1`] = `
<form
  className="form-horizontal"
  onSubmit={[Function]}
  role="form"
>
  <div
    className="wrapper--fixed"
  >
    <AdminHeader>
      <MemoizedFormattedMessage
        defaultMessage="Elasticsearch"
        id="admin.elasticsearch.title"
      />
    </AdminHeader>
    <SettingsGroup>
      <BooleanSetting
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="When true, indexing of new posts occurs automatically. Search queries will use database search until \\"Enable Elasticsearch for search queries\\" is enabled. <link>Learn more about Elasticsearch in our documentation.</link>"
            id="admin.elasticsearch.enableIndexingDescription"
            values={
              Object {
                "link": [Function],
              }
            }
          />
        }
        id="enableIndexing"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Enable Elasticsearch Indexing:"
            id="admin.elasticsearch.enableIndexingTitle"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={true}
      />
      <AdminTextSetting
        disabled={false}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="The type of the search backend."
            id="admin.elasticsearch.backendDescription"
          />
        }
        id="backend"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Backend type:"
            id="admin.elasticsearch.backendTitle"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"elasticsearch\\"",
            "id": "admin.elasticsearch.backendExample",
          }
        }
        setByEnv={false}
      />
      <AdminTextSetting
        disabled={false}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="The address of the Elasticsearch server. <link>Please see documentation with server setup instructions.</link>"
            id="admin.elasticsearch.connectionUrlDescription"
            values={
              Object {
                "link": [Function],
              }
            }
          />
        }
        id="connectionUrl"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Server Connection Address:"
            id="admin.elasticsearch.connectionUrlTitle"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"https://elasticsearch.example.org:9200\\"",
            "id": "admin.elasticsearch.connectionUrlExample",
          }
        }
        setByEnv={false}
        value="test"
      />
      <AdminTextSetting
        disabled={false}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="(Optional) Custom Certificate Authority certificates for the Elasticsearch server. Leave this empty to use the default CAs from the operating system."
            id="admin.elasticsearch.caDescription"
          />
        }
        id="ca"
        label={
          <MemoizedFormattedMessage
            defaultMessage="CA path:"
            id="admin.elasticsearch.caTitle"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"./elasticsearch/ca.pem\\"",
            "id": "admin.elasticsearch.caExample",
          }
        }
        setByEnv={false}
        value="test.ca"
      />
      <AdminTextSetting
        disabled={false}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="(Optional) The client certificate for the connection to the Elasticsearch server in the PEM format."
            id="admin.elasticsearch.clientCertDescription"
          />
        }
        id="clientCert"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Client Certificate path:"
            id="admin.elasticsearch.clientCertTitle"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"./elasticsearch/client-cert.pem\\"",
            "id": "admin.elasticsearch.clientCertExample",
          }
        }
        setByEnv={false}
        value="test.crt"
      />
      <AdminTextSetting
        disabled={false}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="(Optional) The key for the client certificate in the PEM format."
            id="admin.elasticsearch.clientKeyDescription"
          />
        }
        id="clientKey"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Client Certificate Key path:"
            id="admin.elasticsearch.clientKeyTitle"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"./elasticsearch/client-key.pem\\"",
            "id": "admin.elasticsearch.clientKeyExample",
          }
        }
        setByEnv={false}
        value="test.key"
      />
      <BooleanSetting
        disabled={false}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="When true, Mattermost will not require the Elasticsearch certificate to be signed by a trusted Certificate Authority."
            id="admin.elasticsearch.skipTLSVerificationDescription"
          />
        }
        id="skipTLSVerification"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Skip TLS Verification:"
            id="admin.elasticsearch.skipTLSVerificationTitle"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
      <AdminTextSetting
        disabled={false}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="(Optional) The username to authenticate to the Elasticsearch server."
            id="admin.elasticsearch.usernameDescription"
          />
        }
        id="username"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Server Username:"
            id="admin.elasticsearch.usernameTitle"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"elastic\\"",
            "id": "admin.elasticsearch.usernameExample",
          }
        }
        setByEnv={false}
        value="test"
      />
      <AdminTextSetting
        disabled={false}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="(Optional) The password to authenticate to the Elasticsearch server."
            id="admin.elasticsearch.passwordDescription"
          />
        }
        id="password"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Server Password:"
            id="admin.elasticsearch.passwordTitle"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"yourpassword\\"",
            "id": "admin.elasticsearch.password",
          }
        }
        setByEnv={false}
        value="test"
      />
      <BooleanSetting
        disabled={false}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="When true, sniffing finds and connects to all data nodes in your cluster automatically."
            id="admin.elasticsearch.sniffDescription"
          />
        }
        id="sniff"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Enable Cluster Sniffing:"
            id="admin.elasticsearch.sniffTitle"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
      <RequestButton
        buttonText={
          <MemoizedFormattedMessage
            defaultMessage="Test Connection"
            id="admin.elasticsearch.elasticsearch_test_button"
          />
        }
        disabled={false}
        errorMessage={
          Object {
            "defaultMessage": "Test Failure: {error}",
            "id": "admin.requestButton.requestFailure",
          }
        }
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="Tests if the Mattermost server can connect to the Elasticsearch server specified. Testing the connection only saves the configuration if the test is successful. A successful test will also re-initialize the client if you have started Elasticsearch after starting Mattermost. But this will not restart the workers. To do that, please toggle \\"Enable Elasticsearch Indexing\\"."
            id="admin.elasticsearch.testHelpText"
          />
        }
        id="testConfig"
        includeDetailedError={false}
        requestAction={[Function]}
        saveNeeded={false}
        showSuccessMessage={true}
        successMessage={
          Object {
            "defaultMessage": "Test successful. Configuration saved.",
            "id": "admin.elasticsearch.testConfigSuccess",
          }
        }
      />
      <div
        className="form-group"
      >
        <label
          className="control-label col-sm-4"
        >
          <MemoizedFormattedMessage
            defaultMessage="Bulk Indexing:"
            id="admin.elasticsearch.bulkIndexingTitle"
          />
        </label>
        <div
          className="col-sm-8"
        >
          <div
            className="job-table-setting"
          >
            <Connect(JobTable)
              createJobButtonText={
                <MemoizedFormattedMessage
                  defaultMessage="Index Now"
                  id="admin.elasticsearch.createJob.title"
                />
              }
              createJobHelpText={
                <MemoizedFormattedMessage
                  defaultMessage="All users, channels and posts in the database will be indexed from oldest to newest. Elasticsearch is available during indexing but search results may be incomplete until the indexing job is complete."
                  id="admin.elasticsearch.createJob.help"
                />
              }
              getExtraInfoText={[Function]}
              jobType="elasticsearch_post_indexing"
            />
          </div>
        </div>
      </div>
      <RequestButton
        buttonText={
          <MemoizedFormattedMessage
            defaultMessage="Rebuild Channels Index"
            id="admin.elasticsearch.rebuildChannelsIndex.title"
          />
        }
        disabled={false}
        errorMessage={
          Object {
            "defaultMessage": "Failed to trigger channels index rebuild job: {error}",
            "id": "admin.elasticsearch.rebuildIndexSuccessfully.error",
          }
        }
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="This purges the channels index and re-indexes all channels in the database, from oldest to newest. Channel autocomplete is available during indexing but search results may be incomplete until the indexing job is complete.
<b>Note- Please ensure no other indexing job is in progress in the table above.</b>"
            id="admin.elasticsearch.rebuildChannelsIndex.helpText"
            values={
              Object {
                "b": [Function],
              }
            }
          />
        }
        id="rebuildChannelsIndexButton"
        includeDetailedError={false}
        label={
          <MemoizedFormattedMessage
            defaultMessage="Rebuild Channels Index"
            id="admin.elasticsearch.rebuildChannelsIndex.title"
          />
        }
        requestAction={[MockFunction]}
        saveNeeded={false}
        showSuccessMessage={true}
        successMessage={
          Object {
            "defaultMessage": "Channels index rebuild job triggered successfully.",
            "id": "admin.elasticsearch.rebuildIndexSuccessfully.success",
          }
        }
      />
      <RequestButton
        buttonText={
          <MemoizedFormattedMessage
            defaultMessage="Purge Index"
            id="admin.elasticsearch.purgeIndexesButton"
          />
        }
        disabled={false}
        errorMessage={
          Object {
            "defaultMessage": "Failed to purge indexes: {error}",
            "id": "admin.elasticsearch.purgeIndexesButton.error",
          }
        }
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="Purging will entirely remove the indexes on the Elasticsearch server. Search results may be incomplete until a bulk index of the existing database is rebuilt."
            id="admin.elasticsearch.purgeIndexesHelpText"
          />
        }
        id="purgeIndexesSection"
        includeDetailedError={false}
        label={
          <MemoizedFormattedMessage
            defaultMessage="Purge Indexes:"
            id="admin.elasticsearch.purgeIndexesButton.label"
          />
        }
        requestAction={[MockFunction]}
        saveNeeded={false}
        showSuccessMessage={true}
        successMessage={
          Object {
            "defaultMessage": "Indexes purged successfully.",
            "id": "admin.elasticsearch.purgeIndexesButton.success",
          }
        }
      />
      <AdminTextSetting
        disabled={false}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="When filled in, these indexes will be ignored during the purge, separated by commas."
            id="admin.elasticsearch.ignoredPurgeIndexesDescription"
          />
        }
        id="ignoredPurgeIndexes"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Indexes to skip while purging:"
            id="admin.elasticsearch.ignoredPurgeIndexes"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: .opendistro*,.security*",
            "id": "admin.elasticsearch.ignoredPurgeIndexesDescription.example",
          }
        }
        setByEnv={false}
      />
      <BooleanSetting
        disabled={false}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="Requires a successful connection to the Elasticsearch server. When true, Elasticsearch will be used for all search queries using the latest index. Search results may be incomplete until a bulk index of the existing post database is finished. When false, database search is used."
            id="admin.elasticsearch.enableSearchingDescription"
          />
        }
        id="enableSearching"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Enable Elasticsearch for search queries:"
            id="admin.elasticsearch.enableSearchingTitle"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
      <BooleanSetting
        disabled={false}
        helpText={
          <MemoizedFormattedMessage
            defaultMessage="Requires a successful connection to the Elasticsearch server. When true, Elasticsearch will be used for all autocompletion queries on users and channels using the latest index. Autocompletion results may be incomplete until a bulk index of the existing users and channels database is finished. When false, database autocomplete is used."
            id="admin.elasticsearch.enableAutocompleteDescription"
          />
        }
        id="enableAutocomplete"
        label={
          <MemoizedFormattedMessage
            defaultMessage="Enable Elasticsearch for autocomplete queries:"
            id="admin.elasticsearch.enableAutocompleteTitle"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
    </SettingsGroup>
    <div
      className="admin-console-save"
    >
      <SaveButton
        disabled={true}
        onClick={[Function]}
        saving={false}
        savingMessage={
          <MemoizedFormattedMessage
            defaultMessage="Saving Config..."
            id="admin.saving"
          />
        }
      />
      <WithTooltip
        id="error-tooltip"
        placement="top"
        title=""
      >
        <div
          className="error-message"
        >
          <FormError
            error={null}
          />
        </div>
      </WithTooltip>
    </div>
  </div>
</form>
`;
