// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/ClusterSettings should match snapshot, compression disabled 1`] = `
<form
  className="form-horizontal"
  onSubmit={[Function]}
  role="form"
>
  <div
    className="wrapper--fixed"
  >
    <AdminHeader>
      <MemoizedFormattedMessage
        defaultMessage="High Availability"
        id="admin.advance.cluster"
      />
    </AdminHeader>
    <Memo(SettingsGroup)>
      <Memo(ClusterTableContainer) />
      <div
        className="banner"
      >
        <MemoizedFormattedMessage
          defaultMessage="Changing properties in this section will require a server restart before taking effect."
          id="admin.cluster.noteDescription"
        />
      </div>
      <Memo(BooleanSetting)
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="When true, Mattermost will run in High Availability mode. Please see <link>documentation</link> to learn more about configuring High Availability for Mattermost."
            id="admin.cluster.enableDescription"
            values={
              Object {
                "link": [Function],
              }
            }
          />
        }
        id="Enable"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Enable High Availability Mode:"
            id="admin.cluster.enableTitle"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={true}
      />
      <AdminTextSetting
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="The cluster to join by name. Only nodes with the same cluster name will join together. This is to support Blue-Green deployments or staging pointing to the same database."
            id="admin.cluster.ClusterNameDesc"
          />
        }
        id="ClusterName"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Cluster Name:"
            id="admin.cluster.ClusterName"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"Production\\" or \\"Staging\\"",
            "id": "admin.cluster.ClusterNameEx",
          }
        }
        setByEnv={false}
        value="test"
      />
      <AdminTextSetting
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="The default value of '<blank>' will attempt to get the Hostname from the OS or use the IP Address. You can override the hostname of this server with this property. It is not recommended to override the Hostname unless needed. This property can also be set to a specific IP Address if needed."
            id="admin.cluster.OverrideHostnameDesc"
          />
        }
        id="OverrideHostname"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Override Hostname:"
            id="admin.cluster.OverrideHostname"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"app-server-01\\"",
            "id": "admin.cluster.OverrideHostnameEx",
          }
        }
        setByEnv={false}
        value=""
      />
      <Memo(BooleanSetting)
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="When true, the cluster will attempt to communicate via IP Address vs using the hostname."
            id="admin.cluster.UseIPAddressDesc"
          />
        }
        id="UseIPAddress"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Use IP Address:"
            id="admin.cluster.UseIPAddress"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
      <Memo(BooleanSetting)
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="When true, all communication through the gossip protocol will be encrypted."
            id="admin.cluster.EnableExperimentalGossipEncryptionDesc"
          />
        }
        id="EnableExperimentalGossipEncryption"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Enable Experimental Gossip encryption:"
            id="admin.cluster.EnableExperimentalGossipEncryption"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
      <Memo(BooleanSetting)
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="When true, all communication through the gossip protocol will be compressed. It is recommended to keep this flag disabled."
            id="admin.cluster.EnableGossipCompressionDesc"
          />
        }
        id="EnableGossipCompression"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Enable Gossip compression:"
            id="admin.cluster.EnableGossipCompression"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
      <AdminTextSetting
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="The port used for the gossip protocol. Both UDP and TCP should be allowed on this port."
            id="admin.cluster.GossipPortDesc"
          />
        }
        id="GossipPort"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Gossip Port:"
            id="admin.cluster.GossipPort"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"8074\\"",
            "id": "admin.cluster.GossipPortEx",
          }
        }
        setByEnv={false}
        value={8074}
      />
    </Memo(SettingsGroup)>
    <div
      className="admin-console-save"
    >
      <SaveButton
        disabled={true}
        onClick={[Function]}
        saving={false}
        savingMessage={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Saving Config..."
            id="admin.saving"
          />
        }
      />
      <WithTooltip
        title=""
      >
        <div
          className="error-message"
        >
          <Memo(FormError)
            error={null}
          />
        </div>
      </WithTooltip>
    </div>
  </div>
</form>
`;

exports[`components/ClusterSettings should match snapshot, compression enabled 1`] = `
<form
  className="form-horizontal"
  onSubmit={[Function]}
  role="form"
>
  <div
    className="wrapper--fixed"
  >
    <AdminHeader>
      <MemoizedFormattedMessage
        defaultMessage="High Availability"
        id="admin.advance.cluster"
      />
    </AdminHeader>
    <Memo(SettingsGroup)>
      <Memo(ClusterTableContainer) />
      <div
        className="banner"
      >
        <MemoizedFormattedMessage
          defaultMessage="Changing properties in this section will require a server restart before taking effect."
          id="admin.cluster.noteDescription"
        />
      </div>
      <Memo(BooleanSetting)
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="When true, Mattermost will run in High Availability mode. Please see <link>documentation</link> to learn more about configuring High Availability for Mattermost."
            id="admin.cluster.enableDescription"
            values={
              Object {
                "link": [Function],
              }
            }
          />
        }
        id="Enable"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Enable High Availability Mode:"
            id="admin.cluster.enableTitle"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={true}
      />
      <AdminTextSetting
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="The cluster to join by name. Only nodes with the same cluster name will join together. This is to support Blue-Green deployments or staging pointing to the same database."
            id="admin.cluster.ClusterNameDesc"
          />
        }
        id="ClusterName"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Cluster Name:"
            id="admin.cluster.ClusterName"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"Production\\" or \\"Staging\\"",
            "id": "admin.cluster.ClusterNameEx",
          }
        }
        setByEnv={false}
        value="test"
      />
      <AdminTextSetting
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="The default value of '<blank>' will attempt to get the Hostname from the OS or use the IP Address. You can override the hostname of this server with this property. It is not recommended to override the Hostname unless needed. This property can also be set to a specific IP Address if needed."
            id="admin.cluster.OverrideHostnameDesc"
          />
        }
        id="OverrideHostname"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Override Hostname:"
            id="admin.cluster.OverrideHostname"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"app-server-01\\"",
            "id": "admin.cluster.OverrideHostnameEx",
          }
        }
        setByEnv={false}
        value=""
      />
      <Memo(BooleanSetting)
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="When true, the cluster will attempt to communicate via IP Address vs using the hostname."
            id="admin.cluster.UseIPAddressDesc"
          />
        }
        id="UseIPAddress"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Use IP Address:"
            id="admin.cluster.UseIPAddress"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
      <Memo(BooleanSetting)
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="When true, all communication through the gossip protocol will be encrypted."
            id="admin.cluster.EnableExperimentalGossipEncryptionDesc"
          />
        }
        id="EnableExperimentalGossipEncryption"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Enable Experimental Gossip encryption:"
            id="admin.cluster.EnableExperimentalGossipEncryption"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
      <Memo(BooleanSetting)
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="When true, all communication through the gossip protocol will be compressed. It is recommended to keep this flag disabled."
            id="admin.cluster.EnableGossipCompressionDesc"
          />
        }
        id="EnableGossipCompression"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Enable Gossip compression:"
            id="admin.cluster.EnableGossipCompression"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={true}
      />
      <AdminTextSetting
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="The port used for the gossip protocol. Both UDP and TCP should be allowed on this port."
            id="admin.cluster.GossipPortDesc"
          />
        }
        id="GossipPort"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Gossip Port:"
            id="admin.cluster.GossipPort"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"8074\\"",
            "id": "admin.cluster.GossipPortEx",
          }
        }
        setByEnv={false}
        value={8074}
      />
    </Memo(SettingsGroup)>
    <div
      className="admin-console-save"
    >
      <SaveButton
        disabled={true}
        onClick={[Function]}
        saving={false}
        savingMessage={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Saving Config..."
            id="admin.saving"
          />
        }
      />
      <WithTooltip
        title=""
      >
        <div
          className="error-message"
        >
          <Memo(FormError)
            error={null}
          />
        </div>
      </WithTooltip>
    </div>
  </div>
</form>
`;

exports[`components/ClusterSettings should match snapshot, encryption disabled 1`] = `
<form
  className="form-horizontal"
  onSubmit={[Function]}
  role="form"
>
  <div
    className="wrapper--fixed"
  >
    <AdminHeader>
      <MemoizedFormattedMessage
        defaultMessage="High Availability"
        id="admin.advance.cluster"
      />
    </AdminHeader>
    <Memo(SettingsGroup)>
      <Memo(ClusterTableContainer) />
      <div
        className="banner"
      >
        <MemoizedFormattedMessage
          defaultMessage="Changing properties in this section will require a server restart before taking effect."
          id="admin.cluster.noteDescription"
        />
      </div>
      <Memo(BooleanSetting)
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="When true, Mattermost will run in High Availability mode. Please see <link>documentation</link> to learn more about configuring High Availability for Mattermost."
            id="admin.cluster.enableDescription"
            values={
              Object {
                "link": [Function],
              }
            }
          />
        }
        id="Enable"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Enable High Availability Mode:"
            id="admin.cluster.enableTitle"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={true}
      />
      <AdminTextSetting
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="The cluster to join by name. Only nodes with the same cluster name will join together. This is to support Blue-Green deployments or staging pointing to the same database."
            id="admin.cluster.ClusterNameDesc"
          />
        }
        id="ClusterName"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Cluster Name:"
            id="admin.cluster.ClusterName"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"Production\\" or \\"Staging\\"",
            "id": "admin.cluster.ClusterNameEx",
          }
        }
        setByEnv={false}
        value="test"
      />
      <AdminTextSetting
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="The default value of '<blank>' will attempt to get the Hostname from the OS or use the IP Address. You can override the hostname of this server with this property. It is not recommended to override the Hostname unless needed. This property can also be set to a specific IP Address if needed."
            id="admin.cluster.OverrideHostnameDesc"
          />
        }
        id="OverrideHostname"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Override Hostname:"
            id="admin.cluster.OverrideHostname"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"app-server-01\\"",
            "id": "admin.cluster.OverrideHostnameEx",
          }
        }
        setByEnv={false}
        value=""
      />
      <Memo(BooleanSetting)
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="When true, the cluster will attempt to communicate via IP Address vs using the hostname."
            id="admin.cluster.UseIPAddressDesc"
          />
        }
        id="UseIPAddress"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Use IP Address:"
            id="admin.cluster.UseIPAddress"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
      <Memo(BooleanSetting)
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="When true, all communication through the gossip protocol will be encrypted."
            id="admin.cluster.EnableExperimentalGossipEncryptionDesc"
          />
        }
        id="EnableExperimentalGossipEncryption"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Enable Experimental Gossip encryption:"
            id="admin.cluster.EnableExperimentalGossipEncryption"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
      <Memo(BooleanSetting)
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="When true, all communication through the gossip protocol will be compressed. It is recommended to keep this flag disabled."
            id="admin.cluster.EnableGossipCompressionDesc"
          />
        }
        id="EnableGossipCompression"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Enable Gossip compression:"
            id="admin.cluster.EnableGossipCompression"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
      <AdminTextSetting
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="The port used for the gossip protocol. Both UDP and TCP should be allowed on this port."
            id="admin.cluster.GossipPortDesc"
          />
        }
        id="GossipPort"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Gossip Port:"
            id="admin.cluster.GossipPort"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"8074\\"",
            "id": "admin.cluster.GossipPortEx",
          }
        }
        setByEnv={false}
        value={8074}
      />
    </Memo(SettingsGroup)>
    <div
      className="admin-console-save"
    >
      <SaveButton
        disabled={true}
        onClick={[Function]}
        saving={false}
        savingMessage={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Saving Config..."
            id="admin.saving"
          />
        }
      />
      <WithTooltip
        title=""
      >
        <div
          className="error-message"
        >
          <Memo(FormError)
            error={null}
          />
        </div>
      </WithTooltip>
    </div>
  </div>
</form>
`;

exports[`components/ClusterSettings should match snapshot, encryption enabled 1`] = `
<form
  className="form-horizontal"
  onSubmit={[Function]}
  role="form"
>
  <div
    className="wrapper--fixed"
  >
    <AdminHeader>
      <MemoizedFormattedMessage
        defaultMessage="High Availability"
        id="admin.advance.cluster"
      />
    </AdminHeader>
    <Memo(SettingsGroup)>
      <Memo(ClusterTableContainer) />
      <div
        className="banner"
      >
        <MemoizedFormattedMessage
          defaultMessage="Changing properties in this section will require a server restart before taking effect."
          id="admin.cluster.noteDescription"
        />
      </div>
      <Memo(BooleanSetting)
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="When true, Mattermost will run in High Availability mode. Please see <link>documentation</link> to learn more about configuring High Availability for Mattermost."
            id="admin.cluster.enableDescription"
            values={
              Object {
                "link": [Function],
              }
            }
          />
        }
        id="Enable"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Enable High Availability Mode:"
            id="admin.cluster.enableTitle"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={true}
      />
      <AdminTextSetting
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="The cluster to join by name. Only nodes with the same cluster name will join together. This is to support Blue-Green deployments or staging pointing to the same database."
            id="admin.cluster.ClusterNameDesc"
          />
        }
        id="ClusterName"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Cluster Name:"
            id="admin.cluster.ClusterName"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"Production\\" or \\"Staging\\"",
            "id": "admin.cluster.ClusterNameEx",
          }
        }
        setByEnv={false}
        value="test"
      />
      <AdminTextSetting
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="The default value of '<blank>' will attempt to get the Hostname from the OS or use the IP Address. You can override the hostname of this server with this property. It is not recommended to override the Hostname unless needed. This property can also be set to a specific IP Address if needed."
            id="admin.cluster.OverrideHostnameDesc"
          />
        }
        id="OverrideHostname"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Override Hostname:"
            id="admin.cluster.OverrideHostname"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"app-server-01\\"",
            "id": "admin.cluster.OverrideHostnameEx",
          }
        }
        setByEnv={false}
        value=""
      />
      <Memo(BooleanSetting)
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="When true, the cluster will attempt to communicate via IP Address vs using the hostname."
            id="admin.cluster.UseIPAddressDesc"
          />
        }
        id="UseIPAddress"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Use IP Address:"
            id="admin.cluster.UseIPAddress"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
      <Memo(BooleanSetting)
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="When true, all communication through the gossip protocol will be encrypted."
            id="admin.cluster.EnableExperimentalGossipEncryptionDesc"
          />
        }
        id="EnableExperimentalGossipEncryption"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Enable Experimental Gossip encryption:"
            id="admin.cluster.EnableExperimentalGossipEncryption"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={true}
      />
      <Memo(BooleanSetting)
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="When true, all communication through the gossip protocol will be compressed. It is recommended to keep this flag disabled."
            id="admin.cluster.EnableGossipCompressionDesc"
          />
        }
        id="EnableGossipCompression"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Enable Gossip compression:"
            id="admin.cluster.EnableGossipCompression"
          />
        }
        onChange={[Function]}
        setByEnv={false}
        value={false}
      />
      <AdminTextSetting
        helpText={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="The port used for the gossip protocol. Both UDP and TCP should be allowed on this port."
            id="admin.cluster.GossipPortDesc"
          />
        }
        id="GossipPort"
        label={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Gossip Port:"
            id="admin.cluster.GossipPort"
          />
        }
        onChange={[Function]}
        placeholder={
          Object {
            "defaultMessage": "E.g.: \\"8074\\"",
            "id": "admin.cluster.GossipPortEx",
          }
        }
        setByEnv={false}
        value={8074}
      />
    </Memo(SettingsGroup)>
    <div
      className="admin-console-save"
    >
      <SaveButton
        disabled={true}
        onClick={[Function]}
        saving={false}
        savingMessage={
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Saving Config..."
            id="admin.saving"
          />
        }
      />
      <WithTooltip
        title=""
      >
        <div
          className="error-message"
        >
          <Memo(FormError)
            error={null}
          />
        </div>
      </WithTooltip>
    </div>
  </div>
</form>
`;
