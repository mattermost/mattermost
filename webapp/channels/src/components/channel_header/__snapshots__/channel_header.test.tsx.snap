// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/ChannelHeader should match snapshot with last active display 1`] = `
<div
  aria-label="channel header region"
  className="channel-header alt a11y__region"
  data-a11y-sort-order="8"
  data-channelid="channel_id"
  id="channel-header"
  role="banner"
  tabIndex={-1}
>
  <div
    className="flex-parent"
  >
    <div
      className="flex-child"
    >
      <div
        className="channel-header__info"
        id="channelHeaderInfo"
      >
        <div
          className="channel-header__title dropdown"
        >
          <Memo(ChannelHeaderTitle)
            dmUser={
              Object {
                "auth_service": "",
                "bot_description": "",
                "create_at": 0,
                "delete_at": 0,
                "email": "",
                "first_name": "",
                "id": "user_id",
                "is_bot": false,
                "last_activity_at": 0,
                "last_name": "",
                "last_password_update": 0,
                "last_picture_update": 0,
                "locale": "",
                "mfa_active": false,
                "nickname": "",
                "notify_props": Object {
                  "calls_desktop_sound": "true",
                  "channel": "false",
                  "comments": "never",
                  "desktop": "default",
                  "desktop_sound": "false",
                  "email": "false",
                  "first_name": "false",
                  "highlight_keys": "",
                  "mark_unread": "mention",
                  "mention_keys": "",
                  "push": "none",
                  "push_status": "offline",
                },
                "password": "",
                "position": "",
                "props": Object {
                  "show_last_active": "true",
                },
                "roles": "",
                "terms_of_service_create_at": 0,
                "terms_of_service_id": "",
                "update_at": 0,
                "username": "some-user",
              }
            }
          />
          <div
            className="channel-header__icons"
          >
            <HeaderIconWrapper
              buttonClass="channel-header__icon channel-header__icon--left btn btn-icon btn-xs "
              buttonId="channelHeaderFilesButton"
              onClick={[Function]}
              tooltip="Channel files"
            >
              <i
                className="icon icon-file-text-outline"
              />
            </HeaderIconWrapper>
          </div>
          <div
            className="channel-header__description"
            dir="auto"
            id="channelHeaderDescription"
          >
            <span
              className="header-status__text"
            >
              <span
                className="last-active__text"
              >
                <MemoizedFormattedMessage
                  defaultMessage="Active {timestamp}"
                  id="channel_header.lastActive"
                  values={
                    Object {
                      "timestamp": <Memo(Connect(injectIntl(Timestamp)))
                        style="short"
                        units={
                          Array [
                            "now",
                            "minute",
                            "hour",
                          ]
                        }
                        useTime={false}
                        value={1632146562846}
                      />,
                    }
                  }
                />
              </span>
            </span>
            <div
              className="header-popover-text-measurer"
            >
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="not the bot description"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </div>
            <span
              className="header-description__text"
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <Overlay
                animation={[Function]}
                onHide={[Function]}
                placement="bottom"
                rootClose={true}
                show={false}
                target={null}
              >
                <Memo(Popover)
                  className="channel-header__popover"
                  id="header-popover"
                  placement="bottom"
                  popoverSize="lg"
                  popoverStyle="info"
                  style={
                    Object {
                      "maxWidth": 16,
                      "transform": "translate(0px, 0px)",
                    }
                  }
                >
                  <span
                    onClick={[Function]}
                  >
                    <Connect(Markdown)
                      imageProps={
                        Object {
                          "hideUtilities": true,
                        }
                      }
                      message="not the bot description"
                      options={
                        Object {
                          "atMentions": true,
                          "channelNamesMap": undefined,
                          "mentionHighlight": false,
                          "singleline": false,
                        }
                      }
                    />
                  </span>
                </Memo(Popover)>
              </Overlay>
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="not the bot description"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <Connect(injectIntl(ChannelHeaderPlug))
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "not the bot description",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "DN",
          "purpose": "purpose",
          "scheme_id": "id",
          "status": "offline",
          "team_id": "team_id",
          "type": "D",
          "update_at": 0,
        }
      }
      channelMember={
        Object {
          "channel_id": "channel_id",
          "last_update_at": 0,
          "last_viewed_at": 0,
          "mention_count": 0,
          "mention_count_root": 0,
          "msg_count": 0,
          "msg_count_root": 0,
          "notify_props": Object {
            "channel_auto_follow_threads": "off",
            "desktop": "default",
            "email": "default",
            "ignore_channel_mentions": "default",
            "mark_unread": "all",
            "push": "default",
          },
          "roles": "channel_user",
          "scheme_admin": false,
          "scheme_user": true,
          "urgent_mention_count": 0,
          "user_id": "user_id",
        }
      }
    />
    <Connect(CallButton) />
    <ChannelInfoButton
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "not the bot description",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "DN",
          "purpose": "purpose",
          "scheme_id": "id",
          "status": "offline",
          "team_id": "team_id",
          "type": "D",
          "update_at": 0,
        }
      }
    />
  </div>
</div>
`;

exports[`components/ChannelHeader should match snapshot with no last active display because it is disabled 1`] = `
<div
  aria-label="channel header region"
  className="channel-header alt a11y__region"
  data-a11y-sort-order="8"
  data-channelid="channel_id"
  id="channel-header"
  role="banner"
  tabIndex={-1}
>
  <div
    className="flex-parent"
  >
    <div
      className="flex-child"
    >
      <div
        className="channel-header__info"
        id="channelHeaderInfo"
      >
        <div
          className="channel-header__title dropdown"
        >
          <Memo(ChannelHeaderTitle)
            dmUser={
              Object {
                "auth_service": "",
                "bot_description": "",
                "create_at": 0,
                "delete_at": 0,
                "email": "",
                "first_name": "",
                "id": "user_id",
                "is_bot": false,
                "last_activity_at": 0,
                "last_name": "",
                "last_password_update": 0,
                "last_picture_update": 0,
                "locale": "",
                "mfa_active": false,
                "nickname": "",
                "notify_props": Object {
                  "calls_desktop_sound": "true",
                  "channel": "false",
                  "comments": "never",
                  "desktop": "default",
                  "desktop_sound": "false",
                  "email": "false",
                  "first_name": "false",
                  "highlight_keys": "",
                  "mark_unread": "mention",
                  "mention_keys": "",
                  "push": "none",
                  "push_status": "offline",
                },
                "password": "",
                "position": "",
                "props": Object {
                  "show_last_active": "false",
                },
                "roles": "",
                "terms_of_service_create_at": 0,
                "terms_of_service_id": "",
                "update_at": 0,
                "username": "some-user",
              }
            }
          />
          <div
            className="channel-header__icons"
          >
            <HeaderIconWrapper
              buttonClass="channel-header__icon channel-header__icon--left btn btn-icon btn-xs "
              buttonId="channelHeaderFilesButton"
              onClick={[Function]}
              tooltip="Channel files"
            >
              <i
                className="icon icon-file-text-outline"
              />
            </HeaderIconWrapper>
          </div>
          <div
            className="channel-header__description"
            dir="auto"
            id="channelHeaderDescription"
          >
            <span
              className="header-status__text"
            />
            <div
              className="header-popover-text-measurer"
            >
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="not the bot description"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </div>
            <span
              className="header-description__text"
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <Overlay
                animation={[Function]}
                onHide={[Function]}
                placement="bottom"
                rootClose={true}
                show={false}
                target={null}
              >
                <Memo(Popover)
                  className="channel-header__popover"
                  id="header-popover"
                  placement="bottom"
                  popoverSize="lg"
                  popoverStyle="info"
                  style={
                    Object {
                      "maxWidth": 16,
                      "transform": "translate(0px, 0px)",
                    }
                  }
                >
                  <span
                    onClick={[Function]}
                  >
                    <Connect(Markdown)
                      imageProps={
                        Object {
                          "hideUtilities": true,
                        }
                      }
                      message="not the bot description"
                      options={
                        Object {
                          "atMentions": true,
                          "channelNamesMap": undefined,
                          "mentionHighlight": false,
                          "singleline": false,
                        }
                      }
                    />
                  </span>
                </Memo(Popover)>
              </Overlay>
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="not the bot description"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <Connect(injectIntl(ChannelHeaderPlug))
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "not the bot description",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "DN",
          "purpose": "purpose",
          "scheme_id": "id",
          "status": "offline",
          "team_id": "team_id",
          "type": "D",
          "update_at": 0,
        }
      }
      channelMember={
        Object {
          "channel_id": "channel_id",
          "last_update_at": 0,
          "last_viewed_at": 0,
          "mention_count": 0,
          "mention_count_root": 0,
          "msg_count": 0,
          "msg_count_root": 0,
          "notify_props": Object {
            "channel_auto_follow_threads": "off",
            "desktop": "default",
            "email": "default",
            "ignore_channel_mentions": "default",
            "mark_unread": "all",
            "push": "default",
          },
          "roles": "channel_user",
          "scheme_admin": false,
          "scheme_user": true,
          "urgent_mention_count": 0,
          "user_id": "user_id",
        }
      }
    />
    <Connect(CallButton) />
    <ChannelInfoButton
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "not the bot description",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "DN",
          "purpose": "purpose",
          "scheme_id": "id",
          "status": "offline",
          "team_id": "team_id",
          "type": "D",
          "update_at": 0,
        }
      }
    />
  </div>
</div>
`;

exports[`components/ChannelHeader should render active channel files 1`] = `
<div
  aria-label="channel header region"
  className="channel-header alt a11y__region"
  data-a11y-sort-order="8"
  data-channelid="channel_id"
  id="channel-header"
  role="banner"
  tabIndex={-1}
>
  <div
    className="flex-parent"
  >
    <div
      className="flex-child"
    >
      <div
        className="channel-header__info"
        id="channelHeaderInfo"
      >
        <div
          className="channel-header__title dropdown"
        >
          <Memo(ChannelHeaderTitle) />
          <div
            className="channel-header__icons"
          >
            <HeaderIconWrapper
              buttonClass="member-rhs__trigger channel-header__icon channel-header__icon--wide channel-header__icon--left btn btn-icon btn-xs"
              buttonId="member_rhs"
              onClick={[Function]}
              tooltip="Members"
            >
              <i
                aria-hidden="true"
                className="icon icon-account-outline channel-header__members"
              />
              <span
                className="icon__text"
                id="channelMemberCountText"
              >
                -
              </span>
            </HeaderIconWrapper>
            <HeaderIconWrapper
              buttonClass="channel-header__icon channel-header__icon--left btn btn-icon btn-xs  channel-header__icon--active"
              buttonId="channelHeaderFilesButton"
              onClick={[Function]}
              tooltip="Channel files"
            >
              <i
                className="icon icon-file-text-outline"
              />
            </HeaderIconWrapper>
          </div>
          <div
            className="channel-header__description"
            dir="auto"
            id="channelHeaderDescription"
          >
            <div
              className="header-popover-text-measurer"
            >
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </div>
            <span
              className="header-description__text"
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <Overlay
                animation={[Function]}
                onHide={[Function]}
                placement="bottom"
                rootClose={true}
                show={false}
                target={null}
              >
                <Memo(Popover)
                  className="channel-header__popover"
                  id="header-popover"
                  placement="bottom"
                  popoverSize="lg"
                  popoverStyle="info"
                  style={
                    Object {
                      "maxWidth": 16,
                      "transform": "translate(0px, 0px)",
                    }
                  }
                >
                  <span
                    onClick={[Function]}
                  >
                    <Connect(Markdown)
                      imageProps={
                        Object {
                          "hideUtilities": true,
                        }
                      }
                      message="header"
                      options={
                        Object {
                          "atMentions": true,
                          "channelNamesMap": undefined,
                          "mentionHighlight": false,
                          "singleline": false,
                        }
                      }
                    />
                  </span>
                </Memo(Popover)>
              </Overlay>
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <Connect(injectIntl(ChannelHeaderPlug))
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
      channelMember={
        Object {
          "channel_id": "channel_id",
          "last_update_at": 0,
          "last_viewed_at": 0,
          "mention_count": 0,
          "mention_count_root": 0,
          "msg_count": 0,
          "msg_count_root": 0,
          "notify_props": Object {
            "channel_auto_follow_threads": "off",
            "desktop": "default",
            "email": "default",
            "ignore_channel_mentions": "default",
            "mark_unread": "all",
            "push": "default",
          },
          "roles": "channel_user",
          "scheme_admin": false,
          "scheme_user": true,
          "urgent_mention_count": 0,
          "user_id": "user_id",
        }
      }
    />
    <Connect(CallButton) />
    <ChannelInfoButton
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
    />
  </div>
</div>
`;

exports[`components/ChannelHeader should render active flagged posts 1`] = `
<div
  aria-label="channel header region"
  className="channel-header alt a11y__region"
  data-a11y-sort-order="8"
  data-channelid="channel_id"
  id="channel-header"
  role="banner"
  tabIndex={-1}
>
  <div
    className="flex-parent"
  >
    <div
      className="flex-child"
    >
      <div
        className="channel-header__info"
        id="channelHeaderInfo"
      >
        <div
          className="channel-header__title dropdown"
        >
          <Memo(ChannelHeaderTitle) />
          <div
            className="channel-header__icons"
          >
            <HeaderIconWrapper
              buttonClass="member-rhs__trigger channel-header__icon channel-header__icon--wide channel-header__icon--left btn btn-icon btn-xs"
              buttonId="member_rhs"
              onClick={[Function]}
              tooltip="Members"
            >
              <i
                aria-hidden="true"
                className="icon icon-account-outline channel-header__members"
              />
              <span
                className="icon__text"
                id="channelMemberCountText"
              >
                -
              </span>
            </HeaderIconWrapper>
            <HeaderIconWrapper
              buttonClass="channel-header__icon channel-header__icon--left btn btn-icon btn-xs "
              buttonId="channelHeaderFilesButton"
              onClick={[Function]}
              tooltip="Channel files"
            >
              <i
                className="icon icon-file-text-outline"
              />
            </HeaderIconWrapper>
          </div>
          <div
            className="channel-header__description"
            dir="auto"
            id="channelHeaderDescription"
          >
            <div
              className="header-popover-text-measurer"
            >
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </div>
            <span
              className="header-description__text"
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <Overlay
                animation={[Function]}
                onHide={[Function]}
                placement="bottom"
                rootClose={true}
                show={false}
                target={null}
              >
                <Memo(Popover)
                  className="channel-header__popover"
                  id="header-popover"
                  placement="bottom"
                  popoverSize="lg"
                  popoverStyle="info"
                  style={
                    Object {
                      "maxWidth": 16,
                      "transform": "translate(0px, 0px)",
                    }
                  }
                >
                  <span
                    onClick={[Function]}
                  >
                    <Connect(Markdown)
                      imageProps={
                        Object {
                          "hideUtilities": true,
                        }
                      }
                      message="header"
                      options={
                        Object {
                          "atMentions": true,
                          "channelNamesMap": undefined,
                          "mentionHighlight": false,
                          "singleline": false,
                        }
                      }
                    />
                  </span>
                </Memo(Popover)>
              </Overlay>
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <Connect(injectIntl(ChannelHeaderPlug))
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
      channelMember={
        Object {
          "channel_id": "channel_id",
          "last_update_at": 0,
          "last_viewed_at": 0,
          "mention_count": 0,
          "mention_count_root": 0,
          "msg_count": 0,
          "msg_count_root": 0,
          "notify_props": Object {
            "channel_auto_follow_threads": "off",
            "desktop": "default",
            "email": "default",
            "ignore_channel_mentions": "default",
            "mark_unread": "all",
            "push": "default",
          },
          "roles": "channel_user",
          "scheme_admin": false,
          "scheme_user": true,
          "urgent_mention_count": 0,
          "user_id": "user_id",
        }
      }
    />
    <Connect(CallButton) />
    <ChannelInfoButton
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
    />
  </div>
</div>
`;

exports[`components/ChannelHeader should render active mentions posts 1`] = `
<div
  aria-label="channel header region"
  className="channel-header alt a11y__region"
  data-a11y-sort-order="8"
  data-channelid="channel_id"
  id="channel-header"
  role="banner"
  tabIndex={-1}
>
  <div
    className="flex-parent"
  >
    <div
      className="flex-child"
    >
      <div
        className="channel-header__info"
        id="channelHeaderInfo"
      >
        <div
          className="channel-header__title dropdown"
        >
          <Memo(ChannelHeaderTitle) />
          <div
            className="channel-header__icons"
          >
            <HeaderIconWrapper
              buttonClass="member-rhs__trigger channel-header__icon channel-header__icon--wide channel-header__icon--left btn btn-icon btn-xs"
              buttonId="member_rhs"
              onClick={[Function]}
              tooltip="Members"
            >
              <i
                aria-hidden="true"
                className="icon icon-account-outline channel-header__members"
              />
              <span
                className="icon__text"
                id="channelMemberCountText"
              >
                -
              </span>
            </HeaderIconWrapper>
            <HeaderIconWrapper
              buttonClass="channel-header__icon channel-header__icon--left btn btn-icon btn-xs "
              buttonId="channelHeaderFilesButton"
              onClick={[Function]}
              tooltip="Channel files"
            >
              <i
                className="icon icon-file-text-outline"
              />
            </HeaderIconWrapper>
          </div>
          <div
            className="channel-header__description"
            dir="auto"
            id="channelHeaderDescription"
          >
            <div
              className="header-popover-text-measurer"
            >
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </div>
            <span
              className="header-description__text"
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <Overlay
                animation={[Function]}
                onHide={[Function]}
                placement="bottom"
                rootClose={true}
                show={false}
                target={null}
              >
                <Memo(Popover)
                  className="channel-header__popover"
                  id="header-popover"
                  placement="bottom"
                  popoverSize="lg"
                  popoverStyle="info"
                  style={
                    Object {
                      "maxWidth": 16,
                      "transform": "translate(0px, 0px)",
                    }
                  }
                >
                  <span
                    onClick={[Function]}
                  >
                    <Connect(Markdown)
                      imageProps={
                        Object {
                          "hideUtilities": true,
                        }
                      }
                      message="header"
                      options={
                        Object {
                          "atMentions": true,
                          "channelNamesMap": undefined,
                          "mentionHighlight": false,
                          "singleline": false,
                        }
                      }
                    />
                  </span>
                </Memo(Popover)>
              </Overlay>
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <Connect(injectIntl(ChannelHeaderPlug))
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
      channelMember={
        Object {
          "channel_id": "channel_id",
          "last_update_at": 0,
          "last_viewed_at": 0,
          "mention_count": 0,
          "mention_count_root": 0,
          "msg_count": 0,
          "msg_count_root": 0,
          "notify_props": Object {
            "channel_auto_follow_threads": "off",
            "desktop": "default",
            "email": "default",
            "ignore_channel_mentions": "default",
            "mark_unread": "all",
            "push": "default",
          },
          "roles": "channel_user",
          "scheme_admin": false,
          "scheme_user": true,
          "urgent_mention_count": 0,
          "user_id": "user_id",
        }
      }
    />
    <Connect(CallButton) />
    <ChannelInfoButton
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
    />
  </div>
</div>
`;

exports[`components/ChannelHeader should render active pinned posts 1`] = `
<div
  aria-label="channel header region"
  className="channel-header alt a11y__region"
  data-a11y-sort-order="8"
  data-channelid="channel_id"
  id="channel-header"
  role="banner"
  tabIndex={-1}
>
  <div
    className="flex-parent"
  >
    <div
      className="flex-child"
    >
      <div
        className="channel-header__info"
        id="channelHeaderInfo"
      >
        <div
          className="channel-header__title dropdown"
        >
          <Memo(ChannelHeaderTitle) />
          <div
            className="channel-header__icons"
          >
            <HeaderIconWrapper
              buttonClass="member-rhs__trigger channel-header__icon channel-header__icon--wide channel-header__icon--left btn btn-icon btn-xs"
              buttonId="member_rhs"
              onClick={[Function]}
              tooltip="Members"
            >
              <i
                aria-hidden="true"
                className="icon icon-account-outline channel-header__members"
              />
              <span
                className="icon__text"
                id="channelMemberCountText"
              >
                -
              </span>
            </HeaderIconWrapper>
            <HeaderIconWrapper
              buttonClass="channel-header__icon channel-header__icon--left btn btn-icon btn-xs "
              buttonId="channelHeaderFilesButton"
              onClick={[Function]}
              tooltip="Channel files"
            >
              <i
                className="icon icon-file-text-outline"
              />
            </HeaderIconWrapper>
          </div>
          <div
            className="channel-header__description"
            dir="auto"
            id="channelHeaderDescription"
          >
            <div
              className="header-popover-text-measurer"
            >
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </div>
            <span
              className="header-description__text"
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <Overlay
                animation={[Function]}
                onHide={[Function]}
                placement="bottom"
                rootClose={true}
                show={false}
                target={null}
              >
                <Memo(Popover)
                  className="channel-header__popover"
                  id="header-popover"
                  placement="bottom"
                  popoverSize="lg"
                  popoverStyle="info"
                  style={
                    Object {
                      "maxWidth": 16,
                      "transform": "translate(0px, 0px)",
                    }
                  }
                >
                  <span
                    onClick={[Function]}
                  >
                    <Connect(Markdown)
                      imageProps={
                        Object {
                          "hideUtilities": true,
                        }
                      }
                      message="header"
                      options={
                        Object {
                          "atMentions": true,
                          "channelNamesMap": undefined,
                          "mentionHighlight": false,
                          "singleline": false,
                        }
                      }
                    />
                  </span>
                </Memo(Popover)>
              </Overlay>
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <Connect(injectIntl(ChannelHeaderPlug))
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
      channelMember={
        Object {
          "channel_id": "channel_id",
          "last_update_at": 0,
          "last_viewed_at": 0,
          "mention_count": 0,
          "mention_count_root": 0,
          "msg_count": 0,
          "msg_count_root": 0,
          "notify_props": Object {
            "channel_auto_follow_threads": "off",
            "desktop": "default",
            "email": "default",
            "ignore_channel_mentions": "default",
            "mark_unread": "all",
            "push": "default",
          },
          "roles": "channel_user",
          "scheme_admin": false,
          "scheme_user": true,
          "urgent_mention_count": 0,
          "user_id": "user_id",
        }
      }
    />
    <Connect(CallButton) />
    <ChannelInfoButton
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
    />
  </div>
</div>
`;

exports[`components/ChannelHeader should render archived view 1`] = `
<div
  aria-label="channel header region"
  className="channel-header alt a11y__region"
  data-a11y-sort-order="8"
  data-channelid="channel_id"
  id="channel-header"
  role="banner"
  tabIndex={-1}
>
  <div
    className="flex-parent"
  >
    <div
      className="flex-child"
    >
      <div
        className="channel-header__info"
        id="channelHeaderInfo"
      >
        <div
          className="channel-header__title dropdown"
        >
          <Memo(ChannelHeaderTitle) />
          <div
            className="channel-header__icons"
          >
            <HeaderIconWrapper
              buttonClass="member-rhs__trigger channel-header__icon channel-header__icon--wide channel-header__icon--left btn btn-icon btn-xs"
              buttonId="member_rhs"
              onClick={[Function]}
              tooltip="Members"
            >
              <i
                aria-hidden="true"
                className="icon icon-account-outline channel-header__members"
              />
              <span
                className="icon__text"
                id="channelMemberCountText"
              >
                -
              </span>
            </HeaderIconWrapper>
            <HeaderIconWrapper
              buttonClass="channel-header__icon channel-header__icon--left btn btn-icon btn-xs "
              buttonId="channelHeaderFilesButton"
              onClick={[Function]}
              tooltip="Channel files"
            >
              <i
                className="icon icon-file-text-outline"
              />
            </HeaderIconWrapper>
          </div>
          <div
            className="channel-header__description"
            dir="auto"
            id="channelHeaderDescription"
          >
            <div
              className="header-popover-text-measurer"
            >
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </div>
            <span
              className="header-description__text"
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <Overlay
                animation={[Function]}
                onHide={[Function]}
                placement="bottom"
                rootClose={true}
                show={false}
                target={null}
              >
                <Memo(Popover)
                  className="channel-header__popover"
                  id="header-popover"
                  placement="bottom"
                  popoverSize="lg"
                  popoverStyle="info"
                  style={
                    Object {
                      "maxWidth": 16,
                      "transform": "translate(0px, 0px)",
                    }
                  }
                >
                  <span
                    onClick={[Function]}
                  >
                    <Connect(Markdown)
                      imageProps={
                        Object {
                          "hideUtilities": true,
                        }
                      }
                      message="header"
                      options={
                        Object {
                          "atMentions": true,
                          "channelNamesMap": undefined,
                          "mentionHighlight": false,
                          "singleline": false,
                        }
                      }
                    />
                  </span>
                </Memo(Popover)>
              </Overlay>
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <Connect(injectIntl(ChannelHeaderPlug))
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 1234,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
      channelMember={
        Object {
          "channel_id": "channel_id",
          "last_update_at": 0,
          "last_viewed_at": 0,
          "mention_count": 0,
          "mention_count_root": 0,
          "msg_count": 0,
          "msg_count_root": 0,
          "notify_props": Object {
            "channel_auto_follow_threads": "off",
            "desktop": "default",
            "email": "default",
            "ignore_channel_mentions": "default",
            "mark_unread": "all",
            "push": "default",
          },
          "roles": "channel_user",
          "scheme_admin": false,
          "scheme_user": true,
          "urgent_mention_count": 0,
          "user_id": "user_id",
        }
      }
    />
    <Connect(CallButton) />
    <ChannelInfoButton
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 1234,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
    />
  </div>
</div>
`;

exports[`components/ChannelHeader should render correct menu when muted 1`] = `
<div
  aria-label="channel header region"
  className="channel-header alt a11y__region"
  data-a11y-sort-order="8"
  data-channelid="channel_id"
  id="channel-header"
  role="banner"
  tabIndex={-1}
>
  <div
    className="flex-parent"
  >
    <div
      className="flex-child"
    >
      <div
        className="channel-header__info"
        id="channelHeaderInfo"
      >
        <div
          className="channel-header__title dropdown"
        >
          <Memo(ChannelHeaderTitle) />
          <div
            className="channel-header__icons"
          >
            <WithTooltip
              title={
                <Memo(MemoizedFormattedMessage)
                  defaultMessage="Unmute"
                  id="channelHeader.unmute"
                />
              }
            >
              <button
                aria-label="Muted Icon"
                className="channel-header__mute inactive btn btn-icon btn-xs"
                id="toggleMute"
                onClick={[Function]}
              >
                <i
                  className="icon icon-bell-off-outline"
                />
              </button>
            </WithTooltip>
            <HeaderIconWrapper
              buttonClass="member-rhs__trigger channel-header__icon channel-header__icon--wide channel-header__icon--left btn btn-icon btn-xs"
              buttonId="member_rhs"
              onClick={[Function]}
              tooltip="Members"
            >
              <i
                aria-hidden="true"
                className="icon icon-account-outline channel-header__members"
              />
              <span
                className="icon__text"
                id="channelMemberCountText"
              >
                -
              </span>
            </HeaderIconWrapper>
            <HeaderIconWrapper
              buttonClass="channel-header__icon channel-header__icon--left btn btn-icon btn-xs "
              buttonId="channelHeaderFilesButton"
              onClick={[Function]}
              tooltip="Channel files"
            >
              <i
                className="icon icon-file-text-outline"
              />
            </HeaderIconWrapper>
          </div>
          <div
            className="channel-header__description"
            dir="auto"
            id="channelHeaderDescription"
          >
            <div
              className="header-popover-text-measurer"
            >
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </div>
            <span
              className="header-description__text"
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <Overlay
                animation={[Function]}
                onHide={[Function]}
                placement="bottom"
                rootClose={true}
                show={false}
                target={null}
              >
                <Memo(Popover)
                  className="channel-header__popover"
                  id="header-popover"
                  placement="bottom"
                  popoverSize="lg"
                  popoverStyle="info"
                  style={
                    Object {
                      "maxWidth": 16,
                      "transform": "translate(0px, 0px)",
                    }
                  }
                >
                  <span
                    onClick={[Function]}
                  >
                    <Connect(Markdown)
                      imageProps={
                        Object {
                          "hideUtilities": true,
                        }
                      }
                      message="header"
                      options={
                        Object {
                          "atMentions": true,
                          "channelNamesMap": undefined,
                          "mentionHighlight": false,
                          "singleline": false,
                        }
                      }
                    />
                  </span>
                </Memo(Popover)>
              </Overlay>
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <Connect(injectIntl(ChannelHeaderPlug))
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
      channelMember={
        Object {
          "channel_id": "channel_id",
          "last_update_at": 0,
          "last_viewed_at": 0,
          "mention_count": 0,
          "mention_count_root": 0,
          "msg_count": 0,
          "msg_count_root": 0,
          "notify_props": Object {
            "channel_auto_follow_threads": "off",
            "desktop": "default",
            "email": "default",
            "ignore_channel_mentions": "default",
            "mark_unread": "all",
            "push": "default",
          },
          "roles": "channel_user",
          "scheme_admin": false,
          "scheme_user": true,
          "urgent_mention_count": 0,
          "user_id": "user_id",
        }
      }
    />
    <Connect(CallButton) />
    <ChannelInfoButton
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
    />
  </div>
</div>
`;

exports[`components/ChannelHeader should render not active channel files 1`] = `
<div
  aria-label="channel header region"
  className="channel-header alt a11y__region"
  data-a11y-sort-order="8"
  data-channelid="channel_id"
  id="channel-header"
  role="banner"
  tabIndex={-1}
>
  <div
    className="flex-parent"
  >
    <div
      className="flex-child"
    >
      <div
        className="channel-header__info"
        id="channelHeaderInfo"
      >
        <div
          className="channel-header__title dropdown"
        >
          <Memo(ChannelHeaderTitle) />
          <div
            className="channel-header__icons"
          >
            <HeaderIconWrapper
              buttonClass="member-rhs__trigger channel-header__icon channel-header__icon--wide channel-header__icon--left btn btn-icon btn-xs"
              buttonId="member_rhs"
              onClick={[Function]}
              tooltip="Members"
            >
              <i
                aria-hidden="true"
                className="icon icon-account-outline channel-header__members"
              />
              <span
                className="icon__text"
                id="channelMemberCountText"
              >
                -
              </span>
            </HeaderIconWrapper>
            <HeaderIconWrapper
              buttonClass="channel-header__icon channel-header__icon--left btn btn-icon btn-xs "
              buttonId="channelHeaderFilesButton"
              onClick={[Function]}
              tooltip="Channel files"
            >
              <i
                className="icon icon-file-text-outline"
              />
            </HeaderIconWrapper>
          </div>
          <div
            className="channel-header__description"
            dir="auto"
            id="channelHeaderDescription"
          >
            <div
              className="header-popover-text-measurer"
            >
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </div>
            <span
              className="header-description__text"
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <Overlay
                animation={[Function]}
                onHide={[Function]}
                placement="bottom"
                rootClose={true}
                show={false}
                target={null}
              >
                <Memo(Popover)
                  className="channel-header__popover"
                  id="header-popover"
                  placement="bottom"
                  popoverSize="lg"
                  popoverStyle="info"
                  style={
                    Object {
                      "maxWidth": 16,
                      "transform": "translate(0px, 0px)",
                    }
                  }
                >
                  <span
                    onClick={[Function]}
                  >
                    <Connect(Markdown)
                      imageProps={
                        Object {
                          "hideUtilities": true,
                        }
                      }
                      message="header"
                      options={
                        Object {
                          "atMentions": true,
                          "channelNamesMap": undefined,
                          "mentionHighlight": false,
                          "singleline": false,
                        }
                      }
                    />
                  </span>
                </Memo(Popover)>
              </Overlay>
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <Connect(injectIntl(ChannelHeaderPlug))
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
      channelMember={
        Object {
          "channel_id": "channel_id",
          "last_update_at": 0,
          "last_viewed_at": 0,
          "mention_count": 0,
          "mention_count_root": 0,
          "msg_count": 0,
          "msg_count_root": 0,
          "notify_props": Object {
            "channel_auto_follow_threads": "off",
            "desktop": "default",
            "email": "default",
            "ignore_channel_mentions": "default",
            "mark_unread": "all",
            "push": "default",
          },
          "roles": "channel_user",
          "scheme_admin": false,
          "scheme_user": true,
          "urgent_mention_count": 0,
          "user_id": "user_id",
        }
      }
    />
    <Connect(CallButton) />
    <ChannelInfoButton
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
    />
  </div>
</div>
`;

exports[`components/ChannelHeader should render properly when custom status is expired 1`] = `
<div
  aria-label="channel header region"
  className="channel-header alt a11y__region"
  data-a11y-sort-order="8"
  data-channelid="channel_id"
  id="channel-header"
  role="banner"
  tabIndex={-1}
>
  <div
    className="flex-parent"
  >
    <div
      className="flex-child"
    >
      <div
        className="channel-header__info"
        id="channelHeaderInfo"
      >
        <div
          className="channel-header__title dropdown"
        >
          <Memo(ChannelHeaderTitle)
            dmUser={
              Object {
                "auth_service": "",
                "bot_description": "",
                "create_at": 0,
                "delete_at": 0,
                "email": "",
                "first_name": "",
                "id": "user_id",
                "is_bot": false,
                "last_activity_at": 0,
                "last_name": "",
                "last_password_update": 0,
                "last_picture_update": 0,
                "locale": "",
                "mfa_active": false,
                "nickname": "",
                "notify_props": Object {
                  "calls_desktop_sound": "true",
                  "channel": "false",
                  "comments": "never",
                  "desktop": "default",
                  "desktop_sound": "false",
                  "email": "false",
                  "first_name": "false",
                  "highlight_keys": "",
                  "mark_unread": "mention",
                  "mention_keys": "",
                  "push": "none",
                  "push_status": "offline",
                },
                "password": "",
                "position": "",
                "props": Object {},
                "roles": "",
                "terms_of_service_create_at": 0,
                "terms_of_service_id": "",
                "update_at": 0,
                "username": "some-user",
              }
            }
          />
          <div
            className="channel-header__icons"
          >
            <HeaderIconWrapper
              buttonClass="channel-header__icon channel-header__icon--left btn btn-icon btn-xs "
              buttonId="channelHeaderFilesButton"
              onClick={[Function]}
              tooltip="Channel files"
            >
              <i
                className="icon icon-file-text-outline"
              />
            </HeaderIconWrapper>
          </div>
          <div
            className="channel-header__description"
            dir="auto"
            id="channelHeaderDescription"
          >
            <span
              className="header-status__text"
            >
              <span
                className="last-active__text"
              >
                <MemoizedFormattedMessage
                  defaultMessage="Active {timestamp}"
                  id="channel_header.lastActive"
                  values={
                    Object {
                      "timestamp": <Memo(Connect(injectIntl(Timestamp)))
                        style="short"
                        units={
                          Array [
                            "now",
                            "minute",
                            "hour",
                          ]
                        }
                        useTime={false}
                        value={1632146562846}
                      />,
                    }
                  }
                />
              </span>
            </span>
            <div
              className="header-popover-text-measurer"
            >
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="not the bot description"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </div>
            <span
              className="header-description__text"
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <Overlay
                animation={[Function]}
                onHide={[Function]}
                placement="bottom"
                rootClose={true}
                show={false}
                target={null}
              >
                <Memo(Popover)
                  className="channel-header__popover"
                  id="header-popover"
                  placement="bottom"
                  popoverSize="lg"
                  popoverStyle="info"
                  style={
                    Object {
                      "maxWidth": 16,
                      "transform": "translate(0px, 0px)",
                    }
                  }
                >
                  <span
                    onClick={[Function]}
                  >
                    <Connect(Markdown)
                      imageProps={
                        Object {
                          "hideUtilities": true,
                        }
                      }
                      message="not the bot description"
                      options={
                        Object {
                          "atMentions": true,
                          "channelNamesMap": undefined,
                          "mentionHighlight": false,
                          "singleline": false,
                        }
                      }
                    />
                  </span>
                </Memo(Popover)>
              </Overlay>
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="not the bot description"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <Connect(injectIntl(ChannelHeaderPlug))
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "not the bot description",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "DN",
          "purpose": "purpose",
          "scheme_id": "id",
          "status": "offline",
          "team_id": "team_id",
          "type": "D",
          "update_at": 0,
        }
      }
      channelMember={
        Object {
          "channel_id": "channel_id",
          "last_update_at": 0,
          "last_viewed_at": 0,
          "mention_count": 0,
          "mention_count_root": 0,
          "msg_count": 0,
          "msg_count_root": 0,
          "notify_props": Object {
            "channel_auto_follow_threads": "off",
            "desktop": "default",
            "email": "default",
            "ignore_channel_mentions": "default",
            "mark_unread": "all",
            "push": "default",
          },
          "roles": "channel_user",
          "scheme_admin": false,
          "scheme_user": true,
          "urgent_mention_count": 0,
          "user_id": "user_id",
        }
      }
    />
    <Connect(CallButton) />
    <ChannelInfoButton
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "not the bot description",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "DN",
          "purpose": "purpose",
          "scheme_id": "id",
          "status": "offline",
          "team_id": "team_id",
          "type": "D",
          "update_at": 0,
        }
      }
    />
  </div>
</div>
`;

exports[`components/ChannelHeader should render properly when custom status is set 1`] = `
<div
  aria-label="channel header region"
  className="channel-header alt a11y__region"
  data-a11y-sort-order="8"
  data-channelid="channel_id"
  id="channel-header"
  role="banner"
  tabIndex={-1}
>
  <div
    className="flex-parent"
  >
    <div
      className="flex-child"
    >
      <div
        className="channel-header__info"
        id="channelHeaderInfo"
      >
        <div
          className="channel-header__title dropdown"
        >
          <Memo(ChannelHeaderTitle)
            dmUser={
              Object {
                "auth_service": "",
                "bot_description": "",
                "create_at": 0,
                "delete_at": 0,
                "email": "",
                "first_name": "",
                "id": "user_id",
                "is_bot": false,
                "last_activity_at": 0,
                "last_name": "",
                "last_password_update": 0,
                "last_picture_update": 0,
                "locale": "",
                "mfa_active": false,
                "nickname": "",
                "notify_props": Object {
                  "calls_desktop_sound": "true",
                  "channel": "false",
                  "comments": "never",
                  "desktop": "default",
                  "desktop_sound": "false",
                  "email": "false",
                  "first_name": "false",
                  "highlight_keys": "",
                  "mark_unread": "mention",
                  "mention_keys": "",
                  "push": "none",
                  "push_status": "offline",
                },
                "password": "",
                "position": "",
                "props": Object {},
                "roles": "",
                "terms_of_service_create_at": 0,
                "terms_of_service_id": "",
                "update_at": 0,
                "username": "some-user",
              }
            }
          />
          <div
            className="channel-header__icons"
          >
            <HeaderIconWrapper
              buttonClass="channel-header__icon channel-header__icon--left btn btn-icon btn-xs "
              buttonId="channelHeaderFilesButton"
              onClick={[Function]}
              tooltip="Channel files"
            >
              <i
                className="icon icon-file-text-outline"
              />
            </HeaderIconWrapper>
          </div>
          <div
            className="channel-header__description"
            dir="auto"
            id="channelHeaderDescription"
          >
            <span
              className="header-status__text"
            >
              <span
                className="last-active__text"
              >
                <MemoizedFormattedMessage
                  defaultMessage="Active {timestamp}"
                  id="channel_header.lastActive"
                  values={
                    Object {
                      "timestamp": <Memo(Connect(injectIntl(Timestamp)))
                        style="short"
                        units={
                          Array [
                            "now",
                            "minute",
                            "hour",
                          ]
                        }
                        useTime={false}
                        value={1632146562846}
                      />,
                    }
                  }
                />
              </span>
              <div
                className="custom-emoji__wrapper"
              >
                <Memo(CustomStatusEmoji)
                  emojiStyle={
                    Object {
                      "margin": "0 4px 1px",
                      "verticalAlign": "top",
                    }
                  }
                  showTooltip={true}
                  userID="user_id"
                />
                <CustomStatusText
                  className="custom-emoji__text"
                  text="In a meeting"
                />
              </div>
            </span>
            <div
              className="header-popover-text-measurer"
            >
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="not the bot description"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </div>
            <span
              className="header-description__text"
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <Overlay
                animation={[Function]}
                onHide={[Function]}
                placement="bottom"
                rootClose={true}
                show={false}
                target={null}
              >
                <Memo(Popover)
                  className="channel-header__popover"
                  id="header-popover"
                  placement="bottom"
                  popoverSize="lg"
                  popoverStyle="info"
                  style={
                    Object {
                      "maxWidth": 16,
                      "transform": "translate(0px, 0px)",
                    }
                  }
                >
                  <span
                    onClick={[Function]}
                  >
                    <Connect(Markdown)
                      imageProps={
                        Object {
                          "hideUtilities": true,
                        }
                      }
                      message="not the bot description"
                      options={
                        Object {
                          "atMentions": true,
                          "channelNamesMap": undefined,
                          "mentionHighlight": false,
                          "singleline": false,
                        }
                      }
                    />
                  </span>
                </Memo(Popover)>
              </Overlay>
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="not the bot description"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <Connect(injectIntl(ChannelHeaderPlug))
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "not the bot description",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "DN",
          "purpose": "purpose",
          "scheme_id": "id",
          "status": "offline",
          "team_id": "team_id",
          "type": "D",
          "update_at": 0,
        }
      }
      channelMember={
        Object {
          "channel_id": "channel_id",
          "last_update_at": 0,
          "last_viewed_at": 0,
          "mention_count": 0,
          "mention_count_root": 0,
          "msg_count": 0,
          "msg_count_root": 0,
          "notify_props": Object {
            "channel_auto_follow_threads": "off",
            "desktop": "default",
            "email": "default",
            "ignore_channel_mentions": "default",
            "mark_unread": "all",
            "push": "default",
          },
          "roles": "channel_user",
          "scheme_admin": false,
          "scheme_user": true,
          "urgent_mention_count": 0,
          "user_id": "user_id",
        }
      }
    />
    <Connect(CallButton) />
    <ChannelInfoButton
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "not the bot description",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "DN",
          "purpose": "purpose",
          "scheme_id": "id",
          "status": "offline",
          "team_id": "team_id",
          "type": "D",
          "update_at": 0,
        }
      }
    />
  </div>
</div>
`;

exports[`components/ChannelHeader should render properly when empty 1`] = `
<div
  aria-label="channel header region"
  className="channel-header alt a11y__region"
  data-a11y-sort-order="8"
  data-channelid="channel_id"
  id="channel-header"
  role="banner"
  tabIndex={-1}
>
  <div
    className="flex-parent"
  >
    <div
      className="flex-child"
    >
      <div
        className="channel-header__info"
        id="channelHeaderInfo"
      >
        <div
          className="channel-header__title dropdown"
        >
          <Memo(ChannelHeaderTitle) />
          <div
            className="channel-header__icons"
          >
            <HeaderIconWrapper
              buttonClass="member-rhs__trigger channel-header__icon channel-header__icon--wide channel-header__icon--left btn btn-icon btn-xs"
              buttonId="member_rhs"
              onClick={[Function]}
              tooltip="Members"
            >
              <i
                aria-hidden="true"
                className="icon icon-account-outline channel-header__members"
              />
              <span
                className="icon__text"
                id="channelMemberCountText"
              >
                -
              </span>
            </HeaderIconWrapper>
            <HeaderIconWrapper
              buttonClass="channel-header__icon channel-header__icon--left btn btn-icon btn-xs "
              buttonId="channelHeaderFilesButton"
              onClick={[Function]}
              tooltip="Channel files"
            >
              <i
                className="icon icon-file-text-outline"
              />
            </HeaderIconWrapper>
          </div>
          <div
            className="channel-header__description"
            dir="auto"
            id="channelHeaderDescription"
          >
            <div
              className="header-popover-text-measurer"
            >
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </div>
            <span
              className="header-description__text"
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <Overlay
                animation={[Function]}
                onHide={[Function]}
                placement="bottom"
                rootClose={true}
                show={false}
                target={null}
              >
                <Memo(Popover)
                  className="channel-header__popover"
                  id="header-popover"
                  placement="bottom"
                  popoverSize="lg"
                  popoverStyle="info"
                  style={
                    Object {
                      "maxWidth": 16,
                      "transform": "translate(0px, 0px)",
                    }
                  }
                >
                  <span
                    onClick={[Function]}
                  >
                    <Connect(Markdown)
                      imageProps={
                        Object {
                          "hideUtilities": true,
                        }
                      }
                      message="header"
                      options={
                        Object {
                          "atMentions": true,
                          "channelNamesMap": undefined,
                          "mentionHighlight": false,
                          "singleline": false,
                        }
                      }
                    />
                  </span>
                </Memo(Popover)>
              </Overlay>
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <Connect(injectIntl(ChannelHeaderPlug))
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "DN",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
      channelMember={
        Object {
          "channel_id": "channel_id",
          "last_update_at": 0,
          "last_viewed_at": 0,
          "mention_count": 0,
          "mention_count_root": 0,
          "msg_count": 0,
          "msg_count_root": 0,
          "notify_props": Object {
            "channel_auto_follow_threads": "off",
            "desktop": "default",
            "email": "default",
            "ignore_channel_mentions": "default",
            "mark_unread": "all",
            "push": "default",
          },
          "roles": "channel_user",
          "scheme_admin": false,
          "scheme_user": true,
          "urgent_mention_count": 0,
          "user_id": "user_id",
        }
      }
    />
    <Connect(CallButton) />
    <ChannelInfoButton
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "DN",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
    />
  </div>
</div>
`;

exports[`components/ChannelHeader should render properly when populated 1`] = `
<div
  aria-label="channel header region"
  className="channel-header alt a11y__region"
  data-a11y-sort-order="8"
  data-channelid="channel_id"
  id="channel-header"
  role="banner"
  tabIndex={-1}
>
  <div
    className="flex-parent"
  >
    <div
      className="flex-child"
    >
      <div
        className="channel-header__info"
        id="channelHeaderInfo"
      >
        <div
          className="channel-header__title dropdown"
        >
          <Memo(ChannelHeaderTitle) />
          <div
            className="channel-header__icons"
          >
            <HeaderIconWrapper
              buttonClass="member-rhs__trigger channel-header__icon channel-header__icon--wide channel-header__icon--left btn btn-icon btn-xs"
              buttonId="member_rhs"
              onClick={[Function]}
              tooltip="Members"
            >
              <i
                aria-hidden="true"
                className="icon icon-account-outline channel-header__members"
              />
              <span
                className="icon__text"
                id="channelMemberCountText"
              >
                -
              </span>
            </HeaderIconWrapper>
            <HeaderIconWrapper
              buttonClass="channel-header__icon channel-header__icon--left btn btn-icon btn-xs "
              buttonId="channelHeaderFilesButton"
              onClick={[Function]}
              tooltip="Channel files"
            >
              <i
                className="icon icon-file-text-outline"
              />
            </HeaderIconWrapper>
          </div>
          <div
            className="channel-header__description"
            dir="auto"
            id="channelHeaderDescription"
          >
            <div
              className="header-popover-text-measurer"
            >
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </div>
            <span
              className="header-description__text"
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <Overlay
                animation={[Function]}
                onHide={[Function]}
                placement="bottom"
                rootClose={true}
                show={false}
                target={null}
              >
                <Memo(Popover)
                  className="channel-header__popover"
                  id="header-popover"
                  placement="bottom"
                  popoverSize="lg"
                  popoverStyle="info"
                  style={
                    Object {
                      "maxWidth": 16,
                      "transform": "translate(0px, 0px)",
                    }
                  }
                >
                  <span
                    onClick={[Function]}
                  >
                    <Connect(Markdown)
                      imageProps={
                        Object {
                          "hideUtilities": true,
                        }
                      }
                      message="header"
                      options={
                        Object {
                          "atMentions": true,
                          "channelNamesMap": undefined,
                          "mentionHighlight": false,
                          "singleline": false,
                        }
                      }
                    />
                  </span>
                </Memo(Popover)>
              </Overlay>
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <Connect(injectIntl(ChannelHeaderPlug))
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
      channelMember={
        Object {
          "channel_id": "channel_id",
          "last_update_at": 0,
          "last_viewed_at": 0,
          "mention_count": 0,
          "mention_count_root": 0,
          "msg_count": 0,
          "msg_count_root": 0,
          "notify_props": Object {
            "channel_auto_follow_threads": "off",
            "desktop": "default",
            "email": "default",
            "ignore_channel_mentions": "default",
            "mark_unread": "all",
            "push": "default",
          },
          "roles": "channel_user",
          "scheme_admin": false,
          "scheme_user": true,
          "urgent_mention_count": 0,
          "user_id": "user_id",
        }
      }
    />
    <Connect(CallButton) />
    <ChannelInfoButton
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
    />
  </div>
</div>
`;

exports[`components/ChannelHeader should render properly when populated with channel props 1`] = `
<div
  aria-label="channel header region"
  className="channel-header alt a11y__region"
  data-a11y-sort-order="8"
  data-channelid="channel_id"
  id="channel-header"
  role="banner"
  tabIndex={-1}
>
  <div
    className="flex-parent"
  >
    <div
      className="flex-child"
    >
      <div
        className="channel-header__info"
        id="channelHeaderInfo"
      >
        <div
          className="channel-header__title dropdown"
        >
          <Memo(ChannelHeaderTitle) />
          <div
            className="channel-header__icons"
          >
            <HeaderIconWrapper
              buttonClass="member-rhs__trigger channel-header__icon channel-header__icon--wide channel-header__icon--left btn btn-icon btn-xs"
              buttonId="member_rhs"
              onClick={[Function]}
              tooltip="Members"
            >
              <i
                aria-hidden="true"
                className="icon icon-account-outline channel-header__members"
              />
              <span
                className="icon__text"
                id="channelMemberCountText"
              >
                -
              </span>
            </HeaderIconWrapper>
            <HeaderIconWrapper
              buttonClass="channel-header__icon channel-header__icon--left btn btn-icon btn-xs "
              buttonId="channelHeaderFilesButton"
              onClick={[Function]}
              tooltip="Channel files"
            >
              <i
                className="icon icon-file-text-outline"
              />
            </HeaderIconWrapper>
          </div>
          <div
            className="channel-header__description"
            dir="auto"
            id="channelHeaderDescription"
          >
            <div
              className="header-popover-text-measurer"
            >
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="See ~test"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": Object {
                      "test": Object {
                        "display_name": "Test",
                      },
                    },
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </div>
            <span
              className="header-description__text"
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <Overlay
                animation={[Function]}
                onHide={[Function]}
                placement="bottom"
                rootClose={true}
                show={false}
                target={null}
              >
                <Memo(Popover)
                  className="channel-header__popover"
                  id="header-popover"
                  placement="bottom"
                  popoverSize="lg"
                  popoverStyle="info"
                  style={
                    Object {
                      "maxWidth": 16,
                      "transform": "translate(0px, 0px)",
                    }
                  }
                >
                  <span
                    onClick={[Function]}
                  >
                    <Connect(Markdown)
                      imageProps={
                        Object {
                          "hideUtilities": true,
                        }
                      }
                      message="See ~test"
                      options={
                        Object {
                          "atMentions": true,
                          "channelNamesMap": Object {
                            "test": Object {
                              "display_name": "Test",
                            },
                          },
                          "mentionHighlight": false,
                          "singleline": false,
                        }
                      }
                    />
                  </span>
                </Memo(Popover)>
              </Overlay>
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="See ~test"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": Object {
                      "test": Object {
                        "display_name": "Test",
                      },
                    },
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <Connect(injectIntl(ChannelHeaderPlug))
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "See ~test",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "props": Object {
            "channel_mentions": Object {
              "test": Object {
                "display_name": "Test",
              },
            },
          },
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
      channelMember={
        Object {
          "channel_id": "channel_id",
          "last_update_at": 0,
          "last_viewed_at": 0,
          "mention_count": 0,
          "mention_count_root": 0,
          "msg_count": 0,
          "msg_count_root": 0,
          "notify_props": Object {
            "channel_auto_follow_threads": "off",
            "desktop": "default",
            "email": "default",
            "ignore_channel_mentions": "default",
            "mark_unread": "all",
            "push": "default",
          },
          "roles": "channel_user",
          "scheme_admin": false,
          "scheme_user": true,
          "urgent_mention_count": 0,
          "user_id": "user_id",
        }
      }
    />
    <Connect(CallButton) />
    <ChannelInfoButton
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "See ~test",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "props": Object {
            "channel_mentions": Object {
              "test": Object {
                "display_name": "Test",
              },
            },
          },
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
    />
  </div>
</div>
`;

exports[`components/ChannelHeader should render shared view 1`] = `
<div
  aria-label="channel header region"
  className="channel-header alt a11y__region"
  data-a11y-sort-order="8"
  data-channelid="channel_id"
  id="channel-header"
  role="banner"
  tabIndex={-1}
>
  <div
    className="flex-parent"
  >
    <div
      className="flex-child"
    >
      <div
        className="channel-header__info"
        id="channelHeaderInfo"
      >
        <div
          className="channel-header__title dropdown"
        >
          <Memo(ChannelHeaderTitle) />
          <div
            className="channel-header__icons"
          >
            <HeaderIconWrapper
              buttonClass="member-rhs__trigger channel-header__icon channel-header__icon--wide channel-header__icon--left btn btn-icon btn-xs"
              buttonId="member_rhs"
              onClick={[Function]}
              tooltip="Members"
            >
              <i
                aria-hidden="true"
                className="icon icon-account-outline channel-header__members"
              />
              <span
                className="icon__text"
                id="channelMemberCountText"
              >
                -
              </span>
            </HeaderIconWrapper>
            <HeaderIconWrapper
              buttonClass="channel-header__icon channel-header__icon--left btn btn-icon btn-xs "
              buttonId="channelHeaderFilesButton"
              onClick={[Function]}
              tooltip="Channel files"
            >
              <i
                className="icon icon-file-text-outline"
              />
            </HeaderIconWrapper>
          </div>
          <div
            className="channel-header__description"
            dir="auto"
            id="channelHeaderDescription"
          >
            <div
              className="header-popover-text-measurer"
            >
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </div>
            <span
              className="header-description__text"
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <Overlay
                animation={[Function]}
                onHide={[Function]}
                placement="bottom"
                rootClose={true}
                show={false}
                target={null}
              >
                <Memo(Popover)
                  className="channel-header__popover"
                  id="header-popover"
                  placement="bottom"
                  popoverSize="lg"
                  popoverStyle="info"
                  style={
                    Object {
                      "maxWidth": 16,
                      "transform": "translate(0px, 0px)",
                    }
                  }
                >
                  <span
                    onClick={[Function]}
                  >
                    <Connect(Markdown)
                      imageProps={
                        Object {
                          "hideUtilities": true,
                        }
                      }
                      message="header"
                      options={
                        Object {
                          "atMentions": true,
                          "channelNamesMap": undefined,
                          "mentionHighlight": false,
                          "singleline": false,
                        }
                      }
                    />
                  </span>
                </Memo(Popover)>
              </Overlay>
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <Connect(injectIntl(ChannelHeaderPlug))
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "shared": true,
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
      channelMember={
        Object {
          "channel_id": "channel_id",
          "last_update_at": 0,
          "last_viewed_at": 0,
          "mention_count": 0,
          "mention_count_root": 0,
          "msg_count": 0,
          "msg_count_root": 0,
          "notify_props": Object {
            "channel_auto_follow_threads": "off",
            "desktop": "default",
            "email": "default",
            "ignore_channel_mentions": "default",
            "mark_unread": "all",
            "push": "default",
          },
          "roles": "channel_user",
          "scheme_admin": false,
          "scheme_user": true,
          "urgent_mention_count": 0,
          "user_id": "user_id",
        }
      }
    />
    <Connect(CallButton) />
    <ChannelInfoButton
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "shared": true,
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
    />
  </div>
</div>
`;

exports[`components/ChannelHeader should render the pinned icon with the pinned posts count 1`] = `
<div
  aria-label="channel header region"
  className="channel-header alt a11y__region"
  data-a11y-sort-order="8"
  data-channelid="channel_id"
  id="channel-header"
  role="banner"
  tabIndex={-1}
>
  <div
    className="flex-parent"
  >
    <div
      className="flex-child"
    >
      <div
        className="channel-header__info"
        id="channelHeaderInfo"
      >
        <div
          className="channel-header__title dropdown"
        >
          <Memo(ChannelHeaderTitle) />
          <div
            className="channel-header__icons"
          >
            <HeaderIconWrapper
              buttonClass="member-rhs__trigger channel-header__icon channel-header__icon--wide channel-header__icon--left btn btn-icon btn-xs"
              buttonId="member_rhs"
              onClick={[Function]}
              tooltip="Members"
            >
              <i
                aria-hidden="true"
                className="icon icon-account-outline channel-header__members"
              />
              <span
                className="icon__text"
                id="channelMemberCountText"
              >
                -
              </span>
            </HeaderIconWrapper>
            <HeaderIconWrapper
              buttonClass="channel-header__icon channel-header__icon--wide channel-header__icon--left btn btn-icon btn-xs"
              buttonId="channelHeaderPinButton"
              onClick={[Function]}
              tooltip="Pinned messages"
            >
              <i
                aria-hidden="true"
                className="icon icon-pin-outline channel-header__pin"
              />
              <span
                className="icon__text"
                id="channelPinnedPostCountText"
              >
                2
              </span>
            </HeaderIconWrapper>
            <HeaderIconWrapper
              buttonClass="channel-header__icon channel-header__icon--left btn btn-icon btn-xs "
              buttonId="channelHeaderFilesButton"
              onClick={[Function]}
              tooltip="Channel files"
            >
              <i
                className="icon icon-file-text-outline"
              />
            </HeaderIconWrapper>
          </div>
          <div
            className="channel-header__description"
            dir="auto"
            id="channelHeaderDescription"
          >
            <div
              className="header-popover-text-measurer"
            >
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </div>
            <span
              className="header-description__text"
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <Overlay
                animation={[Function]}
                onHide={[Function]}
                placement="bottom"
                rootClose={true}
                show={false}
                target={null}
              >
                <Memo(Popover)
                  className="channel-header__popover"
                  id="header-popover"
                  placement="bottom"
                  popoverSize="lg"
                  popoverStyle="info"
                  style={
                    Object {
                      "maxWidth": 16,
                      "transform": "translate(0px, 0px)",
                    }
                  }
                >
                  <span
                    onClick={[Function]}
                  >
                    <Connect(Markdown)
                      imageProps={
                        Object {
                          "hideUtilities": true,
                        }
                      }
                      message="header"
                      options={
                        Object {
                          "atMentions": true,
                          "channelNamesMap": undefined,
                          "mentionHighlight": false,
                          "singleline": false,
                        }
                      }
                    />
                  </span>
                </Memo(Popover)>
              </Overlay>
              <Connect(Markdown)
                imageProps={
                  Object {
                    "hideUtilities": true,
                  }
                }
                message="header"
                options={
                  Object {
                    "atMentions": true,
                    "channelNamesMap": undefined,
                    "mentionHighlight": false,
                    "singleline": true,
                  }
                }
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <Connect(injectIntl(ChannelHeaderPlug))
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
      channelMember={
        Object {
          "channel_id": "channel_id",
          "last_update_at": 0,
          "last_viewed_at": 0,
          "mention_count": 0,
          "mention_count_root": 0,
          "msg_count": 0,
          "msg_count_root": 0,
          "notify_props": Object {
            "channel_auto_follow_threads": "off",
            "desktop": "default",
            "email": "default",
            "ignore_channel_mentions": "default",
            "mark_unread": "all",
            "push": "default",
          },
          "roles": "channel_user",
          "scheme_admin": false,
          "scheme_user": true,
          "urgent_mention_count": 0,
          "user_id": "user_id",
        }
      }
    />
    <Connect(CallButton) />
    <ChannelInfoButton
      channel={
        Object {
          "create_at": 0,
          "creator_id": "id",
          "delete_at": 0,
          "display_name": "name",
          "group_constrained": false,
          "header": "header",
          "id": "channel_id",
          "last_post_at": 0,
          "last_root_post_at": 0,
          "name": "Test",
          "purpose": "purpose",
          "scheme_id": "id",
          "team_id": "team_id",
          "type": "O",
          "update_at": 0,
        }
      }
    />
  </div>
</div>
`;
