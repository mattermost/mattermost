// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/widgets/users/Avatars should fetch missing users 1`] = `
<Avatars
  size="xl"
  userIds={
    Array [
      "1",
      "6",
      "7",
      "2",
      "8",
      "9",
    ]
  }
>
  <div
    className="Avatars Avatars___xl"
  >
    <UserAvatar
      key="1"
      size="xl"
      style={
        Object {
          "background": "rgb(240, 240, 241)",
        }
      }
      userId="1"
    >
      <ProfilePopoverController
        src="/api/v4/users/1/image?_=0"
        triggerComponentAs="button"
        triggerComponentClass="style--none rounded-button"
        userId="1"
      >
        <button
          aria-expanded="false"
          aria-haspopup="dialog"
          className="style--none rounded-button"
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onPointerDown={[Function]}
        >
          <WithTooltip
            id="tooltip-name-1"
            placement="top"
            title="first.last1"
          >
            <OverlayTrigger
              defaultOverlayShown={false}
              delay={400}
              disabled={false}
              overlay={<Unknown />}
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                defaultOverlayShown={false}
                delay={400}
                overlay={
                  <OverlayWrapper
                    intl={
                      Object {
                        "$t": [Function],
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "fallbackOnEmptyString": true,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "onError": [Function],
                        "onWarn": [Function],
                        "textComponent": "span",
                        "timeZone": "Etc/UTC",
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  />
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <Avatar
                  onBlur={[Function]}
                  onClick={null}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  size="xl"
                  style={
                    Object {
                      "background": "rgb(240, 240, 241)",
                    }
                  }
                  tabIndex={-1}
                  url="/api/v4/users/1/image?_=1620680333191"
                >
                  <img
                    alt="user profile image"
                    className="Avatar Avatar-xl"
                    loading="lazy"
                    onBlur={[Function]}
                    onClick={null}
                    onError={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    src="/api/v4/users/1/image?_=1620680333191"
                    style={
                      Object {
                        "background": "rgb(240, 240, 241)",
                      }
                    }
                    tabIndex={-1}
                  />
                </Avatar>
              </OverlayTrigger>
            </OverlayTrigger>
          </WithTooltip>
        </button>
      </ProfilePopoverController>
    </UserAvatar>
    <UserAvatar
      key="6"
      size="xl"
      style={
        Object {
          "background": "rgb(240, 240, 241)",
        }
      }
      userId="6"
    >
      <ProfilePopoverController
        src="/api/v4/users/6/image?_=0"
        triggerComponentAs="button"
        triggerComponentClass="style--none rounded-button"
        userId="6"
      >
        <button
          aria-expanded="false"
          aria-haspopup="dialog"
          className="style--none rounded-button"
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onPointerDown={[Function]}
        >
          <WithTooltip
            id="tooltip-name-6"
            placement="top"
            title="Someone"
          >
            <OverlayTrigger
              defaultOverlayShown={false}
              delay={400}
              disabled={false}
              overlay={<Unknown />}
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                defaultOverlayShown={false}
                delay={400}
                overlay={
                  <OverlayWrapper
                    intl={
                      Object {
                        "$t": [Function],
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "fallbackOnEmptyString": true,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "onError": [Function],
                        "onWarn": [Function],
                        "textComponent": "span",
                        "timeZone": "Etc/UTC",
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  />
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <Avatar
                  onBlur={[Function]}
                  onClick={null}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  size="xl"
                  style={
                    Object {
                      "background": "rgb(240, 240, 241)",
                    }
                  }
                  tabIndex={-1}
                  url="/api/v4/users/6/image?_=0"
                >
                  <img
                    alt="user profile image"
                    className="Avatar Avatar-xl"
                    loading="lazy"
                    onBlur={[Function]}
                    onClick={null}
                    onError={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    src="/api/v4/users/6/image?_=0"
                    style={
                      Object {
                        "background": "rgb(240, 240, 241)",
                      }
                    }
                    tabIndex={-1}
                  />
                </Avatar>
              </OverlayTrigger>
            </OverlayTrigger>
          </WithTooltip>
        </button>
      </ProfilePopoverController>
    </UserAvatar>
    <UserAvatar
      key="7"
      size="xl"
      style={
        Object {
          "background": "rgb(240, 240, 241)",
        }
      }
      userId="7"
    >
      <ProfilePopoverController
        src="/api/v4/users/7/image?_=0"
        triggerComponentAs="button"
        triggerComponentClass="style--none rounded-button"
        userId="7"
      >
        <button
          aria-expanded="false"
          aria-haspopup="dialog"
          className="style--none rounded-button"
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onPointerDown={[Function]}
        >
          <WithTooltip
            id="tooltip-name-7"
            placement="top"
            title="Someone"
          >
            <OverlayTrigger
              defaultOverlayShown={false}
              delay={400}
              disabled={false}
              overlay={<Unknown />}
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                defaultOverlayShown={false}
                delay={400}
                overlay={
                  <OverlayWrapper
                    intl={
                      Object {
                        "$t": [Function],
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "fallbackOnEmptyString": true,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "onError": [Function],
                        "onWarn": [Function],
                        "textComponent": "span",
                        "timeZone": "Etc/UTC",
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  />
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <Avatar
                  onBlur={[Function]}
                  onClick={null}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  size="xl"
                  style={
                    Object {
                      "background": "rgb(240, 240, 241)",
                    }
                  }
                  tabIndex={-1}
                  url="/api/v4/users/7/image?_=0"
                >
                  <img
                    alt="user profile image"
                    className="Avatar Avatar-xl"
                    loading="lazy"
                    onBlur={[Function]}
                    onClick={null}
                    onError={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    src="/api/v4/users/7/image?_=0"
                    style={
                      Object {
                        "background": "rgb(240, 240, 241)",
                      }
                    }
                    tabIndex={-1}
                  />
                </Avatar>
              </OverlayTrigger>
            </OverlayTrigger>
          </WithTooltip>
        </button>
      </ProfilePopoverController>
    </UserAvatar>
    <WithTooltip
      id="names-overflow"
      placement="top"
      title="first.last2, Someone, Someone"
    >
      <OverlayTrigger
        defaultOverlayShown={false}
        delay={400}
        disabled={false}
        overlay={<Unknown />}
        placement="top"
        trigger={
          Array [
            "hover",
            "focus",
          ]
        }
      >
        <OverlayTrigger
          defaultOverlayShown={false}
          delay={400}
          overlay={
            <OverlayWrapper
              intl={
                Object {
                  "$t": [Function],
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "defaultRichTextElements": undefined,
                  "fallbackOnEmptyString": true,
                  "formatDate": [Function],
                  "formatDateTimeRange": [Function],
                  "formatDateToParts": [Function],
                  "formatDisplayName": [Function],
                  "formatList": [Function],
                  "formatListToParts": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getDisplayNames": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "onError": [Function],
                  "onWarn": [Function],
                  "textComponent": "span",
                  "timeZone": "Etc/UTC",
                  "wrapRichTextChunksInFragment": undefined,
                }
              }
            />
          }
          placement="top"
          trigger={
            Array [
              "hover",
              "focus",
            ]
          }
        >
          <Avatar
            onBlur={[Function]}
            onClick={null}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            size="xl"
            style={
              Object {
                "background": "rgb(240, 240, 241)",
              }
            }
            tabIndex={0}
            text="+3"
          >
            <div
              className="Avatar Avatar-xl Avatar-plain"
              data-content="+3"
              onBlur={[Function]}
              onClick={null}
              onFocus={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              style={
                Object {
                  "background": "rgb(240, 240, 241)",
                }
              }
              tabIndex={0}
            />
          </Avatar>
        </OverlayTrigger>
      </OverlayTrigger>
    </WithTooltip>
  </div>
</Avatars>
`;

exports[`components/widgets/users/Avatars should properly count overflow 1`] = `
<Avatars
  size="xl"
  userIds={
    Array [
      "1",
      "2",
      "3",
      "4",
      "5",
    ]
  }
>
  <div
    className="Avatars Avatars___xl"
  >
    <UserAvatar
      key="1"
      size="xl"
      style={
        Object {
          "background": "rgb(240, 240, 241)",
        }
      }
      userId="1"
    >
      <ProfilePopoverController
        src="/api/v4/users/1/image?_=0"
        triggerComponentAs="button"
        triggerComponentClass="style--none rounded-button"
        userId="1"
      >
        <button
          aria-expanded="false"
          aria-haspopup="dialog"
          className="style--none rounded-button"
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onPointerDown={[Function]}
        >
          <WithTooltip
            id="tooltip-name-1"
            placement="top"
            title="first.last1"
          >
            <OverlayTrigger
              defaultOverlayShown={false}
              delay={400}
              disabled={false}
              overlay={<Unknown />}
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                defaultOverlayShown={false}
                delay={400}
                overlay={
                  <OverlayWrapper
                    intl={
                      Object {
                        "$t": [Function],
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "fallbackOnEmptyString": true,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "onError": [Function],
                        "onWarn": [Function],
                        "textComponent": "span",
                        "timeZone": "Etc/UTC",
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  />
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <Avatar
                  onBlur={[Function]}
                  onClick={null}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  size="xl"
                  style={
                    Object {
                      "background": "rgb(240, 240, 241)",
                    }
                  }
                  tabIndex={-1}
                  url="/api/v4/users/1/image?_=1620680333191"
                >
                  <img
                    alt="user profile image"
                    className="Avatar Avatar-xl"
                    loading="lazy"
                    onBlur={[Function]}
                    onClick={null}
                    onError={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    src="/api/v4/users/1/image?_=1620680333191"
                    style={
                      Object {
                        "background": "rgb(240, 240, 241)",
                      }
                    }
                    tabIndex={-1}
                  />
                </Avatar>
              </OverlayTrigger>
            </OverlayTrigger>
          </WithTooltip>
        </button>
      </ProfilePopoverController>
    </UserAvatar>
    <UserAvatar
      key="2"
      size="xl"
      style={
        Object {
          "background": "rgb(240, 240, 241)",
        }
      }
      userId="2"
    >
      <ProfilePopoverController
        src="/api/v4/users/2/image?_=0"
        triggerComponentAs="button"
        triggerComponentClass="style--none rounded-button"
        userId="2"
      >
        <button
          aria-expanded="false"
          aria-haspopup="dialog"
          className="style--none rounded-button"
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onPointerDown={[Function]}
        >
          <WithTooltip
            id="tooltip-name-2"
            placement="top"
            title="first.last2"
          >
            <OverlayTrigger
              defaultOverlayShown={false}
              delay={400}
              disabled={false}
              overlay={<Unknown />}
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                defaultOverlayShown={false}
                delay={400}
                overlay={
                  <OverlayWrapper
                    intl={
                      Object {
                        "$t": [Function],
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "fallbackOnEmptyString": true,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "onError": [Function],
                        "onWarn": [Function],
                        "textComponent": "span",
                        "timeZone": "Etc/UTC",
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  />
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <Avatar
                  onBlur={[Function]}
                  onClick={null}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  size="xl"
                  style={
                    Object {
                      "background": "rgb(240, 240, 241)",
                    }
                  }
                  tabIndex={-1}
                  url="/api/v4/users/2/image?_=1620680333191"
                >
                  <img
                    alt="user profile image"
                    className="Avatar Avatar-xl"
                    loading="lazy"
                    onBlur={[Function]}
                    onClick={null}
                    onError={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    src="/api/v4/users/2/image?_=1620680333191"
                    style={
                      Object {
                        "background": "rgb(240, 240, 241)",
                      }
                    }
                    tabIndex={-1}
                  />
                </Avatar>
              </OverlayTrigger>
            </OverlayTrigger>
          </WithTooltip>
        </button>
      </ProfilePopoverController>
    </UserAvatar>
    <UserAvatar
      key="3"
      size="xl"
      style={
        Object {
          "background": "rgb(240, 240, 241)",
        }
      }
      userId="3"
    >
      <ProfilePopoverController
        src="/api/v4/users/3/image?_=0"
        triggerComponentAs="button"
        triggerComponentClass="style--none rounded-button"
        userId="3"
      >
        <button
          aria-expanded="false"
          aria-haspopup="dialog"
          className="style--none rounded-button"
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onPointerDown={[Function]}
        >
          <WithTooltip
            id="tooltip-name-3"
            placement="top"
            title="first.last3"
          >
            <OverlayTrigger
              defaultOverlayShown={false}
              delay={400}
              disabled={false}
              overlay={<Unknown />}
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                defaultOverlayShown={false}
                delay={400}
                overlay={
                  <OverlayWrapper
                    intl={
                      Object {
                        "$t": [Function],
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "fallbackOnEmptyString": true,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "onError": [Function],
                        "onWarn": [Function],
                        "textComponent": "span",
                        "timeZone": "Etc/UTC",
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  />
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <Avatar
                  onBlur={[Function]}
                  onClick={null}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  size="xl"
                  style={
                    Object {
                      "background": "rgb(240, 240, 241)",
                    }
                  }
                  tabIndex={-1}
                  url="/api/v4/users/3/image?_=1620680333191"
                >
                  <img
                    alt="user profile image"
                    className="Avatar Avatar-xl"
                    loading="lazy"
                    onBlur={[Function]}
                    onClick={null}
                    onError={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    src="/api/v4/users/3/image?_=1620680333191"
                    style={
                      Object {
                        "background": "rgb(240, 240, 241)",
                      }
                    }
                    tabIndex={-1}
                  />
                </Avatar>
              </OverlayTrigger>
            </OverlayTrigger>
          </WithTooltip>
        </button>
      </ProfilePopoverController>
    </UserAvatar>
    <WithTooltip
      id="names-overflow"
      placement="top"
      title="first.last4, first.last5"
    >
      <OverlayTrigger
        defaultOverlayShown={false}
        delay={400}
        disabled={false}
        overlay={<Unknown />}
        placement="top"
        trigger={
          Array [
            "hover",
            "focus",
          ]
        }
      >
        <OverlayTrigger
          defaultOverlayShown={false}
          delay={400}
          overlay={
            <OverlayWrapper
              intl={
                Object {
                  "$t": [Function],
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "defaultRichTextElements": undefined,
                  "fallbackOnEmptyString": true,
                  "formatDate": [Function],
                  "formatDateTimeRange": [Function],
                  "formatDateToParts": [Function],
                  "formatDisplayName": [Function],
                  "formatList": [Function],
                  "formatListToParts": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getDisplayNames": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "onError": [Function],
                  "onWarn": [Function],
                  "textComponent": "span",
                  "timeZone": "Etc/UTC",
                  "wrapRichTextChunksInFragment": undefined,
                }
              }
            />
          }
          placement="top"
          trigger={
            Array [
              "hover",
              "focus",
            ]
          }
        >
          <Avatar
            onBlur={[Function]}
            onClick={null}
            onFocus={[Function]}
            onMouseOut={[Function]}
            onMouseOver={[Function]}
            size="xl"
            style={
              Object {
                "background": "rgb(240, 240, 241)",
              }
            }
            tabIndex={0}
            text="+2"
          >
            <div
              className="Avatar Avatar-xl Avatar-plain"
              data-content="+2"
              onBlur={[Function]}
              onClick={null}
              onFocus={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              style={
                Object {
                  "background": "rgb(240, 240, 241)",
                }
              }
              tabIndex={0}
            />
          </Avatar>
        </OverlayTrigger>
      </OverlayTrigger>
    </WithTooltip>
  </div>
</Avatars>
`;

exports[`components/widgets/users/Avatars should support userIds 1`] = `
<Avatars
  size="xl"
  userIds={
    Array [
      "1",
      "2",
      "3",
    ]
  }
>
  <div
    className="Avatars Avatars___xl"
  >
    <UserAvatar
      key="1"
      size="xl"
      style={
        Object {
          "background": "rgb(240, 240, 241)",
        }
      }
      userId="1"
    >
      <ProfilePopoverController
        src="/api/v4/users/1/image?_=0"
        triggerComponentAs="button"
        triggerComponentClass="style--none rounded-button"
        userId="1"
      >
        <button
          aria-expanded="false"
          aria-haspopup="dialog"
          className="style--none rounded-button"
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onPointerDown={[Function]}
        >
          <WithTooltip
            id="tooltip-name-1"
            placement="top"
            title="first.last1"
          >
            <OverlayTrigger
              defaultOverlayShown={false}
              delay={400}
              disabled={false}
              overlay={<Unknown />}
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                defaultOverlayShown={false}
                delay={400}
                overlay={
                  <OverlayWrapper
                    intl={
                      Object {
                        "$t": [Function],
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "fallbackOnEmptyString": true,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "onError": [Function],
                        "onWarn": [Function],
                        "textComponent": "span",
                        "timeZone": "Etc/UTC",
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  />
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <Avatar
                  onBlur={[Function]}
                  onClick={null}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  size="xl"
                  style={
                    Object {
                      "background": "rgb(240, 240, 241)",
                    }
                  }
                  tabIndex={-1}
                  url="/api/v4/users/1/image?_=1620680333191"
                >
                  <img
                    alt="user profile image"
                    className="Avatar Avatar-xl"
                    loading="lazy"
                    onBlur={[Function]}
                    onClick={null}
                    onError={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    src="/api/v4/users/1/image?_=1620680333191"
                    style={
                      Object {
                        "background": "rgb(240, 240, 241)",
                      }
                    }
                    tabIndex={-1}
                  />
                </Avatar>
              </OverlayTrigger>
            </OverlayTrigger>
          </WithTooltip>
        </button>
      </ProfilePopoverController>
    </UserAvatar>
    <UserAvatar
      key="2"
      size="xl"
      style={
        Object {
          "background": "rgb(240, 240, 241)",
        }
      }
      userId="2"
    >
      <ProfilePopoverController
        src="/api/v4/users/2/image?_=0"
        triggerComponentAs="button"
        triggerComponentClass="style--none rounded-button"
        userId="2"
      >
        <button
          aria-expanded="false"
          aria-haspopup="dialog"
          className="style--none rounded-button"
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onPointerDown={[Function]}
        >
          <WithTooltip
            id="tooltip-name-2"
            placement="top"
            title="first.last2"
          >
            <OverlayTrigger
              defaultOverlayShown={false}
              delay={400}
              disabled={false}
              overlay={<Unknown />}
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                defaultOverlayShown={false}
                delay={400}
                overlay={
                  <OverlayWrapper
                    intl={
                      Object {
                        "$t": [Function],
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "fallbackOnEmptyString": true,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "onError": [Function],
                        "onWarn": [Function],
                        "textComponent": "span",
                        "timeZone": "Etc/UTC",
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  />
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <Avatar
                  onBlur={[Function]}
                  onClick={null}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  size="xl"
                  style={
                    Object {
                      "background": "rgb(240, 240, 241)",
                    }
                  }
                  tabIndex={-1}
                  url="/api/v4/users/2/image?_=1620680333191"
                >
                  <img
                    alt="user profile image"
                    className="Avatar Avatar-xl"
                    loading="lazy"
                    onBlur={[Function]}
                    onClick={null}
                    onError={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    src="/api/v4/users/2/image?_=1620680333191"
                    style={
                      Object {
                        "background": "rgb(240, 240, 241)",
                      }
                    }
                    tabIndex={-1}
                  />
                </Avatar>
              </OverlayTrigger>
            </OverlayTrigger>
          </WithTooltip>
        </button>
      </ProfilePopoverController>
    </UserAvatar>
    <UserAvatar
      key="3"
      size="xl"
      style={
        Object {
          "background": "rgb(240, 240, 241)",
        }
      }
      userId="3"
    >
      <ProfilePopoverController
        src="/api/v4/users/3/image?_=0"
        triggerComponentAs="button"
        triggerComponentClass="style--none rounded-button"
        userId="3"
      >
        <button
          aria-expanded="false"
          aria-haspopup="dialog"
          className="style--none rounded-button"
          onClick={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onPointerDown={[Function]}
        >
          <WithTooltip
            id="tooltip-name-3"
            placement="top"
            title="first.last3"
          >
            <OverlayTrigger
              defaultOverlayShown={false}
              delay={400}
              disabled={false}
              overlay={<Unknown />}
              placement="top"
              trigger={
                Array [
                  "hover",
                  "focus",
                ]
              }
            >
              <OverlayTrigger
                defaultOverlayShown={false}
                delay={400}
                overlay={
                  <OverlayWrapper
                    intl={
                      Object {
                        "$t": [Function],
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "defaultRichTextElements": undefined,
                        "fallbackOnEmptyString": true,
                        "formatDate": [Function],
                        "formatDateTimeRange": [Function],
                        "formatDateToParts": [Function],
                        "formatDisplayName": [Function],
                        "formatList": [Function],
                        "formatListToParts": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatNumberToParts": [Function],
                        "formatPlural": [Function],
                        "formatRelativeTime": [Function],
                        "formatTime": [Function],
                        "formatTimeToParts": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getDisplayNames": [Function],
                          "getListFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralRules": [Function],
                          "getRelativeTimeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "onError": [Function],
                        "onWarn": [Function],
                        "textComponent": "span",
                        "timeZone": "Etc/UTC",
                        "wrapRichTextChunksInFragment": undefined,
                      }
                    }
                  />
                }
                placement="top"
                trigger={
                  Array [
                    "hover",
                    "focus",
                  ]
                }
              >
                <Avatar
                  onBlur={[Function]}
                  onClick={null}
                  onFocus={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  size="xl"
                  style={
                    Object {
                      "background": "rgb(240, 240, 241)",
                    }
                  }
                  tabIndex={-1}
                  url="/api/v4/users/3/image?_=1620680333191"
                >
                  <img
                    alt="user profile image"
                    className="Avatar Avatar-xl"
                    loading="lazy"
                    onBlur={[Function]}
                    onClick={null}
                    onError={[Function]}
                    onFocus={[Function]}
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                    src="/api/v4/users/3/image?_=1620680333191"
                    style={
                      Object {
                        "background": "rgb(240, 240, 241)",
                      }
                    }
                    tabIndex={-1}
                  />
                </Avatar>
              </OverlayTrigger>
            </OverlayTrigger>
          </WithTooltip>
        </button>
      </ProfilePopoverController>
    </UserAvatar>
  </div>
</Avatars>
`;
