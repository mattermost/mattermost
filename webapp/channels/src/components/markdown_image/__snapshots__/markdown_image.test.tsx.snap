// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/MarkdownImage should match snapshot 1`] = `
<Connect(Component)
  imageMetadata={
    Object {
      "format": "png",
      "frameCount": 0,
      "height": 90,
      "width": 1041,
    }
  }
  src="/images/logo.png"
>
  <Component />
</Connect(Component)>
`;

exports[`components/MarkdownImage should match snapshot for SizeAwareImage dimensions 1`] = `
<injectIntl(SizeAwareImage)
  alt="test image"
  className="markdown-inline-img markdown-inline-img--hover markdown-inline-img--no-border"
  dimensions={
    Object {
      "format": "jpg",
      "frameCount": 0,
      "height": 90,
      "width": 100,
    }
  }
  height=""
  onClick={[Function]}
  onImageLoadFail={[Function]}
  onImageLoaded={[Function]}
  showLoader={false}
  src="safeSrc"
  title="test title"
  width=""
/>
`;

exports[`components/MarkdownImage should match snapshot for broken link 1`] = `
<Connect(Component)
  imageMetadata={
    Object {
      "format": "png",
      "frameCount": 0,
      "height": 10,
      "width": 10,
    }
  }
  src="brokenLink"
>
  <Component />
</Connect(Component)>
`;

exports[`components/MarkdownImage should provide image src as an alt text for MarkdownImageExpand if image has no own alt text 1`] = `
<div>
  <Connect(MarkdownImageExpand)
    alt="https://example.com/image.png"
    imageKey="https://example.com/image.png"
    postId="post_id"
  >
    <injectIntl(SizeAwareImage)
      alt=""
      className="markdown-inline-img markdown-inline-img--hover cursor--pointer a11y--active"
      dimensions={Object {}}
      height="250"
      onClick={[Function]}
      onImageLoadFail={[Function]}
      onImageLoaded={[Function]}
      showLoader={false}
      src="https://example.com/image.png"
      title="test title"
      width="50"
    />
  </Connect(MarkdownImageExpand)>
</div>
`;

exports[`components/MarkdownImage should render a link if the source is unsafe 1`] = `
<div
  style={
    Object {
      "display": "inline-block",
    }
  }
>
  <img
    alt="test image"
    className="markdown-inline-img broken-image"
    src=""
  />
</div>
`;

exports[`components/MarkdownImage should render an image with no preview if the source is safe and the image is a link 1`] = `
<div>
  <injectIntl(SizeAwareImage)
    alt="test image"
    className="markdown-inline-img markdown-inline-img--hover markdown-inline-img--no-border"
    dimensions={
      Object {
        "format": "png",
        "frameCount": 0,
        "height": 90,
        "width": 1041,
      }
    }
    height=""
    onClick={[Function]}
    onImageLoadFail={[Function]}
    onImageLoaded={[Function]}
    showLoader={false}
    src="https://example.com/image.png"
    title="test title"
    width=""
  />
</div>
`;

exports[`components/MarkdownImage should render an image with preview modal if the source is safe 1`] = `
<div>
  <injectIntl(SizeAwareImage)
    alt="test image"
    className="markdown-inline-img markdown-inline-img--hover cursor--pointer a11y--active"
    dimensions={
      Object {
        "format": "png",
        "frameCount": 0,
        "height": 90,
        "width": 1041,
      }
    }
    height=""
    onClick={[Function]}
    onImageLoadFail={[Function]}
    onImageLoaded={[Function]}
    showLoader={false}
    src="https://example.com/image.png"
    title="test title"
    width=""
  />
</div>
`;

exports[`components/MarkdownImage should render image with MarkdownImageExpand if it is taller than 100px 1`] = `
<div>
  <Connect(MarkdownImageExpand)
    alt="test image"
    imageKey="https://example.com/image.png"
    postId="post_id"
  >
    <injectIntl(SizeAwareImage)
      alt="test image"
      className="markdown-inline-img markdown-inline-img--hover cursor--pointer a11y--active"
      dimensions={Object {}}
      height="250"
      onClick={[Function]}
      onImageLoadFail={[Function]}
      onImageLoaded={[Function]}
      showLoader={false}
      src="https://example.com/image.png"
      title="test title"
      width="50"
    />
  </Connect(MarkdownImageExpand)>
</div>
`;
