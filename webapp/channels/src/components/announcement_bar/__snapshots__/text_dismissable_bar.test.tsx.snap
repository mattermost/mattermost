// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/TextDismissableBar should match snapshot 1`] = `
<Connect(AnnouncementBar)
  extraProp="test"
  handleClose={[Function]}
  message={
    <React.Fragment>
      <i
        className="icon icon-information-outline"
      />
      <Memo(Connect(Markdown))
        message="sample text"
        options={
          Object {
            "mentionHighlight": false,
            "singleline": true,
          }
        }
      />
    </React.Fragment>
  }
  showCloseButton={true}
/>
`;

exports[`components/TextDismissableBar should match snapshot, with an internal and an external link 1`] = `
<Connect(AnnouncementBar)
  extraProp="test"
  handleClose={[Function]}
  message={
    <React.Fragment>
      <i
        className="icon icon-information-outline"
      />
      <Memo(Connect(Markdown))
        message="A [link](http://testurl.com/admin_console/) with an internal url and a [link](http://other-url.com/admin_console/) with an external url"
        options={
          Object {
            "mentionHighlight": false,
            "singleline": true,
          }
        }
      />
    </React.Fragment>
  }
  showCloseButton={true}
  siteURL="http://testurl.com"
/>
`;

exports[`components/TextDismissableBar should match snapshot, with an internal url 1`] = `
<Connect(AnnouncementBar)
  extraProp="test"
  handleClose={[Function]}
  message={
    <React.Fragment>
      <i
        className="icon icon-information-outline"
      />
      <Memo(Connect(Markdown))
        message="A [link](http://testurl.com/admin_console/) with an internal url"
        options={
          Object {
            "mentionHighlight": false,
            "singleline": true,
          }
        }
      />
    </React.Fragment>
  }
  showCloseButton={true}
  siteURL="http://testurl.com"
/>
`;

exports[`components/TextDismissableBar should match snapshot, with ean external url 1`] = `
<Connect(AnnouncementBar)
  extraProp="test"
  handleClose={[Function]}
  message={
    <React.Fragment>
      <i
        className="icon icon-information-outline"
      />
      <Memo(Connect(Markdown))
        message="A [link](http://otherurl.com/admin_console/) with an external url"
        options={
          Object {
            "mentionHighlight": false,
            "singleline": true,
          }
        }
      />
    </React.Fragment>
  }
  showCloseButton={true}
  siteURL="http://testurl.com"
/>
`;

exports[`components/TextDismissableBar should match snapshot, with link but without siteURL 1`] = `
<Connect(AnnouncementBar)
  extraProp="test"
  handleClose={[Function]}
  message={
    <React.Fragment>
      <i
        className="icon icon-information-outline"
      />
      <Memo(Connect(Markdown))
        message="A [link](http://testurl.com/admin_console/)"
        options={
          Object {
            "mentionHighlight": false,
            "singleline": true,
          }
        }
      />
    </React.Fragment>
  }
  showCloseButton={true}
/>
`;
