// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`messageHtmlToComponent At mention 1`] = `
<p>
  <span
    className="mention--highlight"
  >
    <span
      data-mention="joram"
    >
      <Memo(Connect(Component))
        disableGroupHighlight={false}
        disableHighlight={false}
        mentionName="joram"
      >
        @joram
      </Memo(Connect(Component))>
    </span>
  </span>
</p>
`;

exports[`messageHtmlToComponent At mention 2`] = `
<p>
  <span
    data-mention="joram"
  >
    <Memo(Connect(Component))
      disableGroupHighlight={false}
      disableHighlight={true}
      mentionName="joram"
    >
      @joram
    </Memo(Connect(Component))>
  </span>
</p>
`;

exports[`messageHtmlToComponent At mention with group highlight disabled 1`] = `
<p>
  <span
    data-mention="developers"
  >
    <Memo(Connect(Component))
      disableGroupHighlight={false}
      disableHighlight={false}
      mentionName="developers"
    >
      @developers
    </Memo(Connect(Component))>
  </span>
</p>
`;

exports[`messageHtmlToComponent At mention with group highlight disabled 2`] = `
<p>
  <span
    data-mention="developers"
  >
    <Memo(Connect(Component))
      disableGroupHighlight={true}
      disableHighlight={false}
      mentionName="developers"
    >
      @developers
    </Memo(Connect(Component))>
  </span>
</p>
`;

exports[`messageHtmlToComponent Inline markdown image 1`] = `
<div
  className="markdown-inline-img__container"
>
  <Memo(Connect(MarkdownImage))
    alt="Mattermost"
    className="markdown-inline-img"
    imageIsLink={false}
    postId="post_id"
    postType="system_header_change"
    src="/images/icon.png"
  />
   and a 
  <a
    className="theme markdown__link"
    href="http://link"
    rel="noreferrer"
    target="_blank"
  >
    link
  </a>
</div>
`;

exports[`messageHtmlToComponent Inline markdown image where image is link 1`] = `
<div
  className="markdown-inline-img__container"
>
  <a
    className="theme markdown__link"
    href="http://images/icon.png"
    rel="noreferrer"
    target="_blank"
  >
    <Memo(Connect(MarkdownImage))
      alt="Mattermost"
      className="markdown-inline-img"
      imageIsLink={true}
      postId="post_id"
      postType="system_header_change"
      src="images/icon.png"
    />
  </a>
</div>
`;

exports[`messageHtmlToComponent Inline markdown image with fileInfo 1`] = `
<div
  className="markdown-inline-img__container"
>
  <Memo(Connect(MarkdownImage))
    alt="Test image"
    className="markdown-inline-img"
    fileInfo={
      Object {
        "archived": false,
        "channel_id": "channel_id",
        "clientId": "client_id",
        "create_at": 1,
        "delete_at": 1,
        "extension": "gif",
        "has_preview_image": true,
        "height": 200,
        "id": "file123",
        "link": "/images/test.gif",
        "mime_type": "mime_type",
        "name": "test.gif",
        "size": 1,
        "update_at": 1,
        "user_id": "user_id",
        "width": 350,
      }
    }
    imageIsLink={false}
    postId="post_id"
    src="/images/test.gif"
  />
</div>
`;

exports[`messageHtmlToComponent html 1`] = `
<CodeBlock
  code="<div>This is a html div</div>"
  language="html"
  searchedContent=""
/>
`;

exports[`messageHtmlToComponent latex 1`] = `
Array [
  <p>
    This is some latex!
  </p>,
  "
",
  <Memo(Connect(Component))
    content="x^2 + y^2 = z^2"
  />,
  <Memo(Connect(Component))
    content="F_m - 2 = F_0 F_1 \\\\dots F_{m-1}"
  />,
  <p>
    That was some latex!
  </p>,
]
`;

exports[`messageHtmlToComponent link with enabled a tooltip plugin 1`] = `
<p>
  lorem ipsum 
  <PluginLinkTooltip
    nodeAttributes={
      Object {
        "className": "theme markdown__link",
        "href": "http://www.dolor.com",
        "rel": "noreferrer",
        "target": "_blank",
      }
    }
  >
    www.dolor.com
  </PluginLinkTooltip>
   sit amet
</p>
`;

exports[`messageHtmlToComponent link without enabled tooltip plugins 1`] = `
<p>
  lorem ipsum 
  <a
    className="theme markdown__link"
    href="http://www.dolor.com"
    rel="noreferrer"
    target="_blank"
  >
    www.dolor.com
  </a>
   sit amet
</p>
`;

exports[`messageHtmlToComponent plain text 1`] = `
<p>
  Hello, world!
</p>
`;

exports[`messageHtmlToComponent typescript 1`] = `
<CodeBlock
  code="const myFunction = () => {
    console.log('This is a meaningful function');
};"
  language="typescript"
  searchedContent=""
/>
`;

exports[`messageHtmlToComponent typescript 2`] = `
<p>
  Text before typescript codeblock
            
  <span
    className="codespan__pre-wrap"
  >
    <code>
      typescript
            const myFunction = () =&gt; {
                console.log('This is a test function');
            };
    </code>
  </span>
  
            text after typescript block
</p>
`;
